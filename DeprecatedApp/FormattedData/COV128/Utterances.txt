ROOT +++$+++ SP11040951 +++$+++ ROOT +++$+++ ROOT +++$+++ 2020-10-27T06:48:32Z +++$+++ http2 client: enable http2 connection health check **What type of PR is this?**
/kind bug


**What this PR does / why we need it**:
There are several confirmed client connection issues with Go's http2 implementation.
And [it's also proved](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-671814091) that enabling http2 connection health check helps kubernetes client recover from such issues.

This PR updates golang.org/x/net to required version and enables http2 health check by default.

**Which issue(s) this PR fixes**:
Fixes #87615 #91963 #92164

**Special notes for your reviewer**:
Do we need a release note for this ?


**Does this PR introduce a user-facing change?**:
```release-note
NONE
```

**Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.**:
```docs

```
/area dependency
/sig api-machinery

/cc @liggitt @JensErat +++$+++ 0 +++$+++ 0
COM0 +++$+++ SP20407524 +++$+++ ROOT +++$+++ ROOT +++$+++ 2020-10-27T06:48:35Z +++$+++ @povsister: GitHub didn't allow me to request PR reviews from the following users: JensErat.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) and repo collaborators can review this PR, and authors cannot review their own PRs.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/95898):

>**What type of PR is this?**
>/kind bug
>
>
>**What this PR does / why we need it**:
>There are several confirmed client connection issues with Go's http2 implementation.
>And [it's also proved](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-671814091) that enabling http2 connection health check helps kubernetes client recover from such issues.
>
>This PR updates golang.org/x/net to required version and enables http2 health check by default.
>
>**Which issue(s) this PR fixes**:
>Fixes #87615 #91963 #92164
>
>**Special notes for your reviewer**:
>Do we need a release note for this ?
>
>
>**Does this PR introduce a user-facing change?**:
>```release-note
>NONE
>```
>
>**Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.**:
>```docs
>
>```
>/area dependency
>/sig api-machinery
>
>/cc @liggitt @JensErat


Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details> +++$+++ 0 +++$+++ 0
COM1 +++$+++ SP20407524 +++$+++ ROOT +++$+++ COM0 +++$+++ 2020-10-27T06:48:41Z +++$+++ Hi @povsister. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>
 +++$+++ 0 +++$+++ 0
COM2 +++$+++ SP20407524 +++$+++ ROOT +++$+++ COM1 +++$+++ 2020-10-27T06:49:13Z +++$+++ [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href="https://github.com/kubernetes/kubernetes/pull/95898#" title="Author self-approved">povsister</a>*
To complete the [pull request process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process), please assign **liggitt** after the PR has been reviewed.
You can assign the PR to them by writing `/assign @liggitt` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**
- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={"approvers":["liggitt"]} --> +++$+++ 0 +++$+++ 0
COM3 +++$+++ SP6450081 +++$+++ ROOT +++$+++ COM2 +++$+++ 2020-10-27T10:22:16Z +++$+++ :thinking: it looks a duplicate of https://github.com/kubernetes/kubernetes/pull/94844 +++$+++ 0 +++$+++ 0
COM4 +++$+++ SP23304 +++$+++ ROOT +++$+++ COM3 +++$+++ 2020-10-27T10:49:15Z +++$+++ @povsister - @aojea is right. please check the other one out and ensure that fixes your problem as well.

/close +++$+++ 0 +++$+++ 0
COM5 +++$+++ SP20407524 +++$+++ ROOT +++$+++ COM4 +++$+++ 2020-10-27T10:49:29Z +++$+++ @dims: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/95898#issuecomment-717155585):

>@povsister - @aojea is right. please check the other one out and ensure that fixes your problem as well.
>
>/close


Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details> +++$+++ 0 +++$+++ 0
COM6 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM5 +++$+++ 2020-10-27T10:50:46Z +++$+++ > ðŸ¤” it looks a duplicate of #94844

Not really, original solution proposed in #94844 uses a modified http2 package which breaks backward compatibility and is not merged into golang/net master.
And he didn't push another fix till I proposed this fix.

To be honest(no offense), code and commit history in #94844 looks nasty... +++$+++ 0 +++$+++ 0
COM7 +++$+++ SP23304 +++$+++ ROOT +++$+++ COM6 +++$+++ 2020-10-27T10:52:50Z +++$+++ /reopen +++$+++ 0 +++$+++ 0
COM8 +++$+++ SP20407524 +++$+++ ROOT +++$+++ COM7 +++$+++ 2020-10-27T10:53:05Z +++$+++ @dims: Reopened this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/95898#issuecomment-717157525):

>/reopen


Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details> +++$+++ 0 +++$+++ 0
COM9 +++$+++ SP23304 +++$+++ ROOT +++$+++ COM8 +++$+++ 2020-10-27T10:53:41Z +++$+++ @povsister please comment on your concerns in the other PR. that is already approved and is likely to merge first. +++$+++ 0 +++$+++ 0
COM10 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM9 +++$+++ 2020-10-27T10:57:03Z +++$+++ Thx, I am on mobile right now. Will check out for another PR later. +++$+++ 0 +++$+++ 0
COM11 +++$+++ SP6450081 +++$+++ ROOT +++$+++ COM10 +++$+++ 2020-10-27T13:08:51Z +++$+++ I think it doesn' t hurt if we test it in the meantime :sweat_smile: 
/ok-to-test +++$+++ 0 +++$+++ 0
COM12 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM11 +++$+++ 2020-10-27T13:22:21Z +++$+++ @aojea Thanks, seem one test job got OOMKilled. I will re-trigger it later. +++$+++ 0 +++$+++ 0
COM13 +++$+++ SP12867714 +++$+++ ROOT +++$+++ COM12 +++$+++ 2020-10-27T14:12:24Z +++$+++ > > ðŸ¤” it looks a duplicate of #94844
> 
> Not really, original solution proposed in #94844 uses a modified http2 package which breaks backward compatibility and is not merged into golang/net master.
> And he didn't push another fix till I proposed this fix.
> 
> To be honest(no offense), code and commit history in #94844 looks nasty...

@povsister I don't know why you're so hysterical about which PR should be merged, and what I want to clarify here is that obviously I found this problem before you, and I have not even found the existence of golang/net@08b3837 until @fisherxu mentioned it in my PR, that why I push a new commit using http2.ConfigureTransports today and open this [PR](https://github.com/golang/net/pull/84) trying to fix the problem before. And besides I didn't have any reference on your PR as I have not even noticed you before. +++$+++ 0 +++$+++ 0
COM14 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM13 +++$+++ 2020-10-27T14:43:59Z +++$+++ @duyanghao Calm down. I do not mind whose PR get merged. We are talking things technically, don't make it personal. 
If you insist. I'd like to tell you that [we have already talked about this issue months ago](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-647915537).

I prefer forward-looking solution instead of solving questions at hand. That's why I have opposition to your PR.

I have every concern with cause and conclusion posted in you PR, that's technical.
You have disagreement but no reason. That's personal.

If you feel disrespect on "nasty", I apologize. I have neat freak on coding : )
And you should learn how to use Git with clear&clean commit history.

 +++$+++ 0 +++$+++ 0
COM15 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM14 +++$+++ 2020-10-27T14:49:59Z +++$+++ /retest +++$+++ 0 +++$+++ 0
COM16 +++$+++ SP6450081 +++$+++ ROOT +++$+++ COM15 +++$+++ 2020-10-27T14:54:06Z +++$+++ This is not a competition and please respect the code of conduct
https://kubernetes.io/community/code-of-conduct/#contributor-code-of-conduct

There are certain comments in this thread that are clearly uncalled-for.


 +++$+++ 1 +++$+++ 0
COM17 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM16 +++$+++ 2020-10-27T16:02:28Z +++$+++ /retest +++$+++ 0 +++$+++ 0
COM18 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM17 +++$+++ 2020-10-27T17:42:34Z +++$+++ Looks like the update to golang.org/x/sys package breaks azure disk driver?

 It says `event for azuredisk-volume-tester-pbml9-84db65759d-9p2vq: {kubelet 9131k8s000} FailedMount: Unable to attach or mount volumes: unmounted volumes=[test-volume-1], unattached volumes=[test-volume-1 default-token-klq5d]: timed out waiting for the condition`

Code problem should not cause operation timeout. I think it maybe overload of test infra. I will retry next morning. +++$+++ 0 +++$+++ 0
COM19 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM18 +++$+++ 2020-10-27T20:05:14Z +++$+++ /retest +++$+++ 0 +++$+++ 0
COM20 +++$+++ SP3780986 +++$+++ ROOT +++$+++ COM19 +++$+++ 2020-10-27T20:12:31Z +++$+++ /assign @sttts @p0lyn0mial  +++$+++ 0 +++$+++ 0
COM21 +++$+++ SP3780986 +++$+++ ROOT +++$+++ COM20 +++$+++ 2020-10-27T20:12:42Z +++$+++ /triage accepted
 +++$+++ 0 +++$+++ 0
COM22 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM21 +++$+++ 2020-10-27T23:00:02Z +++$+++ @JensErat Thanks for your comments. Just pushed another commit to fix typo.
If this get approved, I'll squash the rest commits.
 +++$+++ 0 +++$+++ 0
COM23 +++$+++ SP6450081 +++$+++ ROOT +++$+++ COM22 +++$+++ 2020-10-28T08:24:43Z +++$+++ > At Daimler, our workaround was patching x/net to keep `PingTimeout` default at 15 seconds but enforce a `ReadIdleTimeout` of 30 seconds. I guess this is sufficient for Kubernetes work loads, and at the same time should not really trigger "additional" keep-alive efforts in production too often. 

> If I get it right, this PR sets the default to 90/2=45 seconds, and `t1.IdleConnTimeout` is never set in the entire Kubernetes organization to anything but the default values.


maybe it is me, but I prefer hardcoded timeouts than formulas, is not easy to me to understand which values I'm using this way.
Personally, as I user, I'd like to use the defaults timeouts provided or the ones I set directly, is my mistake if I set them wrong.
I found weird that I set `pingTimeout` to 3 seconds for whatever reason and something configures it to 15 seconds without I'm noticing, or I'm not understanding correctly it? +++$+++ 0 +++$+++ 0
COM24 +++$+++ SP11040951 +++$+++ ROOT +++$+++ COM23 +++$+++ 2020-10-28T09:47:19Z +++$+++ > If I get it right, this PR sets the default to 90/2=45 seconds, and t1.IdleConnTimeout is never set in the entire Kubernetes organization to anything but the default values.

By default Kubernetes always set `t1.IdleConnTimeout` to default 90s. I added the if-compare section just for possible exceptions in the future, it ensures functionality of healthCheck.

> Personally, as I user, I'd like to use the defaults timeouts provided or the ones I set directly, is my mistake if I set them wrong.

For now, http2 Transport configuration is purely internal. We do not expose such configuration to users, that's probably why we don't need release note.
So I think we'd better make it reasonable even with some confusing formula.(still can be explained by sufficient comments in code, It should not be a big problem.) +++$+++ 1 +++$+++ 0
COM25 +++$+++ SP980082 +++$+++ ROOT +++$+++ COM24 +++$+++ 2020-10-28T12:44:19Z +++$+++ /uncc
/cc @caesarxuchao 
/assign @caesarxuchao  +++$+++ 0 +++$+++ 0
COM26 +++$+++ SP12867714 +++$+++ ROOT +++$+++ COM25 +++$+++ 2020-10-28T13:08:17Z +++$+++ > @duyanghao Calm down. I do not mind whose PR get merged. We are talking things technically, don't make it personal.
> If you insist. I'd like to tell you that [we have already talked about this issue months ago](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-647915537).
> 
> I prefer forward-looking solution instead of solving questions at hand. That's why I have opposition to your PR.
> 
> I have every concern with cause and conclusion posted in you PR, that's technical.
> You have disagreement but no reason. That's personal.
> 
> If you feel disrespect on "nasty", I apologize. I have neat freak on coding : )
> And you should learn how to use Git with clear&clean commit history.

@povsister You are so unbelievably arrogant that I don't want to waste my time arguing with you. And I am able to do git sqaush, besides this is my reason against your proposal
>>I do think users should not care much about the http2 health check, and it's not something Kubernetes even want users to notice, therefore I still suggest to set it by some reasonable default values. Besides, in your â€˜proudâ€™ PR, the http2 Transport ReadIdleTimeout is configured as the half of http Transport IdleConnTimeout, Is this reasonable? +++$+++ 0 +++$+++ 0
COM27 +++$+++ SP980082 +++$+++ ROOT +++$+++ COM26 +++$+++ 2020-10-28T13:31:57Z +++$+++ @povsister @duyanghao thank you both for working to resolve the network connection issue. However, the discussion in this PR and in #94844 is distracting from the main goal of fixing the issue, and is violating the [Kubernetes code of conduct](https://kubernetes.io/community/code-of-conduct/) with insulting/derogatory comments. I've locked the discussion here and in #94844 for that reason, and will ask @caesarxuchao to take a look at the approaches in the two PRs and settle on a way to make use of the PingTimeout capability he added. +++$+++ 0 +++$+++ 0
COM28 +++$+++ SP647318 +++$+++ ROOT +++$+++ COM27 +++$+++ 2020-10-28T22:18:33Z +++$+++ This isn't how we have technical disagreements. No amount of technical correctness can make up for treating other people poorly; please don't repeat that behavior. I will close both of these PRs. I'm available via slack or email if more explanation is needed.

Instead, I've asked @caesarxuchao to send a fix for the issue in question. +++$+++ 0 +++$+++ 0
