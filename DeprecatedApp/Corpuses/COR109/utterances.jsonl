{"id": "ROOT", "speaker": "mkArtakMSFT", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2020-10-05T23:19:23Z", "text": "\u23f1\ufe0f Call to action: Help shape the future for ASP.NET Core Hi. Thanks for stopping by.\r \r We're actively working on .NET 6 planning and we would like your help with this.\r In the next few weeks we are going to scan through all the issues in our backlog and identify candidates for .NET 6. To make a decision whether an issue is a good candidate or not for the upcoming release, we also look into the number of upvotes \ud83d\udc4d (and other reactions). To help us prioritize the issues the community feels are most important, please find the issues you want to see resolved and upvote \ud83d\udc4d them.\r \r \r **\u26a0\ufe0f Please don't add descriptions of what you want to see as comments in this issue. Simply find an existing of file a new issue and upvote it**", "meta": {"posReactions": "45", "negReactions": "0"}}
{"id": "COM0", "speaker": "boukenka", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2020-10-06T09:14:28Z", "text": "AoT compilation https://github.com/dotnet/aspnetcore/issues/5466", "meta": {"posReactions": "186", "negReactions": "0"}}
{"id": "COM1", "speaker": "boukenka", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2020-10-06T09:15:04Z", "text": "SVG Support in Blazor https://github.com/dotnet/aspnetcore/issues/18271", "meta": {"posReactions": "103", "negReactions": "0"}}
{"id": "COM2", "speaker": "Julien-Marpault", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2020-10-06T09:22:33Z", "text": "HTML Autofocus supprt in Blazor WASM", "meta": {"posReactions": "45", "negReactions": "0"}}
{"id": "COM3", "speaker": "Julien-Marpault", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2020-10-06T09:23:05Z", "text": "Projet Reload on save with Kestrel like IIS Express does.", "meta": {"posReactions": "96", "negReactions": "0"}}
{"id": "COM4", "speaker": "glararan", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2020-10-06T11:08:41Z", "text": "#26091 Download compressed resources by default", "meta": {"posReactions": "28", "negReactions": "0"}}
{"id": "COM5", "speaker": "199621616", "conversation_id": "ROOT", "reply_to": "COM4", "timestamp": "2020-10-06T11:17:57Z", "text": "MobileBlazorbindings in the experiment has got a good response. We hope that it can become a formal project of Microsoft as soon as possible, and can provide complete functions, so that users can focus on their own business logic, especially the hybrid applications. It seems to have a chance to surpass electron, more streamlined but more powerful.", "meta": {"posReactions": "58", "negReactions": "0"}}
{"id": "COM6", "speaker": "rogihee", "conversation_id": "ROOT", "reply_to": "COM5", "timestamp": "2020-10-06T11:51:58Z", "text": "Editor & debugger improvements and Hot Reload (Edit & Continue) : [https://github.com/dotnet/aspnetcore/issues/5456](https://github.com/dotnet/aspnetcore/issues/5456)", "meta": {"posReactions": "168", "negReactions": "0"}}
{"id": "COM7", "speaker": "expcat", "conversation_id": "ROOT", "reply_to": "COM6", "timestamp": "2020-10-06T13:19:32Z", "text": "#11558 \r\nStreaming API support to MVC\r\nExample: https://github.com/dotnet/aspnetcore/issues/4833#issuecomment-298857229\r\n```\r\npublic class MyStreamingApi : Controller\r\n{\r\n     [HttpGet(\"/tweets\")]\r\n     [Streaming]\r\n     public async IAsyncEnumerable<Tweet> Get()\r\n     {\r\n         while (var tweet = await GetOneTweet())\r\n         { \r\n             yield return tweet;\r\n         }\r\n     }\r\n}\r\n```", "meta": {"posReactions": "106", "negReactions": "0"}}
{"id": "COM8", "speaker": "mkArtakMSFT", "conversation_id": "ROOT", "reply_to": "COM7", "timestamp": "2020-10-06T15:36:41Z", "text": "All this is great, folks. Please make sure to upvote on the related issues, rather than linking issues here. That's what we're going to look at after all.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM9", "speaker": "expcat", "conversation_id": "ROOT", "reply_to": "COM8", "timestamp": "2020-10-06T16:10:45Z", "text": "@mkArtakMSFT #11558 is locked, we can't to upvote.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM10", "speaker": "papyr", "conversation_id": "ROOT", "reply_to": "COM9", "timestamp": "2020-10-06T16:16:28Z", "text": "Feature Request: **`Drop-in component for ASP Identity Administration, Portals, UI, SSO, Claims, AD-Sync, Token, Multi.Tenant Management`** so that the Visual Studio templates don't require commercial licensed 3rd party components.\r\n\r\nI have been watching/waiting few yrs. patiently, however some recent changes have forced me to request -- Microsoft revisit this for their developer community, keeping in mind some of the pricing out there compares to the salaries of 10 to 15 developers in Bangladesh, Vietnam, India, Philippines etc.\r\n\r\nCore & Basic need, yet very complex and critical.\r\n\r\nThere's a void in .NET native drop-in solution, unlike the Java, PHP Stacks etc, where there are many native drop in Identity Administration & Management Frameworks options that are leveraged across all their platforms seamlessly by developers, for e.g. the J2EE Pluggable Identity Management Framework or JSR 168 or JSR 286 or JSR-351 or JSR-375.\r\n\r\nWhy is this important? because using Java or PHP, it has allowed easy, clear, core and basic functionalities in those native stacks. As a result if you look `JSR 168` or `JSR 286` or `JSR-351` or `JSR-375` Multi-tenants, [Group to roles, or to claims](https://javaee.github.io/security-spec/spec/jsr375-spec.html#_group_to_role_mapping) vice versa is so easy vs. NET , mobile devices, portals, they all work seamlessly and cohesively with security fixes managed by either IBM or SalesForce or Oracle or Red Hat etc. This is enables developer to be productive right out of the gate.\r\n\r\nIn .Net there is void/very limited support, always requiring a combination of 3rd parties as a barrier to entry & adoption of ASP app. This is non-trivial for developers and security vulnerability that requires the attention of Microsoft Experts.\r\n\r\nExample: We have private information sharing site non OSS for the community almost free (pay if you want), and when we started with web forms, then Simple Membership, the Identity, Identity 2 ASP MVC we had implement much of it on top of these from scratch, when we moved to .NET Core it was another effort. Besides the development there was a lot of confusion on the internal concepts and how they now meant new things. Roles, Claims, Federation, SAML then SAML 2.0 and then Open ID 2.\r\n\r\nDescribe the solution you'd like\r\n\r\n- A drop-in is extensible solution that supports ASP Identity eco-system, Administration, UI, SSO, Token, Multi-tenant Management\r\n- A configuration section to turn on-off the various features.\r\n- Embedded into VS Templates (remove Identity Server, use native MS option etc.)\r\n- Allow-Easy AD Active Directory Integration\r\n- `User Defined/Created Fields UDF` from the Admin level Support.\r\n- The current options and the pricing eliminate many of the existing applications from continuing usage on the .NET stack without extensive retooling or completely abandoning the MS framework.\r\n-  SAML2/CAS [per](https://github.com/dotnet/aspnetcore/issues/26625#issuecomment-710908106) @tbonham\r\n-  Allow template option `Configuration.MultiTenancy.IsEnabled = true;` [Global DataFilter for Tenant entities](https://github.com/dotnet/aspnetcore/issues/27006#issue-723795948)\r\n\r\nIts high time MS address this core gate-keeping feature!!", "meta": {"posReactions": "89", "negReactions": "4"}}
{"id": "COM11", "speaker": "papyr", "conversation_id": "ROOT", "reply_to": "COM10", "timestamp": "2020-10-06T16:30:07Z", "text": "- [ ] Controller/API `DDOS throttling` support\r\n- [ ] Login Controller/API Captcha Anti Spambot support\r\n- [ ] Timeouts are easily by passed using Singal-R and there's [no way to force anonymous connections to disconnect](https://stackoverflow.com/questions/49590384/signalr-persist-connections-for-anonymous-users)\r\n- [ ] No way to handle anonymous chats on public website. For e.g. if _Web User is Surfing/browsing for help or FAQ on product/chat_ on ASP website with SignalR, we have to create a duct-taped solution for this, there is no way to identify them uniquely to create a chat stream/session unless they login. \r\n", "meta": {"posReactions": "12", "negReactions": "0"}}
{"id": "COM12", "speaker": "mkArtakMSFT", "conversation_id": "ROOT", "reply_to": "COM11", "timestamp": "2020-10-06T16:50:31Z", "text": "> @mkArtakMSFT #11558 is locked, we can't to upvote.\r\n\r\n@expcat I've reopened it!", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM13", "speaker": "mkArtakMSFT", "conversation_id": "ROOT", "reply_to": "COM12", "timestamp": "2020-10-06T16:51:52Z", "text": "@papyr please upvote to the related issues and if you can't find such, create new issues for each one separately. That way we can actually track these requests. Otherwise many asks will be lost / forgotten.", "meta": {"posReactions": "2", "negReactions": "0"}}
{"id": "COM14", "speaker": "gulshan", "conversation_id": "ROOT", "reply_to": "COM13", "timestamp": "2020-10-06T18:32:21Z", "text": "Built-in admin panel template and Vue integration.", "meta": {"posReactions": "8", "negReactions": "0"}}
{"id": "COM15", "speaker": "papyr", "conversation_id": "ROOT", "reply_to": "COM14", "timestamp": "2020-10-06T20:59:43Z", "text": "@mrkarMSFT thanks for the idea \ud83d\udc4d but they keep closing my feature requests and locking them, so its not able to upvote!\r\n\r\nCan you please [unlock 26594](https://github.com/dotnet/aspnetcore/issues/26594) to allow voting on the feature please!", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM16", "speaker": "papyr", "conversation_id": "ROOT", "reply_to": "COM15", "timestamp": "2020-10-06T21:02:43Z", "text": "> Built-in admin panel template and Vue integration.\r\n\r\nDo you mean Like Skoruba.Admin then upvote https://github.com/dotnet/aspnetcore/issues/26594", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM17", "speaker": "mnmr", "conversation_id": "ROOT", "reply_to": "COM16", "timestamp": "2020-10-06T22:33:17Z", "text": "RFC 7692 (WebSocket per-message compression) for SignalR. It seems this depends on [runtime#20004](https://github.com/dotnet/runtime/issues/20004) but it seems relevant in this context. There was an old [issue](https://github.com/aspnet/WebSockets/issues/19) referencing this, but it is now closed and I could find no equivalent open issue here, so I am recommending that people upvote on the runtime issue.", "meta": {"posReactions": "3", "negReactions": "0"}}
{"id": "COM18", "speaker": "3GDXC", "conversation_id": "ROOT", "reply_to": "COM17", "timestamp": "2020-10-06T22:49:28Z", "text": "blazor wasm-to-wasm interop without javascript (WASI)  [https://github.com/WebAssembly/interface-types/blob/master/proposals/interface-types/Explainer.md]", "meta": {"posReactions": "13", "negReactions": "0"}}
{"id": "COM19", "speaker": "3GDXC", "conversation_id": "ROOT", "reply_to": "COM18", "timestamp": "2020-10-06T22:52:16Z", "text": "please provide a way to improve the user experience for blazor wasm load progress, progress bar and/or filename currently downloading.", "meta": {"posReactions": "22", "negReactions": "0"}}
{"id": "COM20", "speaker": "3GDXC", "conversation_id": "ROOT", "reply_to": "COM19", "timestamp": "2020-10-06T22:55:19Z", "text": "project template blazor server/wasm using fast (components) as a user interface as quick start/example", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM21", "speaker": "3GDXC", "conversation_id": "ROOT", "reply_to": "COM20", "timestamp": "2020-10-06T22:58:13Z", "text": "please add support for sftp", "meta": {"posReactions": "5", "negReactions": "0"}}
{"id": "COM22", "speaker": "seangwright", "conversation_id": "ROOT", "reply_to": "COM21", "timestamp": "2020-10-07T03:19:22Z", "text": "\"Proposal: View Component Slots\" is locked\r\n\r\n> Provide a built-in or otherwise framework supplied mechanism for View Components, when rendered via a tag helper, to render user-supplied child content that can be injected into the View Component's view template in pre-defined locations\r\n\r\nhttps://github.com/dotnet/aspnetcore/issues/4901", "meta": {"posReactions": "2", "negReactions": "0"}}
{"id": "COM23", "speaker": "saint4eva", "conversation_id": "ROOT", "reply_to": "COM22", "timestamp": "2020-10-07T04:25:39Z", "text": "In-house (Microsoft made) identity server and other security modules", "meta": {"posReactions": "89", "negReactions": "0"}}
{"id": "COM24", "speaker": "valeriob", "conversation_id": "ROOT", "reply_to": "COM23", "timestamp": "2020-10-07T04:27:07Z", "text": "I can't find an issue regarding fast dev loop in general that is not mentioning blazor, I would like the whole dev experience  would be much faster", "meta": {"posReactions": "15", "negReactions": "0"}}
{"id": "COM25", "speaker": "mrpmorris", "conversation_id": "ROOT", "reply_to": "COM24", "timestamp": "2020-10-07T12:15:25Z", "text": "Might it be a good idea to create a new call to action with comments disabled?\r\n@mkArtakMSFT ", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM26", "speaker": "mnmr", "conversation_id": "ROOT", "reply_to": "COM25", "timestamp": "2020-10-07T13:54:54Z", "text": "@mrpmorris @mkArtakMSFT You should seriously consider abandoning the whole call-to-action thing. Choosing what issues need solving based on community votes is why I never leave MS product feedback/bug reports anymore - if you don't have a social following or plenty of co-workers to upvote your issues they just languish and eventually get closed.\r\n\r\nMy suggestion would be to select topics / general directions that the project can move in, let people pick from those, and let that guide part of the overall effort, without making specific commitments to specific issues. ", "meta": {"posReactions": "7", "negReactions": "7"}}
{"id": "COM27", "speaker": "mrpmorris", "conversation_id": "ROOT", "reply_to": "COM26", "timestamp": "2020-10-07T15:55:29Z", "text": "It's a non-binding advisory vote :)", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM28", "speaker": "mkArtakMSFT", "conversation_id": "ROOT", "reply_to": "COM27", "timestamp": "2020-10-07T18:08:57Z", "text": "> @mrkarMSFT thanks for the idea \ud83d\udc4d but they keep closing my feature requests and locking them, so its not able to upvote!\r\n> \r\n> Can you please [unlock 26594](https://github.com/dotnet/aspnetcore/issues/26594) to allow voting on the feature please!\r\n\r\n@papyr looking into the issue I believe it's not something aligned with our long-term vision. And that's the reason why @blowdart has closed that issue. Given that, it seems we won't be able to prioritize that one for .NET 6 for sure.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM29", "speaker": "mkArtakMSFT", "conversation_id": "ROOT", "reply_to": "COM28", "timestamp": "2020-10-07T18:10:26Z", "text": "@3GDXC you've listed multiple feature requests above. Please make sure you file separate issues for each one so we can track these better.", "meta": {"posReactions": "0", "negReactions": "0"}}
