{"id": "ROOT", "speaker": "Felx-B", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2019-04-25T11:42:07Z", "text": "[Proposal] CSS Variables I know CSS variables has already been discussed (#26596) and I saw this reply\r https://github.com/twbs/bootstrap/issues/26596#issuecomment-403342215 \r \r So I come with a proposal which not requires heavy refactoring \r \r ## Proposal\r \r Instead of using directly native functions like `darken` or `lighten` we should use wrappers\r Ex : `try-darken`\r \r ``` scss\r @function try-darken($color, $percent) {\r \r   @if (not $enable-variables){\r     @return darken($color, $percent);\r   }\r \r   @if str_slice(\"#{$color}\", 0, 3) == \"var\" {\r     $percent-str: \"#{$percent * 100}\";\r     $percent-value: str_slice($percent-str, 0, str_length($percent-str) - 1);\r     $original: str_slice($color, 7, str_length($color) - 1);\r     $variable: --#{$original}-darken-#{$percent-value};\r     @return var($variable);\r   }\r \r   @return darken($color, $percent);\r }\r ```\r This wrapper handles the variable construction and create shades of colors.\r \r Then we need to generate all shades of variables\r ``` scss \r :root {\r   @if ($enable-variables){\r     @each $color, $value in $theme-colors-values {\r       --#{$color}: #{$value};\r       --#{$color}-yiq: #{color-yiq($value)};\r \r       @each $shade in $theme-colors-shades {\r         --#{$color}-darken-#{$shade * 100}: #{darken($value, $shade)};\r         --#{$color}-darken-#{$shade * 100}-yiq: #{color-yiq(darken($value, $shade))};\r         --#{$color}-lighten-#{$shade * 100}: #{lighten($value, $shade)};\r         --#{$color}-lighten-#{$shade * 100}-yiq: #{color-yiq(lighten($value, $shade))};\r       }\r     }\r   }\r   @else{\r     @each $color, $value in $theme-colors {\r       --#{$color}: #{$value};\r     }\r   }\r }\r ```\r This creates all necessary variables.\r As you see, this requires to list all necessary shades, and concret theme color values \r \r ``` scss \r $primary:    var(--primary) !default;\r $secondary:  var(--secondary) !default;\r $success:    var(--success) !default;\r $info:       var(--info) !default;\r $warning:    var(--warning) !default;\r $danger:     var(--danger) !default;\r $light:      var(--light) !default;\r $dark:       var(--dark) !default;\r \r $theme-colors-values: map-merge(\r   (\r     \"primary\":     $blue,\r     \"secondary\":   $gray-600,\r     \"success\":     $green,\r     \"info\":        $cyan,\r     \"warning\":     $yellow,\r     \"danger\":      $red,\r     \"light\":       $gray-100,\r     \"dark\":        $gray-800,\r   ),\r   $theme-colors-values\r );\r \r $theme-colors-shades: (7.5, 10, 12.5, 25, 35, 40) !default;\r ```\r \r With theses few tricks I managed to create all variables I needed for theme colors, and I can change it on the fly with few javascript\r \r ## Demo\r Here is a demo site with an implementation \r https://felx-b.github.io/docs/4.3/getting-started/introduction/\r You can change the primary color on fly in the nav bar\r \r ## Source\r Here are the sources\r https://github.com/Felx-B/bootstrap-css-variable\r \r ## Alternative\r If the proposal is rejected, it would worth nothing to wrap native function calls (like `darken/lighten/mix` ...) into upper functions (`try-darken`, `try-lighten` ...) so we could override these behaviors to implement CSS variable ourselves.", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM0", "speaker": "adhayward", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2019-04-25T12:46:35Z", "text": "While this seems useful, I can see issues supporting IE which doesn't support CSS Variables at all.\r\nBootstrap 4.X lists support for IE10+ (not sure where BS5 will go)\r\n[https://caniuse.com/#feat=css-variables](https://caniuse.com/#feat=css-variables)\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM1", "speaker": "patrickhlauke", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2019-04-25T23:37:08Z", "text": "BS5 will (last time I checked into our internal discussions) still support IE11", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM2", "speaker": "Felx-B", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2019-04-26T06:54:42Z", "text": "This feature should not be default, this should remain optional until all supported browsers handle it.\r\n`$enable-variables` options is here to opt-in for this", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM3", "speaker": "MartijnCuppens", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2019-04-26T09:28:59Z", "text": "This won't work in not-IE browsers:\r\n```\r\n$primary:    var(--primary) !default;\r\n$secondary:  var(--secondary) !default;\r\n$success:    var(--success) !default;\r\n$info:       var(--info) !default;\r\n$warning:    var(--warning) !default;\r\n$danger:     var(--danger) !default;\r\n$light:      var(--light) !default;\r\n$dark:       var(--dark) !default;\r\n\r\n$theme-colors-values: map-merge(\r\n  (\r\n    \"primary\":     $blue,\r\n    \"secondary\":   $gray-600,\r\n    \"success\":     $green,\r\n    \"info\":        $cyan,\r\n    \"warning\":     $yellow,\r\n    \"danger\":      $red,\r\n    \"light\":       $gray-100,\r\n    \"dark\":        $gray-800,\r\n  ),\r\n  $theme-colors-values\r\n);\r\n\r\n$theme-colors-shades: (7.5, 10, 12.5, 25, 35, 40) !default;\r\n```\r\n\r\n> `$enable-variables` options is here to opt-in for this\r\n\r\nMaybe we can find a solution for this, but I'm a bit worried we'll overcomplicate everything just to make it possible to support css variables.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM4", "speaker": "mdo", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2019-04-26T15:30:44Z", "text": "Yeah, agreed on overcomplicating things here. Unless we move entirely to PostCSS with the build system to support it, we should continue to prioritize great Sass code.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM5", "speaker": "piernik", "conversation_id": "ROOT", "reply_to": "COM4", "timestamp": "2019-04-27T09:47:05Z", "text": "@Felx-B I love Your idea. I think css variables is `must-have` in bootstrap. With that every user could change interface colors - It's great!", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM6", "speaker": "guledali", "conversation_id": "ROOT", "reply_to": "COM5", "timestamp": "2019-04-28T20:24:53Z", "text": "@piernik and it\u2019s easy too, not that the current scss is difficult but this is \u201ceasier\u201d ", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM7", "speaker": "MartijnCuppens", "conversation_id": "ROOT", "reply_to": "COM6", "timestamp": "2019-04-29T06:38:27Z", "text": "I'm going to lock this conversation because a lot of people will ask for this while we cannot provide support due to the IE11 support. Providing a solution with functions like `try-darken` could help us out, but we'll overcomplicate our codebase too much to make this possible. Maintaining this & tackling all edge cases will slow us down.\r\n\r\nWe 'll definitely have a look at support for css variables in the future (`v6`), but for now we 'll pass on this and focus on improving & extending other Bootstrap functionality.", "meta": {"posReactions": "0", "negReactions": "0"}}
