{"id": "ROOT", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2020-10-27T06:48:32Z", "text": "http2 client: enable http2 connection health check **What type of PR is this?**\r /kind bug\r \r \r **What this PR does / why we need it**:\r There are several confirmed client connection issues with Go's http2 implementation.\r And [it's also proved](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-671814091) that enabling http2 connection health check helps kubernetes client recover from such issues.\r \r This PR updates golang.org/x/net to required version and enables http2 health check by default.\r \r **Which issue(s) this PR fixes**:\r Fixes #87615 #91963 #92164\r \r **Special notes for your reviewer**:\r Do we need a release note for this ?\r \r \r **Does this PR introduce a user-facing change?**:\r ```release-note\r NONE\r ```\r \r **Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.**:\r ```docs\r \r ```\r /area dependency\r /sig api-machinery\r \r /cc @liggitt @JensErat", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM0", "speaker": "k8s-ci-robot", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2020-10-27T06:48:35Z", "text": "@povsister: GitHub didn't allow me to request PR reviews from the following users: JensErat.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) and repo collaborators can review this PR, and authors cannot review their own PRs.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/95898):\n\n>**What type of PR is this?**\r\n>/kind bug\r\n>\r\n>\r\n>**What this PR does / why we need it**:\r\n>There are several confirmed client connection issues with Go's http2 implementation.\r\n>And [it's also proved](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-671814091) that enabling http2 connection health check helps kubernetes client recover from such issues.\r\n>\r\n>This PR updates golang.org/x/net to required version and enables http2 health check by default.\r\n>\r\n>**Which issue(s) this PR fixes**:\r\n>Fixes #87615 #91963 #92164\r\n>\r\n>**Special notes for your reviewer**:\r\n>Do we need a release note for this ?\r\n>\r\n>\r\n>**Does this PR introduce a user-facing change?**:\r\n>```release-note\r\n>NONE\r\n>```\r\n>\r\n>**Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.**:\r\n>```docs\r\n>\r\n>```\r\n>/area dependency\r\n>/sig api-machinery\r\n>\r\n>/cc @liggitt @JensErat\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM1", "speaker": "k8s-ci-robot", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2020-10-27T06:48:41Z", "text": "Hi @povsister. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM2", "speaker": "k8s-ci-robot", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2020-10-27T06:49:13Z", "text": "[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=\"https://github.com/kubernetes/kubernetes/pull/95898#\" title=\"Author self-approved\">povsister</a>*\nTo complete the [pull request process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process), please assign **liggitt** after the PR has been reviewed.\nYou can assign the PR to them by writing `/assign @liggitt` in a comment when ready.\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={\"approvers\":[\"liggitt\"]} -->", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM3", "speaker": "aojea", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2020-10-27T10:22:16Z", "text": ":thinking: it looks a duplicate of https://github.com/kubernetes/kubernetes/pull/94844", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM4", "speaker": "dims", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2020-10-27T10:49:15Z", "text": "@povsister - @aojea is right. please check the other one out and ensure that fixes your problem as well.\r\n\r\n/close", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM5", "speaker": "k8s-ci-robot", "conversation_id": "ROOT", "reply_to": "COM4", "timestamp": "2020-10-27T10:49:29Z", "text": "@dims: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/95898#issuecomment-717155585):\n\n>@povsister - @aojea is right. please check the other one out and ensure that fixes your problem as well.\r\n>\r\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM6", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM5", "timestamp": "2020-10-27T10:50:46Z", "text": "> \ud83e\udd14 it looks a duplicate of #94844\r\n\r\nNot really, original solution proposed in #94844 uses a modified http2 package which breaks backward compatibility and is not merged into golang/net master.\r\nAnd he didn't push another fix till I proposed this fix.\r\n\r\nTo be honest(no offense), code and commit history in #94844 looks nasty...", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM7", "speaker": "dims", "conversation_id": "ROOT", "reply_to": "COM6", "timestamp": "2020-10-27T10:52:50Z", "text": "/reopen", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM8", "speaker": "k8s-ci-robot", "conversation_id": "ROOT", "reply_to": "COM7", "timestamp": "2020-10-27T10:53:05Z", "text": "@dims: Reopened this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/95898#issuecomment-717157525):\n\n>/reopen\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM9", "speaker": "dims", "conversation_id": "ROOT", "reply_to": "COM8", "timestamp": "2020-10-27T10:53:41Z", "text": "@povsister please comment on your concerns in the other PR. that is already approved and is likely to merge first.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM10", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM9", "timestamp": "2020-10-27T10:57:03Z", "text": "Thx, I am on mobile right now. Will check out for another PR later.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM11", "speaker": "aojea", "conversation_id": "ROOT", "reply_to": "COM10", "timestamp": "2020-10-27T13:08:51Z", "text": "I think it doesn' t hurt if we test it in the meantime :sweat_smile: \r\n/ok-to-test", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM12", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM11", "timestamp": "2020-10-27T13:22:21Z", "text": "@aojea Thanks, seem one test job got OOMKilled. I will re-trigger it later.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM13", "speaker": "duyanghao", "conversation_id": "ROOT", "reply_to": "COM12", "timestamp": "2020-10-27T14:12:24Z", "text": "> > \ud83e\udd14 it looks a duplicate of #94844\r\n> \r\n> Not really, original solution proposed in #94844 uses a modified http2 package which breaks backward compatibility and is not merged into golang/net master.\r\n> And he didn't push another fix till I proposed this fix.\r\n> \r\n> To be honest(no offense), code and commit history in #94844 looks nasty...\r\n\r\n@povsister I don't know why you're so hysterical about which PR should be merged, and what I want to clarify here is that obviously I found this problem before you, and I have not even found the existence of golang/net@08b3837 until @fisherxu mentioned it in my PR, that why I push a new commit using http2.ConfigureTransports today and open this [PR](https://github.com/golang/net/pull/84) trying to fix the problem before. And besides I didn't have any reference on your PR as I have not even noticed you before.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM14", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM13", "timestamp": "2020-10-27T14:43:59Z", "text": "@duyanghao Calm down. I do not mind whose PR get merged. We are talking things technically, don't make it personal. \r\nIf you insist. I'd like to tell you that [we have already talked about this issue months ago](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-647915537).\r\n\r\nI prefer forward-looking solution instead of solving questions at hand. That's why I have opposition to your PR.\r\n\r\nI have every concern with cause and conclusion posted in you PR, that's technical.\r\nYou have disagreement but no reason. That's personal.\r\n\r\nIf you feel disrespect on \"nasty\", I apologize. I have neat freak on coding : )\r\nAnd you should learn how to use Git with clear&clean commit history.\r\n\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM15", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM14", "timestamp": "2020-10-27T14:49:59Z", "text": "/retest", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM16", "speaker": "aojea", "conversation_id": "ROOT", "reply_to": "COM15", "timestamp": "2020-10-27T14:54:06Z", "text": "This is not a competition and please respect the code of conduct\r\nhttps://kubernetes.io/community/code-of-conduct/#contributor-code-of-conduct\r\n\r\nThere are certain comments in this thread that are clearly uncalled-for.\r\n\r\n\r\n", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM17", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM16", "timestamp": "2020-10-27T16:02:28Z", "text": "/retest", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM18", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM17", "timestamp": "2020-10-27T17:42:34Z", "text": "Looks like the update to golang.org/x/sys package breaks azure disk driver?\r\n\r\n It says `event for azuredisk-volume-tester-pbml9-84db65759d-9p2vq: {kubelet 9131k8s000} FailedMount: Unable to attach or mount volumes: unmounted volumes=[test-volume-1], unattached volumes=[test-volume-1 default-token-klq5d]: timed out waiting for the condition`\r\n\r\nCode problem should not cause operation timeout. I think it maybe overload of test infra. I will retry next morning.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM19", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM18", "timestamp": "2020-10-27T20:05:14Z", "text": "/retest", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM20", "speaker": "fedebongio", "conversation_id": "ROOT", "reply_to": "COM19", "timestamp": "2020-10-27T20:12:31Z", "text": "/assign @sttts @p0lyn0mial ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM21", "speaker": "fedebongio", "conversation_id": "ROOT", "reply_to": "COM20", "timestamp": "2020-10-27T20:12:42Z", "text": "/triage accepted\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM22", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM21", "timestamp": "2020-10-27T23:00:02Z", "text": "@JensErat Thanks for your comments. Just pushed another commit to fix typo.\r\nIf this get approved, I'll squash the rest commits.\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM23", "speaker": "aojea", "conversation_id": "ROOT", "reply_to": "COM22", "timestamp": "2020-10-28T08:24:43Z", "text": "> At Daimler, our workaround was patching x/net to keep `PingTimeout` default at 15 seconds but enforce a `ReadIdleTimeout` of 30 seconds. I guess this is sufficient for Kubernetes work loads, and at the same time should not really trigger \"additional\" keep-alive efforts in production too often. \r\n\r\n> If I get it right, this PR sets the default to 90/2=45 seconds, and `t1.IdleConnTimeout` is never set in the entire Kubernetes organization to anything but the default values.\r\n\r\n\r\nmaybe it is me, but I prefer hardcoded timeouts than formulas, is not easy to me to understand which values I'm using this way.\r\nPersonally, as I user, I'd like to use the defaults timeouts provided or the ones I set directly, is my mistake if I set them wrong.\r\nI found weird that I set `pingTimeout` to 3 seconds for whatever reason and something configures it to 15 seconds without I'm noticing, or I'm not understanding correctly it?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM24", "speaker": "povsister", "conversation_id": "ROOT", "reply_to": "COM23", "timestamp": "2020-10-28T09:47:19Z", "text": "> If I get it right, this PR sets the default to 90/2=45 seconds, and t1.IdleConnTimeout is never set in the entire Kubernetes organization to anything but the default values.\r\n\r\nBy default Kubernetes always set `t1.IdleConnTimeout` to default 90s. I added the if-compare section just for possible exceptions in the future, it ensures functionality of healthCheck.\r\n\r\n> Personally, as I user, I'd like to use the defaults timeouts provided or the ones I set directly, is my mistake if I set them wrong.\r\n\r\nFor now, http2 Transport configuration is purely internal. We do not expose such configuration to users, that's probably why we don't need release note.\r\nSo I think we'd better make it reasonable even with some confusing formula.(still can be explained by sufficient comments in code, It should not be a big problem.)", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM25", "speaker": "liggitt", "conversation_id": "ROOT", "reply_to": "COM24", "timestamp": "2020-10-28T12:44:19Z", "text": "/uncc\r\n/cc @caesarxuchao \r\n/assign @caesarxuchao ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM26", "speaker": "duyanghao", "conversation_id": "ROOT", "reply_to": "COM25", "timestamp": "2020-10-28T13:08:17Z", "text": "> @duyanghao Calm down. I do not mind whose PR get merged. We are talking things technically, don't make it personal.\r\n> If you insist. I'd like to tell you that [we have already talked about this issue months ago](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-647915537).\r\n> \r\n> I prefer forward-looking solution instead of solving questions at hand. That's why I have opposition to your PR.\r\n> \r\n> I have every concern with cause and conclusion posted in you PR, that's technical.\r\n> You have disagreement but no reason. That's personal.\r\n> \r\n> If you feel disrespect on \"nasty\", I apologize. I have neat freak on coding : )\r\n> And you should learn how to use Git with clear&clean commit history.\r\n\r\n@povsister You are so unbelievably arrogant that I don't want to waste my time arguing with you. And I am able to do git sqaush, besides this is my reason against your proposal\r\n>>I do think users should not care much about the http2 health check, and it's not something Kubernetes even want users to notice, therefore I still suggest to set it by some reasonable default values. Besides, in your \u2018proud\u2019 PR, the http2 Transport ReadIdleTimeout is configured as the half of http Transport IdleConnTimeout, Is this reasonable?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM27", "speaker": "liggitt", "conversation_id": "ROOT", "reply_to": "COM26", "timestamp": "2020-10-28T13:31:57Z", "text": "@povsister @duyanghao thank you both for working to resolve the network connection issue. However, the discussion in this PR and in #94844 is distracting from the main goal of fixing the issue, and is violating the [Kubernetes code of conduct](https://kubernetes.io/community/code-of-conduct/) with insulting/derogatory comments. I've locked the discussion here and in #94844 for that reason, and will ask @caesarxuchao to take a look at the approaches in the two PRs and settle on a way to make use of the PingTimeout capability he added.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM28", "speaker": "lavalamp", "conversation_id": "ROOT", "reply_to": "COM27", "timestamp": "2020-10-28T22:18:33Z", "text": "This isn't how we have technical disagreements. No amount of technical correctness can make up for treating other people poorly; please don't repeat that behavior. I will close both of these PRs. I'm available via slack or email if more explanation is needed.\r\n\r\nInstead, I've asked @caesarxuchao to send a fix for the issue in question.", "meta": {"posReactions": "0", "negReactions": "0"}}
