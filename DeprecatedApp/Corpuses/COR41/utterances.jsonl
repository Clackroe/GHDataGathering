{"id": "ROOT", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2018-06-08T15:11:40Z", "text": "Provide python version mismatch solutions ### What does this PR do?\r \r Improves the error message when Python version mismatch detected by providing solutions.\r \r ### What issues does this PR fix or reference?\r \r See below.\r \r ### Previous Behavior (Python3 origin - Python2.7 target)\r \r ```bash\r bash-4.4# salt-ssh -l quiet -i --out json --key-deploy --passwd admin123 container__wjQFc test.ping\r {\r     \"container__wjQFc\": {\r         \"stdout\": \"ERROR: salt requires python 2.6 or newer on target hosts, must have same major version as origin host\",                                                                                                                  \r         \"stderr\": \"\",\r         \"retcode\": 10\r     }\r }\r ```\r \r ### New Behavior (Python3 origin - Python2.7 target)\r \r ```bash\r bash-4.4# salt-ssh -l quiet -i --out json --key-deploy --passwd admin123 container__wjQFc test.ping\r {\r     \"container__wjQFc\": {\r         \"stdout\": \"ERROR: Depending on the Python version on the target, you need to install python2-salt on origin to add support for Python2.7 targets or install py26-compat-salt on origin to add support for Python2.6 targets or upgrade to Python==3.x on target\",\r         \"stderr\": \"\",\r         \"retcode\": 10\r     }\r }\r ```\r \r ### Tests written?\r \r No\r \r ### Commits signed with GPG?\r \r No\r \r Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r \r See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM0", "speaker": "cachedout", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2018-06-08T17:10:18Z", "text": "@dincamihai There are a few lint errors here: https://jenkins.saltstack.com/job/PR/job/salt-pr-lint-n/22487/violations/file/salt/client/ssh/__init__.py/", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM1", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2018-06-08T23:39:17Z", "text": "@terminalmage I've forgot to change the last error message, which is \"invalid Python\". That just misleads people and they don't understand what is going on, hence the fix. Salt SSH still needs to have both library sets (dependencies) on the Master for the specific Python versions, so the `.tar.gz` is carrying over those in `py<major version>` subdirectories.\r\n\r\n@dincamihai NOTE: actually if you are running Salt on a Master from the specific version, you _do not_ need to install Salt again for the alternative version, as it is anyway works for both versions. This is just packaging convenience. But in fact you need only couple of version-specific libraries to be installed so they will be picked up by the `thin` creation procedure. That is, probably we should not say \"install Salt for alternative Python X\" (which implies you will get all the needed dependencies automatically), but \"install Salt _dependencies_ only for the alternative Python X\".\r\n\r\n@gtmanfred nope, this is only needed in Fluorine.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM2", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2018-06-11T09:16:58Z", "text": "@cachedout i've fixed the lint errors but now, after rebase, it seems to have some unrelated lint errors in the tests.\r\n\r\n@terminalmage Bo and Daniel already provided an explanation. sorry, for not being clear enough about this in the description.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM3", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2018-06-11T10:22:26Z", "text": "@dincamihai I would still minimise the text according to the example I showed above. As well as the \"3.x\" thing.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM4", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2018-06-11T11:26:33Z", "text": "@isbm  having 3.x there means that it matches all the 3 subversions. if I remove the .x someone might think it would only apply to 3 and this would make it more confusing.\r\n\r\nAdding new line to the text is ignored and I'm not sure I should spend more time on this.\r\n\r\nYour example seems to remove some of the useful information and has this \"on a Master\" that I don't understand. Is that intended or should it be \"on the Master\"?\r\nI was using origin and target in order to avoid Master and Minion because none of these machines have salt-master or salt-minion running.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM5", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM4", "timestamp": "2018-06-11T11:37:24Z", "text": "@dincamihai the \"3.x\" is the same as \"3\", as I see it. I also suggested to use integers as in the `version_info` instead of just strings. And so if we have some issue with the 3.8 (e.g.) one would just add a minor version key. Otherwise default should go. But \"3.x\" is more to me looks like a hack.\r\n\r\nThe \"origin\" is something that might not be understood. Personally to me it is very odd terminology here. And you are running \"SaltSSH\" from the Master (or want-to-be-master).", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM6", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM5", "timestamp": "2018-06-11T11:47:32Z", "text": "@isbm i'm checking first for major.minor, so if we add 3.8 it will go to that first. only if there is not major.minor it will match major.x. i think we are fine here.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM7", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM6", "timestamp": "2018-06-11T11:57:16Z", "text": "@dincamihai correct. So that means there **is something** that needs to be shown _instead of_ the default message. And if you have none of '8', then you will get the default one:\r\n\r\n```python\r\nmsg = {\r\n    2: {\r\n        6: 'Too old',\r\n        7: 'Soon to be dead',\r\n        'default': 'Problem between the keyboard and the chair',\r\n    },\r\n    3: {\r\n        4: 'Many things are missing in this release',\r\n        6: 'Many things are incompatible with the previous release, ha-ha!',\r\n        8: 'Larry Wall was hired to design new Python language syntax',\r\n        'default': 'I like you begging, do it again',\r\n    }\r\n}\r\n\r\nimport sys\r\nmj, mn = sys.version_info[:2]\r\nprint(msg[mj].get(mn, msg[mj]['default']))\r\n```\r\n\r\nP.S. keep the code, replace the messages. :wink: ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM8", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM7", "timestamp": "2018-06-11T12:03:23Z", "text": "@isbm if there is no 3.8 specific message, 3.x would be shown. is this not enough?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM9", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM8", "timestamp": "2018-06-11T12:07:36Z", "text": "The code I exampled above does this. I am just not in favour of your structure that keeps strings that needs to be parsed instead of just direct map to versions. And your messages are too big and using foreign terminology for Salt-specific domain. And so therefore I would change that.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM10", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM9", "timestamp": "2018-06-11T12:09:34Z", "text": "@isbm ok. thanks for the suggestion, but if the upstream is fine with my version (changes approved) please merge the PR. thanks!", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM11", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM10", "timestamp": "2018-06-11T12:11:17Z", "text": "@terminalmage you like the proposed error messages and the structure?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM12", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM11", "timestamp": "2018-06-11T13:39:49Z", "text": "OK, as per speaking with @dincamihai it would be also an option to:\r\n\r\n- Add all the options into the documentation.\r\n- Add short minimally intrusive to the target machine option (i.e. update the SaltSSH side w/o touching the target)\r\n\r\nThat said, CLI would return something like:\r\n```\r\nThe \"my-to-be-minion.greatdomain.com\" machine is running Python 2.6 version.\r\nPlease install Salt for 2.6 Python on the Salt SSH machine and set it up.\r\n```\r\n\r\nor:\r\n```\r\nThe \"my-to-be-minion.greatdomain.com\" machine is running Python 2.7 version.\r\nPlease install Salt for 2.7 Python on the Salt SSH machine.\r\n```\r\n\r\nSo such info on the CLI would suggest what to do now, quickly and easiest way. And the following would go to the documentation (rephrased into more extended version):\r\n\r\n\"Depending on the Python version on the target, you need to install Python2.7 compatible salt on origin to add support for Python2.7 targets or install Python2.6 compatible salt on origin to add support for Python2.6 targets or upgrade to Python==3.x on target\"\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM13", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM12", "timestamp": "2018-06-11T13:46:21Z", "text": "One note:\r\nsometimes, when targeting 1000 machines, maybe 999 are ok but one has an old python. there are two options and we don't know what it is better for the user:\r\n - update the origin machine (that works on 999 of the clients) or\r\n - update the one client that doesn't work\r\n\r\nOther than that, this is open source, so I don't have any problem with adapting my PR to whatever is a better fit for saltstack/salt.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM14", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM13", "timestamp": "2018-06-11T13:50:23Z", "text": "I would only say that \"target\" is that part between `salt` and the `command`... More here: https://docs.saltstack.com/en/latest/topics/targeting/ So calling it \"target\" and \"origin\" brings lots of confusion from this POV.  I would definitely keep it Master, especially if SaltSSH is \"to execute salt commands and states over ssh without installing a salt-minion\". Which implies \"Master\" at first place!", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM15", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM14", "timestamp": "2018-06-11T13:52:53Z", "text": "@terminalmage i am not an expert in salt terminology. I just proposed what I thought it would be appropriate and so far saltstack did not disagree. sure, please propose better messages.\r\nthe changes were already approved so why should i make more changes to the PR or invest more time into it?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM16", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM15", "timestamp": "2018-06-11T13:56:03Z", "text": "@terminalmage by the way https://cse.google.com/cse?cx=004624818632696854117:yfmprrbw3pk&q=target", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM17", "speaker": "isbm", "conversation_id": "ROOT", "reply_to": "COM16", "timestamp": "2018-06-11T13:57:58Z", "text": "@dincamihai actually \"approved\" here means _everyone_ agrees, JFYI. And your google result is suggesting exactly what I mean.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM18", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM17", "timestamp": "2018-06-11T14:06:03Z", "text": "@isbm and @terminalmage I have tested my changes on different combinations.\r\nIt would not make any sense to make additional changes and test the whole thing again with python2.6, 2.7 and 3 and combinations of them just because someone likes it more is some way. (i'm not talking here about the formulation of the messages, that is a valid change that is worth doing). but changing some structure to another structure just because... is not enough reason to redo the whole testing again.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM19", "speaker": "dincamihai", "conversation_id": "ROOT", "reply_to": "COM18", "timestamp": "2018-06-11T14:18:31Z", "text": "@isbm what about target in the context of rosters https://docs.saltstack.com/en/latest/topics/ssh/roster.html", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM20", "speaker": "terminalmage", "conversation_id": "ROOT", "reply_to": "COM19", "timestamp": "2018-06-11T19:55:01Z", "text": "I would have loved to work with you, but since you were not willing to accept any recommendations, I am closing this and we will do any remaining work in https://github.com/saltstack/salt/pull/48058.", "meta": {"posReactions": "0", "negReactions": "0"}}
