{"id": "ROOT", "speaker": "Porkechebure", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2019-09-27T10:12:25Z", "text": "WHy angular is retarded? Spoiler: no template i have no time to waste\r \r Problem: Reactive forms\r div with [ngClass] directive:\r \r ``div\r                     class=\"custom-control custom-checkbox\"\r                     style=\"padding-left:80px; padding-top:30px;\"\r                     [ngClass]=\"{\r                       'd-none': f.somereactiveformcontrol.value !== '1'\r                     }\"\r                   >``\r f is a getter in .ts file that returns all controls (and work everywhere else)\r d-none is bootstrap display:none class\r f.somereactiveformcontrol.value is a select/option dropdown which if !==1 shows div else hides it as you can guess\r \r When dropdown activated manually it works\r when the dropdown changes because changed from code (using your (change) method binding)\r it doesn't change\r \r I'm fed up the whole framework is filled with this crap. Why you even do double way binding if works half the needed cases? Don't even make a framework at this point\r \r I've read about observable something, but why would I use the whole framework if I had to use another framework and do my own implementation? It has no fucking sense.\r \r If the customer didn't specifically asked for angular I would have thrown this piece of trash in the toilet long time ago\r \r How to solve\r \r EDIT: Thumbs down my ass, it's reality  that smacks your face \ud83d\udc4d \r Instead of thumbing down like twitter and facebook kids, show me I'm wrong \ud83e\udd47 ", "meta": {"posReactions": "1", "negReactions": "6"}}
{"id": "COM0", "speaker": "Porkechebure", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2019-09-27T10:48:46Z", "text": "https://github.com/udos86/ng-dynamic-forms/issues/253\r\n\r\nLAWL EVEN PEOPLE IS ASKING FOR IT\r\nthumbs down don't bother me, take some relief on your real life frustration and let them rain down \ud83d\udcaf ", "meta": {"posReactions": "1", "negReactions": "3"}}
{"id": "COM1", "speaker": "Porkechebure", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2019-09-27T10:52:09Z", "text": "HAHAHAHAHA look at which hacks people has to resort\r\nhttps://github.com/udos86/ng-dynamic-forms/issues/253#issuecomment-318623092", "meta": {"posReactions": "1", "negReactions": "3"}}
{"id": "COM2", "speaker": "sarunint", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2019-09-27T11:00:50Z", "text": "> Instead of thumbing down like twitter and facebook kids, show me I'm wrong \ud83e\udd47\r\n\r\nSure.\r\n\r\nI'll go issue by issue.\r\n\r\n> Spoiler: no template i have no time to waste\r\n\r\nFirstly, the Angular repository receives **hundreds** of issues a day. The issue template ensure that the report is structured so the team can understand the issue quickly.\r\n\r\n> \r\n> Problem: Reactive forms\r\n> div with [ngClass] directive:\r\n> \r\n> `<div class=\"custom-control custom-checkbox\" style=\"padding-left:80px; padding-top:30px;\" [ngClass]=\"{ 'd-none': f.somereactiveformcontrol.value !== '1' }\" >`\r\n> f is a getter in .ts file that returns all controls (and work everywhere else)\r\n> d-none is bootstrap display:none class\r\n> f.somereactiveformcontrol.value is a select/option dropdown which if !==1 shows div else hides it as you can guess\r\n> \r\n> When dropdown activated manually it works\r\n> when the dropdown changes because changed from code (using your (change) method binding)\r\n> it doesn't change\r\n> \r\n\r\nBecause you change the DOM, but didn't change the `ControlValueAccessor` behind it. I suggest you use [`f.somereactiveformcontrol.setValue`](https://angular.io/api/forms/FormControl#setvalue) instead.\r\n\r\n\r\n> I'm fed up the whole framework is filled with this crap. Why you even do double way binding if works half the needed cases? Don't even make a framework at this point\r\n> \r\n\r\nNo, Angular does not have two-way binding. AngularJS does. (Even the `[()]` thingy is one-way binding underneath.)\r\n\r\n> I've read about observable something, but why would I use the whole framework if I had to use another framework and do my own implementation? It has no fucking sense.\r\n> \r\n\r\nRxJS is not a framework. It's library which enables reactive programming in Angular.\r\n\r\n> If the customer didn't specifically asked for angular I would have thrown this piece of trash in the toilet long time ago\r\n> \r\n> How to solve\r\n> \r\n\r\nI'm not able to reply on this one.\r\n\r\n> EDIT: Thumbs down my ass, it's reality that smacks your face \ud83d\udc4d\r\n\r\n[This is not cool.](https://github.com/angular/angular/blob/master/CODE_OF_CONDUCT.md)", "meta": {"posReactions": "2", "negReactions": "0"}}
{"id": "COM3", "speaker": "Porkechebure", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2019-09-27T11:14:35Z", "text": "> > Instead of thumbing down like twitter and facebook kids, show me I'm wrong \ud83e\udd47\r\n> \r\n> Sure.\r\n> \r\n> I'll go issue by issue.\r\n\r\nThank you\r\n> \r\n> > Spoiler: no template i have no time to waste\r\n> \r\n> Firstly, the Angular repository receives **hundreds** of issues a day. The issue template ensure that the report is structure so the team can understand the issue quickly.\r\n> \r\n\r\nThe issue is Angular then. Hundreds of issues at day you say. A stable and mature and professional product after all these years shouldnt. Thats the damn problem.\r\n\r\nI mean... what kind of working product in IT receives \"hundreds\" of issues each day....\r\nI once developed a C# utility library which was used for most of the tasks in the main programs of my company and so, used on customers machines. Given enough time to test it, It worked very well and the problems related to it were quite little and I had to put hands back into it like 8 times in 5 years for something that was trouble and not expanding it with new required functionalities. But it was used in companies with thousands of workers, in our company and in mostly all of our software.\r\n\r\nThe functionalities where broad and large since in C# you can do anything, it was about managing file i/o, mail sending receive, attachments management, network synchronicazion (RabbitMQ and other queue managers of IBM if I remember well), database CRUDS, serialization (xml, json), automation of tasks, orchestrating various windows services through network and more and more.\r\n\r\nThis has to do one thing: Web dev, yet it gets hundreds of issues each day, like web dev has changed much in the last years (and it's not, the only thing it changed is that anyone felt to be a great programmer and to excrete out a new js framework like it would be the new holy grail of web dev).\r\nSo this means the whole framework is unpolished, untested and lazy coded.\r\nThis [sums it up really well](http://imgs.xkcd.com/comics/standards.png) \r\n\r\n> > Problem: Reactive forms\r\n> > div with [ngClass] directive:\r\n> > `<div class=\"custom-control custom-checkbox\" style=\"padding-left:80px; padding-top:30px;\" [ngClass]=\"{ 'd-none': f.somereactiveformcontrol.value !== '1' }\" >`\r\n> > f is a getter in .ts file that returns all controls (and work everywhere else)\r\n> > d-none is bootstrap display:none class\r\n> > f.somereactiveformcontrol.value is a select/option dropdown which if !==1 shows div else hides it as you can guess\r\n> > When dropdown activated manually it works\r\n> > when the dropdown changes because changed from code (using your (change) method binding)\r\n> > it doesn't change\r\n> \r\n> Because you change the DOM, but didn't change the `ControlValueAccessor` behind it. I suggest you use [`f.somereactiveformcontrol.setValue`](https://angular.io/api/forms/FormControl#setvalue) instead.\r\n> \r\n\r\nAnd? It's matter of the framework taking care of it because of two way data binding (check below), not my worry, otherwise I could as well do things on my own like I always did.\r\n\r\nBut there is an even more FUNNY thing. I AM ACTUALLY ALREADY USING setValue even before writing this post!!! \r\n\r\nThis is the actual code:\r\n\r\non the changing select element:\r\n`(change)=\"onClienteChange($event)\"`\r\n\r\n```\r\nonClienteChange(e) {\r\n    const customer= this.getCustomer(\r\n      e.target.value.toString()\r\n    );``\r\n\r\n ``this.orderForm.controls.paymentMethod.setValue(\r\n      customer.paymentMethod\r\n    );\r\n}\r\n```\r\n\r\n\r\n\r\n\r\nSo to follow up your discussion, I am already using the recommened method.\r\n\r\n> > I'm fed up the whole framework is filled with this crap. Why you even do double way binding if works half the needed cases? Don't even make a framework at this point\r\n> \r\n> No, Angular does not have two-way binding. AngularJS does. (Even the `[()]` thingy is one-way binding underneath.)\r\n> \r\n\r\nhttps://angular.io/api/forms/NgModel\r\nQuoting from official website:\r\n\r\n> If you have a two-way binding with [()] syntax (also known as 'banana-box syntax')\r\n\r\nIf they make fool of me it's not my fault\r\n\r\n> > I've read about observable something, but why would I use the whole framework if I had to use another framework and do my own implementation? It has no fucking sense.\r\n> \r\n> RxJS is not a framework. It's library which enables reactive programming in Angular.\r\n> \r\n\r\nIt's the same. Angular should leverage it to avoid me pulling hair or doing heavy lifting. Instead it leaves you clueless with these kind of things and stupid documentation which is a copy paste from semi working code samples from tour of heroes which in some case alre also wrong and with errors in it.\r\n\r\n> > If the customer didn't specifically asked for angular I would have thrown this piece of trash in the toilet long time ago\r\n> > How to solve\r\n> \r\n> I'm not able to reply on this one.\r\n> \r\n> > EDIT: Thumbs down my ass, it's reality that smacks your face \ud83d\udc4d\r\n> \r\n> [This is not cool.](https://github.com/angular/angular/blob/master/CODE_OF_CONDUCT.md)\r\n\r\nAngular is  [NOT COOL](https://medium.com/hackernoon/why-angular-made-me-quit-web-dev-f63b83a157af)\r\n\r\nAnd about the above article, I can second and confirm personally by experience EACH SINGLE point showed. It's all true and still relevant to the most up to date version of the angular framework.\r\n\r\nThis long reply is to show that I'm not just an angry fool, lot of people is fed up with it and it actually is an half baked crippled tool\r\n\r\nYeah @thetric don't cry in silence and show us your strong arguments against my point", "meta": {"posReactions": "1", "negReactions": "4"}}
{"id": "COM4", "speaker": "petebacondarwin", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2019-09-27T12:01:00Z", "text": "Closing and locking this issue as it is not acceptable language to use on our issue tracker. Please adhere to our code of conduct https://github.com/angular/code-of-conduct.\r\n\r\n@Porkechebure - clearly you are feeling frustrated and angry right now. I can understand how that can happen. It is important that we work constructively to solve our problems and not resort to insults.\r\n\r\nPlease take a while to cool down and then open a more appropriate issue if you would like a problem with the framework to be addressed.\r\n\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
