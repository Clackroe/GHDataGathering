{"id": "ROOT", "speaker": "IdanCo", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2017-03-15T13:20:54Z", "text": "Bootstrap 4 with npm and webpack I've been spending WAY too much time on adding bootstrap 4 with npm to a webpack project. In hope to save others the time, I thought i'll share the final recipe -\r \r start by installing bootstrap in your project -\r ```\r npm install bootstrap@4.0.0-alpha.6 --save\r ```\r (notice bootstrap has two dependencies - jquery and tether. If you would rather have explicit versions of those two, you should install them as well)\r \r import bootstrap's javascript through index.js -\r ```javascript\r import 'bootstrap';\r ```\r (i'm assuming you're using es6, in case of es5, use `require('bootstrap')`)\r \r The previous line will only import the js part of bootstrap. for the styling part you have two options -\r \r ### 1. Precompiled SASS\r Inside one of your sass files (index.scss for example) add this line -\r ```SASS\r @import \"~bootstrap/scss/bootstrap.scss\";\r ```\r (notice the ~ (tilde) which points to the node modules folder)\r This mehtod is beneficial if you plan on using your own version of the wonderful __variables_ file bootstrap comes with. just make sure you import __variables_ before _bootstrap_. Also, now you can use all the cool mixins bootstrap has.\r \r ### 2. Compiled CSS only\r If you're not planning on using the variables or the mixins, and prefer the precooked css file, simply add this line to index.js or any other js file -\r ```javascript\r import 'bootstrap/dist/css/bootstrap.css';\r ```\r (btw - you can also import this way the sass file, but it's nicer to import it via another sass file as shown in pervious mehtod)\r \r now comes the webpack part. for _jquery_ and _tether_ to be available as a global variable throughout the project, you'll have to add this to your webpack plugins sections -\r ```javascript\r new webpack.ProvidePlugin({ // inject ES5 modules as global vars\r   $: 'jquery',\r   jQuery: 'jquery',\r   'window.jQuery': 'jquery',\r   Tether: 'tether'\r })\r ```\r The different jquery definition are meant to answer requirements of different libraries (for example angular looks for 'window.jQuery'). I'm assuming your webpack.config already has rules for scss and/or css.\r \r And that's it! now you have bootstrap in your webpack project.\r Let me know if any further explanation is needed, and if anyone knows of a better way, please share.", "meta": {"posReactions": "64", "negReactions": "0"}}
{"id": "COM0", "speaker": "cr101", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2017-03-16T07:59:37Z", "text": "> `@import \"~bootstrap/scss/bootstrap.scss\";`\r\n> (notice the ~ (tilde) which points to the node modules folder)\r\n\r\n@IdanCo Do you need to install a dependency to be able to use `~` instead of the `node_modules` folder?\r\nI tried it but it didn't work.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM1", "speaker": "IdanCo", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2017-03-16T14:09:34Z", "text": "@Olivia101 good question. [I took this convention from sass-loader](https://github.com/webpack-contrib/sass-loader#imports), but if in addition to sass-loader you're also using postcss than this could be related -\r\nhttps://github.com/postcss/postcss-import/issues/209\r\n\r\nAnyway you can try without the tilde, or worst case use '../../node_modules'.\r\n\r\nlet me know how it goes.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM2", "speaker": "mselerin", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2017-03-22T07:41:57Z", "text": "Really nice explanations @IdanCo :+1: \r\n\r\nI'm also using Bootstrap w/ Webpack but I have a slightly different configuration regarding the \"Jquery & Tether\" part.\r\n\r\nInstead of using this :\r\n```javascript\r\nnew webpack.ProvidePlugin({ // inject ES5 modules as global vars\r\n  $: 'jquery',\r\n  jQuery: 'jquery',\r\n  'window.jQuery': 'jquery',\r\n  Tether: 'tether'\r\n})\r\n```\r\nwhich does not inject $ as a global variable but 'auto-require' it when encountered in a dependency, I use the \"expose-loader\" (which, actually, expose global variables ;-) ).\r\n\r\nYou could use it directly in the webpack config but, personnaly, I prefer using it in my entry file like this : \r\n```javascript\r\nrequire('expose-loader?$!expose-loader?jQuery!jquery');\r\nrequire(\"expose-loader?Tether!tether\");\r\n```\r\n(yeah, the syntax looks like some sort of incantations or something ;-))\r\n\r\nBut if you prefer the webpack config way, it looks like this : \r\n```javascript\r\nmodule: {\r\n  rules: [\r\n    {\r\n      test: require.resolve('jquery'),\r\n      use: [\r\n        { loader: 'expose-loader', options: 'jQuery' },\r\n        { loader: 'expose-loader', options: '$' }\r\n      ]\r\n    },\r\n    \r\n    {\r\n      test: require.resolve('tether'),\r\n      use: [\r\n        { loader: 'expose-loader', options: 'Tether' }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nMy 2 cents...", "meta": {"posReactions": "13", "negReactions": "0"}}
{"id": "COM3", "speaker": "Mioleris", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2017-03-27T13:41:09Z", "text": "O u can use bootstrap-loader https://github.com/shakacode/bootstrap-loader", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM4", "speaker": "mdo", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2017-04-08T21:35:34Z", "text": "Is there something here we need to update in our docs or JS?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM5", "speaker": "IdanCo", "conversation_id": "ROOT", "reply_to": "COM4", "timestamp": "2017-04-09T18:17:09Z", "text": "@mdo I think a webpack configuration is something that many developers might find useful. I'll wrap it as a PR and leave it for you to decide.", "meta": {"posReactions": "4", "negReactions": "0"}}
{"id": "COM6", "speaker": "IdanCo", "conversation_id": "ROOT", "reply_to": "COM5", "timestamp": "2017-05-07T12:15:00Z", "text": "thanks for reporting @bbottema , a few questions to better diagnose the issue -\r\n1. when importing scss, you do it directly from the js or from a secondary scss file?\r\n2. If you use a secondary scss file, do rules before/after the import **are working** in the browser?\r\n3. what version of style-loader are you using?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM7", "speaker": "IdanCo", "conversation_id": "ROOT", "reply_to": "COM6", "timestamp": "2017-05-07T12:31:52Z", "text": "Smells to me like could be related to [this issue](https://github.com/webpack-contrib/css-loader/issues/484), try a couple of things for me -\r\n\r\n1. use a secondary scss, and add this code **before** importing bootstrap -\r\n```sass\r\n$navbar-inverse-color: #FFF;\r\n$navbar-light-color: #FFF; \r\n```\r\n2. upgrade style-loader to 0.17.0\r\n3. take a look at a [demo project implementing bootstrap](https://github.com/IdanCo/webpack-modular/tree/bootstrap4)", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM8", "speaker": "bbottema", "conversation_id": "ROOT", "reply_to": "COM7", "timestamp": "2017-05-07T15:42:29Z", "text": "@IdanCo Sorry, nevermind. I made a mess out of it :D. My config was not in order, ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM9", "speaker": "bparanj", "conversation_id": "ROOT", "reply_to": "COM8", "timestamp": "2017-05-26T21:24:52Z", "text": "@Mioleris bootstrap-loader currently does not support Bootstrap 4.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM10", "speaker": "mdo", "conversation_id": "ROOT", "reply_to": "COM9", "timestamp": "2017-05-27T04:09:23Z", "text": "Closing since #22423 was merged.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM11", "speaker": "petrpacas", "conversation_id": "ROOT", "reply_to": "COM10", "timestamp": "2017-07-13T14:14:29Z", "text": "For consideration:\r\nhttps://github.com/twbs/bootstrap/pull/22423#issuecomment-315081413", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM12", "speaker": "ajthinking", "conversation_id": "ROOT", "reply_to": "COM11", "timestamp": "2018-01-18T13:37:27Z", "text": "This thread helped me. But dont forget to install dependencies. Im surprised this is not mentioned more explicit in https://getbootstrap.com/ npm installation section.\r\n```\r\nnpm install --save jquery popper.js\r\nnpm install bootstrap@4.0.0-beta.3 --save\r\n```\r\n", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM13", "speaker": "Johann-S", "conversation_id": "ROOT", "reply_to": "COM12", "timestamp": "2018-01-18T13:43:22Z", "text": "@ajthinking it's written here : https://getbootstrap.com/docs/4.0/getting-started/webpack/#importing-javascript\r\n\r\n>Bootstrap is dependent on jQuery and Popper, these are defined as peerDependencies, this means that you will have to make sure to add both of them to your package.json using npm install --save jquery popper.js.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM14", "speaker": "ajthinking", "conversation_id": "ROOT", "reply_to": "COM13", "timestamp": "2018-01-18T13:52:17Z", "text": "@Johann-S yes that page is great! But on https://getbootstrap.com no dependencies are mentioned in the npm section thats what caught me. ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM15", "speaker": "petrpacas", "conversation_id": "ROOT", "reply_to": "COM14", "timestamp": "2018-01-18T20:09:10Z", "text": "Feel free to check out https://github.com/petrpacas/webpack-bootstrap-4-setup to see how I tackled this...", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM16", "speaker": "cebartling", "conversation_id": "ROOT", "reply_to": "COM15", "timestamp": "2018-02-12T15:53:44Z", "text": "I would stay far away from `bootstrap-loader`. We are using it on a React project and it's been a pain in the butt to update to Bootstrap 4.0 beta. I ultimately want to go to Bootstrap 4 GA and I think I'm going to have to ditch `bootstrap-loader` to do it.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM17", "speaker": "Alex1sz", "conversation_id": "ROOT", "reply_to": "COM16", "timestamp": "2018-02-16T02:57:08Z", "text": "^^ +1 on the staying away from bootstrap-loader you will regret using it I had to rip it out after it randomly broke compilation due to buggy path resolve & bootstrap version code. After forking bootstrap-loader in an attempt to fix their code I quickly realized my mistake in adding it in the first place.", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM18", "speaker": "mdo", "conversation_id": "ROOT", "reply_to": "COM17", "timestamp": "2018-02-16T02:58:09Z", "text": "Seeing all the follow-up comments, do we need more docs updates here?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM19", "speaker": "connelhooley", "conversation_id": "ROOT", "reply_to": "COM18", "timestamp": "2018-03-21T16:19:19Z", "text": "I'm very new to webpack, but I have just set up a project and I have TypeScript and SCSS compiling correctly. I asm using webpack version `4.1.1`. When I import bootstrap like this:\r\n\r\n`import 'bootstrap';`\r\n\r\nThe TypeScript compiles, but I am given the following error on page load:\r\n\r\n```\r\nmain.ts:3 Uncaught Error: Cannot find module \"bootstrap\"\r\n    at webpackMissingModule (main.ts:3)\r\n    at Object../ts/main.ts (main.ts:3)\r\n    at __webpack_require__ (bootstrap:19)\r\n    at bootstrap:68\r\n    at bootstrap:68\r\n```\r\n\r\nI have the following packages installed in my package.config:\r\n\r\n```\r\n  \"@fortawesome/fontawesome-free-webfonts\": \"^1.0.4\",\r\n  \"@types/bootstrap\": \"^4.0.1\",\r\n  \"@types/jquery\": \"^3.3.1\",\r\n  \"bootstrap\": \"^4.0.0\",\r\n  \"jquery\": \"^3.3.1\",\r\n  \"popper.js\": \"^1.14.1\"\r\n```\r\n\r\nThis is the typescript code:\r\n\r\n```\r\nimport \"../scss/main.scss\";\r\nimport * as $ from \"jquery\";\r\nimport 'bootstrap';\r\n\r\n$(() => {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n    alert(sayHello(\"TypeScript\"));\r\n});\r\n```\r\n\r\nI imagine I also have to declare the `$` sign globally somewhere but this isn't documented in the bootstrap docs, but for me I can't seem to import the bootstrap js at all.\r\n\r\nIs there something missing from the docs that I need to do?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM20", "speaker": "connelhooley", "conversation_id": "ROOT", "reply_to": "COM19", "timestamp": "2018-03-21T16:55:33Z", "text": "Update: I fixed my issue by using:\r\n`import \"bootstrap/dist/js/bootstrap.js`\r\n\r\nApart from that the docs were enough for me to get going personally.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM21", "speaker": "petrpacas", "conversation_id": "ROOT", "reply_to": "COM20", "timestamp": "2018-03-21T19:07:04Z", "text": "Well, I\u2019m not a Webpack guru myself, and I\u2019m glad you sorted it out, but just gonna mention that my setup is importing the individual bootstrap.js pieces (so that you can select only the necessary ones), and you are importing the whole package. Which might ofc be fine for you\u2026\n\nJust sayin\u2019\n\nTake care,\nPetr\n\nOn 21. 3. 2018 16:58 +0000, Connel Hooley <notifications@github.com>, wrote:\n> Update: I fixed my issue by using:\n> import \"bootstrap/dist/js/bootstrap.js\n> Apart from that the docs were enough for me to get going personally.\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM22", "speaker": "marcosleonel", "conversation_id": "ROOT", "reply_to": "COM21", "timestamp": "2018-03-30T20:16:10Z", "text": "Well done, @IdanCo ! It worked nicely for me. Thanks!", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM23", "speaker": "Ruud-cb", "conversation_id": "ROOT", "reply_to": "COM22", "timestamp": "2018-04-06T10:23:51Z", "text": "So many different solutions, so many different workable options, yet none of them helped me in the past 3 hours getting bootstrap up and running... The webpack documentation page looks so simple but it is not that simple, apparently. Please include some more documentation on how to test if it is working and if there are any differences when using typescript. I just installed, included, imported and my app just runs fine, no errors, but yet no col-md or container styling working.. meh, i'll just return to CDN's...", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM24", "speaker": "Johann-S", "conversation_id": "ROOT", "reply_to": "COM23", "timestamp": "2018-04-06T11:05:23Z", "text": "Feel free @Ruud-cb to improve our docs if you found something, we cannot covered every use case", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM25", "speaker": "Johann-S", "conversation_id": "ROOT", "reply_to": "COM24", "timestamp": "2018-04-06T11:07:26Z", "text": "I lock this issue everything is here: https://getbootstrap.com/docs/4.0/getting-started/webpack/\r\n\r\nIf someone want to improve our docs feel free to do it, or you can open an issue which point what is missing in our docs", "meta": {"posReactions": "0", "negReactions": "0"}}
