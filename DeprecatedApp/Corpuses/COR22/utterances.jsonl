{"id": "ROOT", "speaker": "chrisrlong", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2016-12-01T12:06:29Z", "text": "depends_on cannot be used in a module Hi there,\r \r \r ### Terraform Version\r 0.8.0 rc1+\r \r ### Affected Resource(s)\r module\r \r \r ### Terraform Configuration Files\r ```hcl\r module \"legacy_site\" {\r   source = \"../../../../../modules/site\"\r   name = \"foo-site\"\r   health_check_target = \"TCP:443\"\r   azs = \"${var.azs}\"\r   instance_count = \"${var.instance_count}\"\r   vpc = \"apps\"\r   region = \"${var.region}\"\r   environment = \"${var.environment}\"\r   run_list = \"hs_site_foo\"\r \r   #rds_complete = \"${module.rds.db_instance_id}\"\r   #elasticache_cache_complete = \"${module.elasticache_cache.elasticache_id}\"\r   #elasticache_sessions_complete = \"${module.elasticache_sessions.elasticache_id}\"\r \r   depends_on = [\r   \"module.rds\",\r   \"module.elasticache_sessions\"\r   ]\r \r }\r ```\r \r ### Debug Output\r Error loading Terraform: module root: module legacy_site: depends_on is not a valid parameter\r module root: module legacy_site: depends_on is not a valid parameter\r \r ### Expected Behavior\r I am trying to use the new depends_on instead of the above outputs, so I create and provision my app once I know database and caches are built.\r \r ### Actual Behavior\r Nothing as terraform errors out as above.\r \r ### Steps to Reproduce\r \r 1. `terraform apply`\r \r ### References\r depends_on can reference modules. This allows a resource or output to depend on everything within a module. (#10076)\r ", "meta": {"posReactions": "339", "negReactions": "0"}}
{"id": "COM0", "speaker": "stack72", "conversation_id": "ROOT", "reply_to": "ROOT", "timestamp": "2016-12-01T12:10:37Z", "text": "Hi @chrisrlong \r\n\r\nThis is very strange - we introduced depends_on for modules in 0.8.0-beta2\r\n\r\ncan you run terraform version and post the output here for me?\r\n\r\nPaul", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM1", "speaker": "chrisrlong", "conversation_id": "ROOT", "reply_to": "COM0", "timestamp": "2016-12-01T13:24:05Z", "text": "Hi @stack72,\r\n\r\nI have complied master from version b15b8bd (Terraform v0.8.0-dev (b15b8bd99aae33c5b68cbecf5aef375c0798147c+CHANGES)), which should include beta2 features. (I did this to get 10337  and 10338 fixes)\r\n\r\nIt seems it would work if you set a resource to depend on a module, but you cannot set a module to depend_on another module......\r\n\r\nThanks for the great tool btw ;)\r\n\r\nChris\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM2", "speaker": "stack72", "conversation_id": "ROOT", "reply_to": "COM1", "timestamp": "2016-12-01T13:35:08Z", "text": "Hi @chrisrlong \r\n\r\nthanks for getting back to me - you are indeed correct - modules cannot (currently) depend_on other modules but can depend on a resource only\r\n\r\nWill change the tag on this from bug to enhancement :)\r\n\r\nKeep an eye out for it soon \u2122\ufe0f \r\n\r\nThanks\r\n\r\nPaul", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM3", "speaker": "mitchellh", "conversation_id": "ROOT", "reply_to": "COM2", "timestamp": "2016-12-01T13:42:28Z", "text": "Retagging as enhancement, since this isn't broken functionality, its functionality that doesn't exist yet. :) ", "meta": {"posReactions": "19", "negReactions": "0"}}
{"id": "COM4", "speaker": "sheerun", "conversation_id": "ROOT", "reply_to": "COM3", "timestamp": "2017-01-03T13:49:22Z", "text": "My use case: the slave virtual machine depends on master virtual machine to exist", "meta": {"posReactions": "1", "negReactions": "0"}}
{"id": "COM5", "speaker": "shantanugadgil", "conversation_id": "ROOT", "reply_to": "COM4", "timestamp": "2017-01-07T22:10:25Z", "text": "I am seeing the same error:\r\n`module root: module example: depends_on is not a valid parameter`\r\n\r\nMy Terraform version is:\r\nTerraform v0.8.2\r\n\r\nMy use case is that I want a module to depend on a resource.", "meta": {"posReactions": "9", "negReactions": "0"}}
{"id": "COM6", "speaker": "arehmandev", "conversation_id": "ROOT", "reply_to": "COM5", "timestamp": "2017-01-09T01:54:54Z", "text": "Error loading Terraform: module root: module etcdbastion: depends_on is not a valid parameter.\r\n^ Seeing it here too", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM7", "speaker": "cemo", "conversation_id": "ROOT", "reply_to": "COM6", "timestamp": "2017-01-10T21:22:10Z", "text": "@mitchellh I believe this one can solve unnested modules problem too. There were some issues regarding this #10883 before. This solution would be intuitive and address these issues. ", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM8", "speaker": "vladimir-kozyrev", "conversation_id": "ROOT", "reply_to": "COM7", "timestamp": "2017-02-14T14:47:28Z", "text": "Waiting for this feature to be added :+1: ", "meta": {"posReactions": "12", "negReactions": "0"}}
{"id": "COM9", "speaker": "prog893", "conversation_id": "ROOT", "reply_to": "COM8", "timestamp": "2017-02-23T08:35:01Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM10", "speaker": "avatar4d", "conversation_id": "ROOT", "reply_to": "COM9", "timestamp": "2017-02-23T19:14:21Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM11", "speaker": "panmanphil", "conversation_id": "ROOT", "reply_to": "COM10", "timestamp": "2017-02-23T19:16:41Z", "text": "+1 This would really help modularizing our code\r\n", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM12", "speaker": "shoelessrob", "conversation_id": "ROOT", "reply_to": "COM11", "timestamp": "2017-02-23T19:35:21Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM13", "speaker": "mschenck", "conversation_id": "ROOT", "reply_to": "COM12", "timestamp": "2017-02-23T19:40:47Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM14", "speaker": "cpanayides", "conversation_id": "ROOT", "reply_to": "COM13", "timestamp": "2017-02-24T20:23:34Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM15", "speaker": "derBroBro", "conversation_id": "ROOT", "reply_to": "COM14", "timestamp": "2017-02-25T11:33:35Z", "text": "+1", "meta": {"posReactions": "3", "negReactions": "0"}}
{"id": "COM16", "speaker": "waffleshop", "conversation_id": "ROOT", "reply_to": "COM15", "timestamp": "2017-02-28T16:48:52Z", "text": "+1", "meta": {"posReactions": "3", "negReactions": "0"}}
{"id": "COM17", "speaker": "laiph", "conversation_id": "ROOT", "reply_to": "COM16", "timestamp": "2017-03-02T18:25:03Z", "text": "+1", "meta": {"posReactions": "5", "negReactions": "0"}}
{"id": "COM18", "speaker": "mqasim1983", "conversation_id": "ROOT", "reply_to": "COM17", "timestamp": "2017-03-07T16:55:41Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM19", "speaker": "seyeda", "conversation_id": "ROOT", "reply_to": "COM18", "timestamp": "2017-03-07T22:14:42Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM20", "speaker": "AirbornePorcine", "conversation_id": "ROOT", "reply_to": "COM19", "timestamp": "2017-03-10T17:28:36Z", "text": "Anyone have a good workaround for this in the meantime?", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM21", "speaker": "jacobwgillespie", "conversation_id": "ROOT", "reply_to": "COM20", "timestamp": "2017-03-10T17:35:55Z", "text": "My pseudo workaround is to add a list variable inside the module:\r\n\r\n```hcl\r\nvariable \"depends_on\" { default = [], type = \"list\" }\r\n```\r\n\r\nThen when using the module, pass it a computed value from the resource I want it to depend on:\r\n\r\n```hcl\r\nmodule \"something\" {\r\n  depends_on = [\"${aws_instance.instance.private_ip}\"]\r\n}\r\n```\r\n\r\n", "meta": {"posReactions": "13", "negReactions": "9"}}
{"id": "COM22", "speaker": "AirbornePorcine", "conversation_id": "ROOT", "reply_to": "COM21", "timestamp": "2017-03-10T18:17:30Z", "text": "Thanks, that doesn't entirely fit what I think this issue is talking about though - making a module able to depend on another one. I don't have any resources that the module should depend on - it should depend on another module being created.\r\n\r\nI've tried doing stuff like this:\r\nmodule 1:\r\n```\r\noutput \"wait_for_cluster\" { value = \"ref to a resource that gets created last by this module\" }\r\n```\r\n\r\nmodule 2:\r\n```\r\nvariable \"wait_for_cluster\" {}\r\n```\r\n\r\nMain terraform template:\r\n```\r\nmodule \"1\" {\r\n\r\n}\r\n\r\nmodule \"2\" {\r\n wait_for_cluster = \"${module.1.wait_for_cluster}\"\r\n}\r\n```\r\n\r\nBut this doesn't do anything - my module two is still created at basically the same time as module 1.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM23", "speaker": "b-dean", "conversation_id": "ROOT", "reply_to": "COM22", "timestamp": "2017-03-10T18:45:43Z", "text": "@AirbornePorcine In your second module you need to actually use the wait_for_cluster variable somewhere that establishes a dependency. Such as in a template or a trigger on a `null_resource`, etc.\r\n\r\nSee https://github.com/hashicorp/terraform/issues/1178#issuecomment-207369534 from @kristjanelias\r\n\r\nThe only change I'd make to his workaround is to maybe make the dummy dependency resource use a trigger so it changes when the instance changes.\r\n\r\n```hcl\r\nresource \"null_resource\" \"dummy_dependency\" {\r\n  triggers {\r\n    dependency_id = \"${aws_instance.instance.id}\"\r\n  }\r\n}\r\n```", "meta": {"posReactions": "5", "negReactions": "0"}}
{"id": "COM24", "speaker": "AirbornePorcine", "conversation_id": "ROOT", "reply_to": "COM23", "timestamp": "2017-03-10T20:59:08Z", "text": "Ah, that makes sense! Should have known that Terraform would optimize away my variable if I didn't use it. :) I tried out your suggestion with the trigger and that didn't do it, but setting the depends_id on a tag on some resource in module 2 seems to have done it. Hacky but oh well I guess.", "meta": {"posReactions": "0", "negReactions": "0"}}
{"id": "COM25", "speaker": "eedwardsdisco", "conversation_id": "ROOT", "reply_to": "COM24", "timestamp": "2017-03-16T05:00:59Z", "text": "@stack72 \r\n\r\nOn 0.9.0\r\n\r\nStill getting \"depends_on is not a valid parameter\" when used within a module definition. I see a lot of +1s asking to be able to depend on another module itself, but the feature that's supposed to work (depend on a module's resource), is broken.\r\n\r\nThis is biting me HARD because of the big warning at the top of the [ecs service page](https://www.terraform.io/docs/providers/aws/r/ecs_service.html) which describes needing to use depends_on to prevent a race condition. Due to this bug, **you cannot prevent it**.", "meta": {"posReactions": "29", "negReactions": "0"}}
{"id": "COM26", "speaker": "sbatchu0108", "conversation_id": "ROOT", "reply_to": "COM25", "timestamp": "2017-03-27T20:11:51Z", "text": "+1\r\n", "meta": {"posReactions": "0", "negReactions": "3"}}
{"id": "COM27", "speaker": "awebneck", "conversation_id": "ROOT", "reply_to": "COM26", "timestamp": "2017-03-29T13:58:04Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "5"}}
{"id": "COM28", "speaker": "artrunde", "conversation_id": "ROOT", "reply_to": "COM27", "timestamp": "2017-04-02T18:24:46Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "5"}}
{"id": "COM29", "speaker": "Wenzil", "conversation_id": "ROOT", "reply_to": "COM28", "timestamp": "2017-04-19T16:59:37Z", "text": "+1", "meta": {"posReactions": "0", "negReactions": "0"}}
