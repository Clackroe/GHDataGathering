{
    "active_lock_reason": "too heated",
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Let's add examples. I think it would be good to add examples to each function (if possible?) as well as to illustrate some points - not every example should make every point but it would be good to cover these.\r\n\r\n- how do %d, %s, %q, %v differ\r\n\r\n- how do you do left/right padding\r\n\r\n- decimal formatting\r\n\r\n- how does \"ln\" ending vary from \"f\" ending\r\n\r\nWhen you open a change, put this at the bottom of the commit message:\r\n\r\n```\r\nUpdates golang/go#27376.\r\n```\r\n\r\nThat way gopherbot will post a comment here with a link to your CL.\r\n\r\nAdd a comment if you want to fix one and I'll put your name next to the func in question.\r\n\r\n- [x] `func Errorf(format string, a ...interface{}) error`: @ianzapolsky\r\n\r\n- [x] func Fprint(w io.Writer, a ...interface{}) (n int, err error)\r\n\r\n- [ ] `func Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error)`: @MaerF0x0\r\n\r\n- [x] `func Fprintln(w io.Writer, a ...interface{}) (n int, err error)`: @waits \r\n\r\n- [ ] `func Fscan(r io.Reader, a ...interface{}) (n int, err error)`: @andriisoldatenko\r\n\r\n- [ ] func Fscanf(r io.Reader, format string, a ...interface{}) (n int, err error)\r\n\r\n- [x] `func Fscanln(r io.Reader, a ...interface{}) (n int, err error)`: @mfrw\r\n\r\n- [x] func Print(a ...interface{}) (n int, err error)\r\n\r\n- [ ] `func Printf(format string, a ...interface{}) (n int, err error)`: @mooreds \r\n\r\n- [x] `func Println(a ...interface{}) (n int, err error)`: @techmexdev\r\n\r\n- [ ] func Scan(a ...interface{}) (n int, err error)\r\n\r\n- [ ] func Scanf(format string, a ...interface{}) (n int, err error)\r\n\r\n- [ ] func Scanln(a ...interface{}) (n int, err error)\r\n\r\n- [x] func Sprint(a ...interface{}) string\r\n\r\n- [x] `func Sprintf(format string, a ...interface{}) string`: @venilnoronha\r\n\r\n- [x] `func Sprintln(a ...interface{}) string`: @drewvanstone\r\n\r\n- [ ] func Sscan(str string, a ...interface{}) (n int, err error)\r\n\r\n- [ ] func Sscanf(str string, format string, a ...interface{}) (n int, err error)\r\n\r\n- [ ] func Sscanln(str string, a ...interface{}) (n int, err error)\r\n\r\n- [ ] type Formatter\r\n\r\n- [x] type GoStringer\r\n\r\n- [ ] type ScanState\r\n\r\n- [ ] type Scanner\r\n\r\n- [ ] type State\r\n\r\n- [x] type Stringer\r\n",
    "closed_at": "2018-09-07T12:44:59Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4324516?v=4",
        "events_url": "https://api.github.com/users/robpike/events{/privacy}",
        "followers_url": "https://api.github.com/users/robpike/followers",
        "following_url": "https://api.github.com/users/robpike/following{/other_user}",
        "gists_url": "https://api.github.com/users/robpike/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robpike",
        "id": 4324516,
        "login": "robpike",
        "node_id": "MDQ6VXNlcjQzMjQ1MTY=",
        "organizations_url": "https://api.github.com/users/robpike/orgs",
        "received_events_url": "https://api.github.com/users/robpike/received_events",
        "repos_url": "https://api.github.com/users/robpike/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robpike/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robpike/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robpike"
    },
    "comments": 35,
    "comments_url": "https://api.github.com/repos/golang/go/issues/27376/comments",
    "created_at": "2018-08-30T18:06:50Z",
    "events_url": "https://api.github.com/repos/golang/go/issues/27376/events",
    "html_url": "https://github.com/golang/go/issues/27376",
    "id": 355695130,
    "labels": [
        {
            "color": "aaffaa",
            "default": false,
            "description": null,
            "id": 150880209,
            "name": "Documentation",
            "node_id": "MDU6TGFiZWwxNTA4ODAyMDk=",
            "url": "https://api.github.com/repos/golang/go/labels/Documentation"
        },
        {
            "color": "ededed",
            "default": false,
            "description": "The path to resolution is known, but the work has not been done.",
            "id": 373399998,
            "name": "NeedsFix",
            "node_id": "MDU6TGFiZWwzNzMzOTk5OTg=",
            "url": "https://api.github.com/repos/golang/go/labels/NeedsFix"
        },
        {
            "color": "c2f9a7",
            "default": false,
            "description": null,
            "id": 742514238,
            "name": "Community",
            "node_id": "MDU6TGFiZWw3NDI1MTQyMzg=",
            "url": "https://api.github.com/repos/golang/go/labels/Community"
        }
    ],
    "labels_url": "https://api.github.com/repos/golang/go/issues/27376/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 2408,
        "created_at": "2015-04-06T20:47:19Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=4",
            "events_url": "https://api.github.com/users/rsc/events{/privacy}",
            "followers_url": "https://api.github.com/users/rsc/followers",
            "following_url": "https://api.github.com/users/rsc/following{/other_user}",
            "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/rsc",
            "id": 104030,
            "login": "rsc",
            "node_id": "MDQ6VXNlcjEwNDAzMA==",
            "organizations_url": "https://api.github.com/users/rsc/orgs",
            "received_events_url": "https://api.github.com/users/rsc/received_events",
            "repos_url": "https://api.github.com/users/rsc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/rsc"
        },
        "description": "No plan to fix in any specific release.\r\n",
        "due_on": "2099-12-31T08:00:00Z",
        "html_url": "https://github.com/golang/go/milestone/6",
        "id": 1055141,
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lMTA1NTE0MQ==",
        "number": 6,
        "open_issues": 2283,
        "state": "open",
        "title": "Unplanned",
        "updated_at": "2023-06-07T13:00:56Z",
        "url": "https://api.github.com/repos/golang/go/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzNTU2OTUxMzA=",
    "number": 27376,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/golang/go/issues/27376/reactions"
    },
    "repository_url": "https://api.github.com/repos/golang/go",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/golang/go/issues/27376/timeline",
    "title": "fmt: add examples",
    "updated_at": "2022-06-23T05:34:19Z",
    "url": "https://api.github.com/repos/golang/go/issues/27376",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/234019?v=4",
        "events_url": "https://api.github.com/users/kevinburke/events{/privacy}",
        "followers_url": "https://api.github.com/users/kevinburke/followers",
        "following_url": "https://api.github.com/users/kevinburke/following{/other_user}",
        "gists_url": "https://api.github.com/users/kevinburke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kevinburke",
        "id": 234019,
        "login": "kevinburke",
        "node_id": "MDQ6VXNlcjIzNDAxOQ==",
        "organizations_url": "https://api.github.com/users/kevinburke/orgs",
        "received_events_url": "https://api.github.com/users/kevinburke/received_events",
        "repos_url": "https://api.github.com/users/kevinburke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kevinburke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kevinburke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kevinburke"
    }
}