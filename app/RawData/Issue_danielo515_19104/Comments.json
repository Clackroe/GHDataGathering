[
    {
        "author_association": "NONE",
        "body": "This works just fine. If you call `setState` with the value equal to the current state, it might not rerender the current component because nothing have changes. This is expected",
        "created_at": "2020-06-09T13:36:59Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-641302366",
        "id": 641302366,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTMwMjM2Ng==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/641302366/reactions"
        },
        "updated_at": "2020-06-09T13:36:59Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/641302366",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2993861?v=4",
            "events_url": "https://api.github.com/users/vkurchatkin/events{/privacy}",
            "followers_url": "https://api.github.com/users/vkurchatkin/followers",
            "following_url": "https://api.github.com/users/vkurchatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/vkurchatkin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vkurchatkin",
            "id": 2993861,
            "login": "vkurchatkin",
            "node_id": "MDQ6VXNlcjI5OTM4NjE=",
            "organizations_url": "https://api.github.com/users/vkurchatkin/orgs",
            "received_events_url": "https://api.github.com/users/vkurchatkin/received_events",
            "repos_url": "https://api.github.com/users/vkurchatkin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vkurchatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vkurchatkin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vkurchatkin"
        }
    },
    {
        "author_association": "NONE",
        "body": "even on a functional component? It is not a class component or a pure component.\r\nWhat about the scenario that I'm describing? Where you need to update certain part of the dom component with useEffect?",
        "created_at": "2020-06-09T14:49:39Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-641347390",
        "id": 641347390,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTM0NzM5MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/641347390/reactions"
        },
        "updated_at": "2020-06-09T14:49:39Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/641347390",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2270425?v=4",
            "events_url": "https://api.github.com/users/danielo515/events{/privacy}",
            "followers_url": "https://api.github.com/users/danielo515/followers",
            "following_url": "https://api.github.com/users/danielo515/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielo515/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/danielo515",
            "id": 2270425,
            "login": "danielo515",
            "node_id": "MDQ6VXNlcjIyNzA0MjU=",
            "organizations_url": "https://api.github.com/users/danielo515/orgs",
            "received_events_url": "https://api.github.com/users/danielo515/received_events",
            "repos_url": "https://api.github.com/users/danielo515/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/danielo515/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielo515/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/danielo515"
        }
    },
    {
        "author_association": "NONE",
        "body": "In your example, as you set state for the hook to be just the same value, it just doesn't trigger any rerendering on any component at all. But if you add another useState hook to count rendering time and increase it in `update` function, the new hook will trigger rerendering in App component and in turn also rerender `Input` because `Input` isn't memoized as you stated.\r\n\r\n```js\r\n  const [state,setState] = React.useState(\"\")\r\n  const [,setRenderCount] = React.useState(0)\r\n  const update = val => {\r\n    setRenderCount(i => i + 1)\r\n    if(val === 'aaa') return setState('aa')\r\n    setState(val)\r\n  }\r\n```\r\n\r\nThis's probably new information for you and you might find it useful to make whatever you need.",
        "created_at": "2020-06-10T08:47:40Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-641850289",
        "id": 641850289,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTg1MDI4OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/641850289/reactions"
        },
        "updated_at": "2020-06-10T08:47:40Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/641850289",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1757315?v=4",
            "events_url": "https://api.github.com/users/illuminist/events{/privacy}",
            "followers_url": "https://api.github.com/users/illuminist/followers",
            "following_url": "https://api.github.com/users/illuminist/following{/other_user}",
            "gists_url": "https://api.github.com/users/illuminist/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/illuminist",
            "id": 1757315,
            "login": "illuminist",
            "node_id": "MDQ6VXNlcjE3NTczMTU=",
            "organizations_url": "https://api.github.com/users/illuminist/orgs",
            "received_events_url": "https://api.github.com/users/illuminist/received_events",
            "repos_url": "https://api.github.com/users/illuminist/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/illuminist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/illuminist/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/illuminist"
        }
    },
    {
        "author_association": "NONE",
        "body": " Hello @illuminist , thanks for providing a workaround. The thing is that I can not rely on the parent component state. Will that work if I add the sate on the Input itself? On my experience, it worked but I don't know if that is expected.\r\nAt this point, will it be better to just attach a normal event listener to the on change event ?",
        "created_at": "2020-06-10T14:58:37Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-642065852",
        "id": 642065852,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjA2NTg1Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/642065852/reactions"
        },
        "updated_at": "2020-06-10T14:58:37Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/642065852",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2270425?v=4",
            "events_url": "https://api.github.com/users/danielo515/events{/privacy}",
            "followers_url": "https://api.github.com/users/danielo515/followers",
            "following_url": "https://api.github.com/users/danielo515/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielo515/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/danielo515",
            "id": 2270425,
            "login": "danielo515",
            "node_id": "MDQ6VXNlcjIyNzA0MjU=",
            "organizations_url": "https://api.github.com/users/danielo515/orgs",
            "received_events_url": "https://api.github.com/users/danielo515/received_events",
            "repos_url": "https://api.github.com/users/danielo515/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/danielo515/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielo515/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/danielo515"
        }
    },
    {
        "author_association": "NONE",
        "body": "Should be better to rely on change event instead as it has an access to the input element can manipulate its cursor directly.\r\n\r\nMain reason is because of state doesn't change, there is no reason for a component to re-render. Maybe have another internal state for displaying while keep true value in parent state. But I don't know your real use case.",
        "created_at": "2020-06-10T15:07:04Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-642071750",
        "id": 642071750,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjA3MTc1MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/642071750/reactions"
        },
        "updated_at": "2020-06-10T18:44:56Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/642071750",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1757315?v=4",
            "events_url": "https://api.github.com/users/illuminist/events{/privacy}",
            "followers_url": "https://api.github.com/users/illuminist/followers",
            "following_url": "https://api.github.com/users/illuminist/following{/other_user}",
            "gists_url": "https://api.github.com/users/illuminist/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/illuminist",
            "id": 1757315,
            "login": "illuminist",
            "node_id": "MDQ6VXNlcjE3NTczMTU=",
            "organizations_url": "https://api.github.com/users/illuminist/orgs",
            "received_events_url": "https://api.github.com/users/illuminist/received_events",
            "repos_url": "https://api.github.com/users/illuminist/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/illuminist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/illuminist/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/illuminist"
        }
    },
    {
        "author_association": "NONE",
        "body": "Hello @illuminist , my use-case is an input field that auto-formats as the user types. Because the auto formatting there are situations where the resulting value after user-input + format has not changed (for example, the user inputs a comma, and after auto format instead of `,,` you have just one comma `,` but the cursor  should be at the right of the comma now).\r\nHaving an internal state may be a solution, but it can not be the actual user input because without formatting it may be incorrect.",
        "created_at": "2020-06-15T08:43:08Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-643991147",
        "id": 643991147,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzk5MTE0Nw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/643991147/reactions"
        },
        "updated_at": "2020-06-15T08:43:08Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/643991147",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2270425?v=4",
            "events_url": "https://api.github.com/users/danielo515/events{/privacy}",
            "followers_url": "https://api.github.com/users/danielo515/followers",
            "following_url": "https://api.github.com/users/danielo515/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielo515/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/danielo515",
            "id": 2270425,
            "login": "danielo515",
            "node_id": "MDQ6VXNlcjIyNzA0MjU=",
            "organizations_url": "https://api.github.com/users/danielo515/orgs",
            "received_events_url": "https://api.github.com/users/danielo515/received_events",
            "repos_url": "https://api.github.com/users/danielo515/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/danielo515/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielo515/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/danielo515"
        }
    },
    {
        "author_association": "NONE",
        "body": "So that you should have 2 state: one for display, and another for actual value.\r\n\r\nThe display one should be internal state, and actual value is in parent component. Mainly, because of input event will report its value, in this case, the display state. So in value change handler, you have to find a way to convert display value into actual value (or formatted value into actual value) for example: converting string \"10,000\" into number 10000. Then your component reports 10000 back to parent component and save \"10,000\" as its internal state. This way, even user inputs \"10,000.00\", the parent component will have same 10000 actual value, but input component will have \"10,000.00\" to display.",
        "created_at": "2020-06-15T09:18:39Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-644010210",
        "id": 644010210,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDAxMDIxMA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/644010210/reactions"
        },
        "updated_at": "2020-06-15T09:18:39Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/644010210",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1757315?v=4",
            "events_url": "https://api.github.com/users/illuminist/events{/privacy}",
            "followers_url": "https://api.github.com/users/illuminist/followers",
            "following_url": "https://api.github.com/users/illuminist/following{/other_user}",
            "gists_url": "https://api.github.com/users/illuminist/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/illuminist",
            "id": 1757315,
            "login": "illuminist",
            "node_id": "MDQ6VXNlcjE3NTczMTU=",
            "organizations_url": "https://api.github.com/users/illuminist/orgs",
            "received_events_url": "https://api.github.com/users/illuminist/received_events",
            "repos_url": "https://api.github.com/users/illuminist/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/illuminist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/illuminist/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/illuminist"
        }
    },
    {
        "author_association": "COLLABORATOR",
        "body": "> On previous versions of react\r\n\r\nYou're probably referring to the experimental version of hooks where React didn't bail out when it saw identical states. This was changed in https://github.com/facebook/react/pull/14569 and is documented under [\"Bailing out of a state update\"](https://reactjs.org/docs/hooks-reference.html#bailing-out-of-a-state-update).\r\n\r\nThis means your `App` component won't re-render if the state is identical which in turn will not re-render the `Input` component.\r\n\r\nIf you're referring to `setState` in class components then it isn't intended that a class components `setState` behaves the same as the state getter returned from `useState`.\r\n\r\nIf you rely on the component re-rendering on identical state values you can either switch back to class components or wrap the state value in an object e.g. `setState({ value })` and destructure it on read  e.g `const [{ value }, setState] = React.useState()`.",
        "created_at": "2020-08-20T12:52:00Z",
        "html_url": "https://github.com/facebook/react/issues/19104#issuecomment-677645668",
        "id": 677645668,
        "issue_url": "https://api.github.com/repos/facebook/react/issues/19104",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NzY0NTY2OA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/facebook/react/issues/comments/677645668/reactions"
        },
        "updated_at": "2020-08-20T12:52:00Z",
        "url": "https://api.github.com/repos/facebook/react/issues/comments/677645668",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/eps1lon",
            "id": 12292047,
            "login": "eps1lon",
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/eps1lon"
        }
    }
]