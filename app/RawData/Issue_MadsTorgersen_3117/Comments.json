[
    {
        "author_association": "CONTRIBUTOR",
        "body": "See relevant discussion at #2765.",
        "created_at": "2020-01-21T21:15:56Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-576885339",
        "id": 576885339,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Njg4NTMzOQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576885339/reactions"
        },
        "updated_at": "2020-01-21T21:15:56Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576885339",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6677272?v=4",
            "events_url": "https://api.github.com/users/MadsTorgersen/events{/privacy}",
            "followers_url": "https://api.github.com/users/MadsTorgersen/followers",
            "following_url": "https://api.github.com/users/MadsTorgersen/following{/other_user}",
            "gists_url": "https://api.github.com/users/MadsTorgersen/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MadsTorgersen",
            "id": 6677272,
            "login": "MadsTorgersen",
            "node_id": "MDQ6VXNlcjY2NzcyNzI=",
            "organizations_url": "https://api.github.com/users/MadsTorgersen/orgs",
            "received_events_url": "https://api.github.com/users/MadsTorgersen/received_events",
            "repos_url": "https://api.github.com/users/MadsTorgersen/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MadsTorgersen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MadsTorgersen/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MadsTorgersen"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "The primary thing that bothers me here is scoping.  i.e. both around 'args' as well as the scopes of variables introduced in teh statements that precede a namespace.  However, it may just be an initial aversion that i coudl get over.\r\n\r\nGiven that your goal is `Proposal: Simple programs`, i would say that there's actually no need for scoping to extend from teh statements elsewhere.  A simple program is just statements and little funcs.  The moment we get to namespaces/classes/etc, we're no longer \"simple\" and i personally would prefer stating that they shouldn't mix.\r\n\r\n--\r\n\r\nanother issue for me is that while this is pitched as 'simple programs' it seems to still allow the statements to coexist with namespaces/classes.  First, this isn't really 'simple' to me anymore.  Second, it actually opens up large cans of worms for me.  For example, if i were to be able to have top-level statements that can be in scope for the rest of my program, then I absolutely would want to be able to make those top level variables `readonly` so they couldn't just be overwritten by the rest of my code.\r\n\r\nI strongly like the idea of simple-programs.  But I actually don't think this goes far enough.  Perhaps a simple program should *only* be top level statements/local-funcs?",
        "created_at": "2020-01-21T21:30:20Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-576891304",
        "id": 576891304,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Njg5MTMwNA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 5,
            "-1": 2,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 7,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576891304/reactions"
        },
        "updated_at": "2020-01-21T21:39:18Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576891304",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/4564579?v=4",
            "events_url": "https://api.github.com/users/CyrusNajmabadi/events{/privacy}",
            "followers_url": "https://api.github.com/users/CyrusNajmabadi/followers",
            "following_url": "https://api.github.com/users/CyrusNajmabadi/following{/other_user}",
            "gists_url": "https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/CyrusNajmabadi",
            "id": 4564579,
            "login": "CyrusNajmabadi",
            "node_id": "MDQ6VXNlcjQ1NjQ1Nzk=",
            "organizations_url": "https://api.github.com/users/CyrusNajmabadi/orgs",
            "received_events_url": "https://api.github.com/users/CyrusNajmabadi/received_events",
            "repos_url": "https://api.github.com/users/CyrusNajmabadi/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CyrusNajmabadi/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/CyrusNajmabadi"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "Where do imported namespaces come in?  Or do we need support for `using` directive within a method in order to support this?  Or would the compiler take `using` directives and \"promote\" them outside of the generated class?  What if multiple files want to import multiple and potentially colliding namespaces?\r\n\r\nIt's difficult to not have an immediate negative visceral reaction to this proposal.  It feels like it creates yet another dialect of the language without solving for any problems or the use cases suggested.  You wouldn't be able to take CSX and run it this way, not without additional syntax work.  You couldn't use most of the language as you'd expect.  All variables end up in some mixed global scope.\r\n\r\nFeels like tools like LINQPad already satisfy this need and do so in a vastly superior manner.",
        "created_at": "2020-01-21T21:36:02Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-576893466",
        "id": 576893466,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Njg5MzQ2Ng==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 2,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 2,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576893466/reactions"
        },
        "updated_at": "2020-01-21T21:36:02Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576893466",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10102290?v=4",
            "events_url": "https://api.github.com/users/HaloFour/events{/privacy}",
            "followers_url": "https://api.github.com/users/HaloFour/followers",
            "following_url": "https://api.github.com/users/HaloFour/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaloFour/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/HaloFour",
            "id": 10102290,
            "login": "HaloFour",
            "node_id": "MDQ6VXNlcjEwMTAyMjkw",
            "organizations_url": "https://api.github.com/users/HaloFour/orgs",
            "received_events_url": "https://api.github.com/users/HaloFour/received_events",
            "repos_url": "https://api.github.com/users/HaloFour/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/HaloFour/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaloFour/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/HaloFour"
        }
    },
    {
        "author_association": "NONE",
        "body": "@CyrusNajmabadi I agree that simple programs should remain simple. I am not even convinced that splitting your simple program into multiple simple files is something desirable. I imagine that `csc run hello.cs` or `dotnet run hello.cs` would be the preferred mode of running them. As soon as you have multiple files you need either a csproj or some other way to refer to multiple files. The former is complicated enough that you might as well rote learn `static void Main` as well, while the latter leads learners away from the \"proper\" way of doing things.\r\n\r\nOf course, the scripting dialect could invent its own way of including other files, but that's outside the scope of this issue.",
        "created_at": "2020-01-21T22:54:18Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-576924769",
        "id": 576924769,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjkyNDc2OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576924769/reactions"
        },
        "updated_at": "2020-01-22T09:27:39Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576924769",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8640149?v=4",
            "events_url": "https://api.github.com/users/orthoxerox/events{/privacy}",
            "followers_url": "https://api.github.com/users/orthoxerox/followers",
            "following_url": "https://api.github.com/users/orthoxerox/following{/other_user}",
            "gists_url": "https://api.github.com/users/orthoxerox/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/orthoxerox",
            "id": 8640149,
            "login": "orthoxerox",
            "node_id": "MDQ6VXNlcjg2NDAxNDk=",
            "organizations_url": "https://api.github.com/users/orthoxerox/orgs",
            "received_events_url": "https://api.github.com/users/orthoxerox/received_events",
            "repos_url": "https://api.github.com/users/orthoxerox/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/orthoxerox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orthoxerox/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/orthoxerox"
        }
    },
    {
        "author_association": "NONE",
        "body": "I agree with @MadsTorgersen proposal, that this feature should be targeting simple programs and people learning the language (and should be a shortcut for what goes inside Main()).  It could be worth adding a little more detail (with examples) to the section on the scoping of local variables and functions just so everyone is clear.",
        "created_at": "2020-01-22T00:51:06Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-576956973",
        "id": 576956973,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Njk1Njk3Mw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576956973/reactions"
        },
        "updated_at": "2020-01-22T00:51:06Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/576956973",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55229438?v=4",
            "events_url": "https://api.github.com/users/amdav/events{/privacy}",
            "followers_url": "https://api.github.com/users/amdav/followers",
            "following_url": "https://api.github.com/users/amdav/following{/other_user}",
            "gists_url": "https://api.github.com/users/amdav/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/amdav",
            "id": 55229438,
            "login": "amdav",
            "node_id": "MDQ6VXNlcjU1MjI5NDM4",
            "organizations_url": "https://api.github.com/users/amdav/orgs",
            "received_events_url": "https://api.github.com/users/amdav/received_events",
            "repos_url": "https://api.github.com/users/amdav/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/amdav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amdav/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/amdav"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "I'm feeling a little bit sceptical of this proposal.\r\n\r\nWriting a static Main function is not particularly difficult, and the tooling generates it for you anyway. In terms of benefits of top level statements I would suggest there's almost none from an actual use case perspective.\r\n\r\nInstead I feel this is more of a marketing issue. C# looks old and stuffy because you need so many things to create an app. Python you just type something and it runs.\r\n\r\nMarketing is important, but I don't think it's worth introducing a whole load of complexity for it. Instead I would keep this extremely simple. You can have a single file in a project with top level statements, which act exactly as if they're inside an async Main method. They are not globally scoped, and can't be referenced anywhere else. That should be enough to give beginners their python feel.",
        "created_at": "2020-01-22T05:09:33Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577010354",
        "id": 577010354,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzAxMDM1NA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 22,
            "-1": 6,
            "confused": 4,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 32,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577010354/reactions"
        },
        "updated_at": "2020-01-22T05:10:49Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577010354",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29174528?v=4",
            "events_url": "https://api.github.com/users/YairHalberstadt/events{/privacy}",
            "followers_url": "https://api.github.com/users/YairHalberstadt/followers",
            "following_url": "https://api.github.com/users/YairHalberstadt/following{/other_user}",
            "gists_url": "https://api.github.com/users/YairHalberstadt/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/YairHalberstadt",
            "id": 29174528,
            "login": "YairHalberstadt",
            "node_id": "MDQ6VXNlcjI5MTc0NTI4",
            "organizations_url": "https://api.github.com/users/YairHalberstadt/orgs",
            "received_events_url": "https://api.github.com/users/YairHalberstadt/received_events",
            "repos_url": "https://api.github.com/users/YairHalberstadt/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/YairHalberstadt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YairHalberstadt/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/YairHalberstadt"
        }
    },
    {
        "author_association": "NONE",
        "body": "For my part I really like Scenario 2. That would allow for significant time savings via less typing. And having worked with VB.NET for a number of years, I do miss VB's modules and their implicit imports.\r\n\r\n> User defined operators and conversions are probably completely off the table, though, as they have relationships with their enclosing type, and there wouldn't be one.\r\n\r\nI would love to have globally accessible implicit and other operators I could define even for existing CLR types. So if the team can find a way to include those it would add even more value to Scenario 2.\r\n",
        "created_at": "2020-01-22T08:20:02Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577061040",
        "id": 577061040,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzA2MTA0MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577061040/reactions"
        },
        "updated_at": "2020-01-22T08:21:43Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577061040",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8166847?v=4",
            "events_url": "https://api.github.com/users/fitdev/events{/privacy}",
            "followers_url": "https://api.github.com/users/fitdev/followers",
            "following_url": "https://api.github.com/users/fitdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/fitdev/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/fitdev",
            "id": 8166847,
            "login": "fitdev",
            "node_id": "MDQ6VXNlcjgxNjY4NDc=",
            "organizations_url": "https://api.github.com/users/fitdev/orgs",
            "received_events_url": "https://api.github.com/users/fitdev/received_events",
            "repos_url": "https://api.github.com/users/fitdev/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/fitdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fitdev/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/fitdev"
        }
    },
    {
        "author_association": "NONE",
        "body": "@YairHalberstadt I would absolutely use simple C# programs for throwaway scripts and tiny utilities. `dotnet new console` is fast, but it leaves behind a whole project folder with a bunch of binaries.",
        "created_at": "2020-01-22T10:54:39Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577125757",
        "id": 577125757,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzEyNTc1Nw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577125757/reactions"
        },
        "updated_at": "2020-01-22T10:54:39Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577125757",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8640149?v=4",
            "events_url": "https://api.github.com/users/orthoxerox/events{/privacy}",
            "followers_url": "https://api.github.com/users/orthoxerox/followers",
            "following_url": "https://api.github.com/users/orthoxerox/following{/other_user}",
            "gists_url": "https://api.github.com/users/orthoxerox/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/orthoxerox",
            "id": 8640149,
            "login": "orthoxerox",
            "node_id": "MDQ6VXNlcjg2NDAxNDk=",
            "organizations_url": "https://api.github.com/users/orthoxerox/orgs",
            "received_events_url": "https://api.github.com/users/orthoxerox/received_events",
            "repos_url": "https://api.github.com/users/orthoxerox/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/orthoxerox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orthoxerox/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/orthoxerox"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@orthoxerox \r\nWould you require more than one file?",
        "created_at": "2020-01-22T10:58:14Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577127081",
        "id": 577127081,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzEyNzA4MQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577127081/reactions"
        },
        "updated_at": "2020-01-22T10:58:14Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577127081",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29174528?v=4",
            "events_url": "https://api.github.com/users/YairHalberstadt/events{/privacy}",
            "followers_url": "https://api.github.com/users/YairHalberstadt/followers",
            "following_url": "https://api.github.com/users/YairHalberstadt/following{/other_user}",
            "gists_url": "https://api.github.com/users/YairHalberstadt/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/YairHalberstadt",
            "id": 29174528,
            "login": "YairHalberstadt",
            "node_id": "MDQ6VXNlcjI5MTc0NTI4",
            "organizations_url": "https://api.github.com/users/YairHalberstadt/orgs",
            "received_events_url": "https://api.github.com/users/YairHalberstadt/received_events",
            "repos_url": "https://api.github.com/users/YairHalberstadt/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/YairHalberstadt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YairHalberstadt/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/YairHalberstadt"
        }
    },
    {
        "author_association": "NONE",
        "body": "@YairHalberstadt one file per utility/script. I've already written I don't think it's nesessary to support multi-file \"simple programs\".",
        "created_at": "2020-01-22T11:48:16Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577144630",
        "id": 577144630,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzE0NDYzMA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577144630/reactions"
        },
        "updated_at": "2020-01-22T11:48:16Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577144630",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8640149?v=4",
            "events_url": "https://api.github.com/users/orthoxerox/events{/privacy}",
            "followers_url": "https://api.github.com/users/orthoxerox/followers",
            "following_url": "https://api.github.com/users/orthoxerox/following{/other_user}",
            "gists_url": "https://api.github.com/users/orthoxerox/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/orthoxerox",
            "id": 8640149,
            "login": "orthoxerox",
            "node_id": "MDQ6VXNlcjg2NDAxNDk=",
            "organizations_url": "https://api.github.com/users/orthoxerox/orgs",
            "received_events_url": "https://api.github.com/users/orthoxerox/received_events",
            "repos_url": "https://api.github.com/users/orthoxerox/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/orthoxerox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orthoxerox/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/orthoxerox"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "If all this proposal does is take the statements in the file(s) and put that into the middle of a generated `Main` method why does this need to be a part of the compiler or C# spec at all?  Couldn't a separate `dotnet` tool be shipped which does that for users?  A simplified tool could be geared towards making this as easy as possible.  And you could prototype this all out right now without having to touch Roslyn or the C# spec.",
        "created_at": "2020-01-22T16:13:56Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577262485",
        "id": 577262485,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzI2MjQ4NQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 1,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577262485/reactions"
        },
        "updated_at": "2020-01-22T16:14:56Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577262485",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10102290?v=4",
            "events_url": "https://api.github.com/users/HaloFour/events{/privacy}",
            "followers_url": "https://api.github.com/users/HaloFour/followers",
            "following_url": "https://api.github.com/users/HaloFour/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaloFour/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/HaloFour",
            "id": 10102290,
            "login": "HaloFour",
            "node_id": "MDQ6VXNlcjEwMTAyMjkw",
            "organizations_url": "https://api.github.com/users/HaloFour/orgs",
            "received_events_url": "https://api.github.com/users/HaloFour/received_events",
            "repos_url": "https://api.github.com/users/HaloFour/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/HaloFour/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaloFour/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/HaloFour"
        }
    },
    {
        "author_association": "NONE",
        "body": "@HaloFour It's a bit more complex than that, since the tool has to recognize the usings as well.",
        "created_at": "2020-01-22T16:55:53Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577282009",
        "id": 577282009,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzI4MjAwOQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577282009/reactions"
        },
        "updated_at": "2020-01-22T16:55:53Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577282009",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8640149?v=4",
            "events_url": "https://api.github.com/users/orthoxerox/events{/privacy}",
            "followers_url": "https://api.github.com/users/orthoxerox/followers",
            "following_url": "https://api.github.com/users/orthoxerox/following{/other_user}",
            "gists_url": "https://api.github.com/users/orthoxerox/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/orthoxerox",
            "id": 8640149,
            "login": "orthoxerox",
            "node_id": "MDQ6VXNlcjg2NDAxNDk=",
            "organizations_url": "https://api.github.com/users/orthoxerox/orgs",
            "received_events_url": "https://api.github.com/users/orthoxerox/received_events",
            "repos_url": "https://api.github.com/users/orthoxerox/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/orthoxerox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orthoxerox/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/orthoxerox"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@orthoxerox \r\n\r\n> It's a bit more complex than that, since the tool has to recognize the usings as well.\r\n\r\nI see nothing in this proposal that claims that `using` directives would be supported.  That would land us firmly back into dialect territory since said directives aren't permitted mid-method.  But, if this proposal would need to support it, without a corresponding change to the language, then an external tool could also do so just as easily.  CSX already does it.\r\n\r\nIMO, we'd get more mileage making it easier to get/use CSX, and adding support for converting CSX scripts to a C# project.\r\n\r\n",
        "created_at": "2020-01-22T17:04:13Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577286006",
        "id": 577286006,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzI4NjAwNg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 2,
            "-1": 1,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577286006/reactions"
        },
        "updated_at": "2020-01-22T17:04:13Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577286006",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10102290?v=4",
            "events_url": "https://api.github.com/users/HaloFour/events{/privacy}",
            "followers_url": "https://api.github.com/users/HaloFour/followers",
            "following_url": "https://api.github.com/users/HaloFour/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaloFour/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/HaloFour",
            "id": 10102290,
            "login": "HaloFour",
            "node_id": "MDQ6VXNlcjEwMTAyMjkw",
            "organizations_url": "https://api.github.com/users/HaloFour/orgs",
            "received_events_url": "https://api.github.com/users/HaloFour/received_events",
            "repos_url": "https://api.github.com/users/HaloFour/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/HaloFour/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaloFour/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/HaloFour"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "For me, the simple programs I would want to write:\r\n\r\n* Are single file.\r\n* Are ordered usings, types, functions, statements, e.g. (artificial example):\r\n\r\n    ```c#\r\n    using System;\r\n\r\n    class C\r\n    {\r\n        public int P { get; set; }\r\n    }\r\n\r\n    void Print(C c) => Console.WriteLine(c?.P);\r\n\r\n    Print(new C { P = 0 });\r\n    Print(null);\r\n    ```\r\n\r\n* Types don't need access to local variables from statements.\r\n\r\nThis means that for me, the suggested ordering of \"_statements_ right before the *namespace_member_declaration*s\" would not be natural, I'd prefer it the other way around.\r\n\r\nAnd being able to have top-level local functions in other files and being able to access top-level local variables from other files is unnecessary and probably undesirable.\r\n\r\nOn the other hand, the suggestion by @CyrusNajmabadi of having only \"top level statements/local-funcs\" goes too far: being able to declare types is necessary for the \"simple programs\" I want to write.",
        "created_at": "2020-01-22T19:28:01Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577346498",
        "id": 577346498,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzM0NjQ5OA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 5,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 5,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577346498/reactions"
        },
        "updated_at": "2020-01-22T19:28:01Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577346498",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/287848?v=4",
            "events_url": "https://api.github.com/users/svick/events{/privacy}",
            "followers_url": "https://api.github.com/users/svick/followers",
            "following_url": "https://api.github.com/users/svick/following{/other_user}",
            "gists_url": "https://api.github.com/users/svick/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/svick",
            "id": 287848,
            "login": "svick",
            "node_id": "MDQ6VXNlcjI4Nzg0OA==",
            "organizations_url": "https://api.github.com/users/svick/orgs",
            "received_events_url": "https://api.github.com/users/svick/received_events",
            "repos_url": "https://api.github.com/users/svick/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/svick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/svick/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/svick"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "Very interesting point @svick .  Thanks!  \r\n\r\nThere's something definitely more appealing to me about that as it feels much more 'natural' in terms of scoping.  i.e if i think of the 'top level locals' i declare as similar to 'method locals', then placing them after everyting else feels 'better' (since locals can't be referenced by code that is earlier than their declaration).  ",
        "created_at": "2020-01-22T19:37:44Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577350406",
        "id": 577350406,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzM1MDQwNg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 2,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 2,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577350406/reactions"
        },
        "updated_at": "2020-01-22T19:37:44Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577350406",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/4564579?v=4",
            "events_url": "https://api.github.com/users/CyrusNajmabadi/events{/privacy}",
            "followers_url": "https://api.github.com/users/CyrusNajmabadi/followers",
            "following_url": "https://api.github.com/users/CyrusNajmabadi/following{/other_user}",
            "gists_url": "https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/CyrusNajmabadi",
            "id": 4564579,
            "login": "CyrusNajmabadi",
            "node_id": "MDQ6VXNlcjQ1NjQ1Nzk=",
            "organizations_url": "https://api.github.com/users/CyrusNajmabadi/orgs",
            "received_events_url": "https://api.github.com/users/CyrusNajmabadi/received_events",
            "repos_url": "https://api.github.com/users/CyrusNajmabadi/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CyrusNajmabadi/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/CyrusNajmabadi"
        }
    },
    {
        "author_association": "NONE",
        "body": "@HaloFour Take a look at the grammarlet Mads posted:\r\n\r\n```\r\ncompilation_unit\r\n    : extern_alias_directive* using_directive* global_attributes? statement* namespace_member_declaration*\r\n    ;\r\n```\r\n\r\nUsings are supported, and they must precede the statements. I actually don't mind if CSX is merged with mainline C#, I can then just treat this proposal as the first step in that direction.",
        "created_at": "2020-01-22T19:41:40Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577352551",
        "id": 577352551,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzM1MjU1MQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577352551/reactions"
        },
        "updated_at": "2020-01-22T19:41:40Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577352551",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8640149?v=4",
            "events_url": "https://api.github.com/users/orthoxerox/events{/privacy}",
            "followers_url": "https://api.github.com/users/orthoxerox/followers",
            "following_url": "https://api.github.com/users/orthoxerox/following{/other_user}",
            "gists_url": "https://api.github.com/users/orthoxerox/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/orthoxerox",
            "id": 8640149,
            "login": "orthoxerox",
            "node_id": "MDQ6VXNlcjg2NDAxNDk=",
            "organizations_url": "https://api.github.com/users/orthoxerox/orgs",
            "received_events_url": "https://api.github.com/users/orthoxerox/received_events",
            "repos_url": "https://api.github.com/users/orthoxerox/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/orthoxerox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orthoxerox/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/orthoxerox"
        }
    },
    {
        "author_association": "NONE",
        "body": "Would like to voice that I prefer the scenario 2 specifically\r\n\r\nIs it true that I could assume that top level function will be `internal static` by default? If it is then, as for simple program purpose, just one `void Main` is already reduced enough from the verbose class and `static`\r\n\r\nAnother main reason I really support this feature is that, outermost `void Main` will become exactly one in the whole program, never be any conflict thereafter. It also true for any same name singleton function we want\r\n\r\nAlso I would like to repeat myself that, I wish that we could not write top level statement. Only function and property. Because, unlike class that easily make dependency chain, we cannot expect timing and order of the statement aside from `void Main`",
        "created_at": "2020-01-23T05:29:20Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577511769",
        "id": 577511769,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzUxMTc2OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 1,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577511769/reactions"
        },
        "updated_at": "2020-01-23T05:29:20Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577511769",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1042507?v=4",
            "events_url": "https://api.github.com/users/Thaina/events{/privacy}",
            "followers_url": "https://api.github.com/users/Thaina/followers",
            "following_url": "https://api.github.com/users/Thaina/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thaina/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Thaina",
            "id": 1042507,
            "login": "Thaina",
            "node_id": "MDQ6VXNlcjEwNDI1MDc=",
            "organizations_url": "https://api.github.com/users/Thaina/orgs",
            "received_events_url": "https://api.github.com/users/Thaina/received_events",
            "repos_url": "https://api.github.com/users/Thaina/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Thaina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thaina/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Thaina"
        }
    },
    {
        "author_association": "NONE",
        "body": "Scenario 2 is also my preferred option. \r\n\r\nBut I disagree with @MadsTorgersen suggestion of:\r\n> Their accessibility, like that of top-level classes would be `internal` or `public`, with `internal` being the default. \r\n\r\n`private` should be supported and should be the default, in my view. Each file containing its own set of free functions should end up as a differently named static class, allowing each to contain its own private functions.\r\n\r\n",
        "created_at": "2020-01-23T08:33:30Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577578897",
        "id": 577578897,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzU3ODg5Nw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577578897/reactions"
        },
        "updated_at": "2020-01-23T08:33:30Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577578897",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/196899?v=4",
            "events_url": "https://api.github.com/users/DavidArno/events{/privacy}",
            "followers_url": "https://api.github.com/users/DavidArno/followers",
            "following_url": "https://api.github.com/users/DavidArno/following{/other_user}",
            "gists_url": "https://api.github.com/users/DavidArno/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/DavidArno",
            "id": 196899,
            "login": "DavidArno",
            "node_id": "MDQ6VXNlcjE5Njg5OQ==",
            "organizations_url": "https://api.github.com/users/DavidArno/orgs",
            "received_events_url": "https://api.github.com/users/DavidArno/received_events",
            "repos_url": "https://api.github.com/users/DavidArno/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/DavidArno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DavidArno/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/DavidArno"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "> private should be supported and should be the default, in my view. Each file containing its own set of free functions should end up as a differently named static class, allowing each to contain its own private functions.\r\n\r\nI think that would be very useful to support an FP rather than class based style of programming. Each file becomes a sort of module and defines a number of private, internal, and public functions.",
        "created_at": "2020-01-23T08:36:58Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577580015",
        "id": 577580015,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzU4MDAxNQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 7,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 7,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577580015/reactions"
        },
        "updated_at": "2020-01-23T08:36:58Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577580015",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29174528?v=4",
            "events_url": "https://api.github.com/users/YairHalberstadt/events{/privacy}",
            "followers_url": "https://api.github.com/users/YairHalberstadt/followers",
            "following_url": "https://api.github.com/users/YairHalberstadt/following{/other_user}",
            "gists_url": "https://api.github.com/users/YairHalberstadt/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/YairHalberstadt",
            "id": 29174528,
            "login": "YairHalberstadt",
            "node_id": "MDQ6VXNlcjI5MTc0NTI4",
            "organizations_url": "https://api.github.com/users/YairHalberstadt/orgs",
            "received_events_url": "https://api.github.com/users/YairHalberstadt/received_events",
            "repos_url": "https://api.github.com/users/YairHalberstadt/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/YairHalberstadt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YairHalberstadt/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/YairHalberstadt"
        }
    },
    {
        "author_association": "NONE",
        "body": "I don't understand the use case here. Is something wrong with 'csx' scripts? Why can't 'learners' and those who want 'simple programs' just use the already-existing scripting dialect?\r\n\r\nIf the reason is \"no one is using it\"- that's a tooling and education problem, not a language design problem. You guys released  CSX and then did close to zero promotion of it- to my knowledge, no one official has ever blogged about it or demoed it at conferences, and development on  C# Interactive stopped almost as soon as it started.",
        "created_at": "2020-01-23T15:57:27Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577744856",
        "id": 577744856,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzc0NDg1Ng==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 2,
            "confused": 1,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577744856/reactions"
        },
        "updated_at": "2020-01-23T15:57:27Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577744856",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1965570?v=4",
            "events_url": "https://api.github.com/users/MgSam/events{/privacy}",
            "followers_url": "https://api.github.com/users/MgSam/followers",
            "following_url": "https://api.github.com/users/MgSam/following{/other_user}",
            "gists_url": "https://api.github.com/users/MgSam/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MgSam",
            "id": 1965570,
            "login": "MgSam",
            "node_id": "MDQ6VXNlcjE5NjU1NzA=",
            "organizations_url": "https://api.github.com/users/MgSam/orgs",
            "received_events_url": "https://api.github.com/users/MgSam/received_events",
            "repos_url": "https://api.github.com/users/MgSam/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MgSam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MgSam/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MgSam"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "> I strongly like the idea of simple-programs. But I actually don't think this goes far enough. Perhaps a simple program should only be top level statements/local-funcs?\r\n\r\n@CyrusNajmabadi I agree. IMO, having both top level statements/local-funcs and \"regular\" C# code coexist as proposed here can work, but allowing them to mix might be against the simple program scenario that motivated this proposal in the first place. \r\n\r\nHowever, this would pretty much make it identical to a csx, right? It seems to me that making improvement to existing C# scripting would address the simple program scenario more effectively. ",
        "created_at": "2020-01-23T23:17:20Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577922410",
        "id": 577922410,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzkyMjQxMA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 1,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577922410/reactions"
        },
        "updated_at": "2020-01-23T23:17:20Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577922410",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/788783?v=4",
            "events_url": "https://api.github.com/users/genlu/events{/privacy}",
            "followers_url": "https://api.github.com/users/genlu/followers",
            "following_url": "https://api.github.com/users/genlu/following{/other_user}",
            "gists_url": "https://api.github.com/users/genlu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/genlu",
            "id": 788783,
            "login": "genlu",
            "node_id": "MDQ6VXNlcjc4ODc4Mw==",
            "organizations_url": "https://api.github.com/users/genlu/orgs",
            "received_events_url": "https://api.github.com/users/genlu/received_events",
            "repos_url": "https://api.github.com/users/genlu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/genlu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/genlu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/genlu"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@MgSam The motivation here is to come up with a single dialect where you wouldn't have to think about the environment regardless to proficiency or task, people who just want/need to write a \"simple program\" and run it shouldn't use a different tool just because now they want to define a top-level function or whatever but for beginners this might be a show stopper especially for new programmers with no prior knowledge and this barrier is a language concern because there are two different dialects and two different tools for the same language.",
        "created_at": "2020-01-24T00:07:51Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-577936470",
        "id": 577936470,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzkzNjQ3MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 7,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 7,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577936470/reactions"
        },
        "updated_at": "2020-01-24T00:59:33Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/577936470",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3756641?v=4",
            "events_url": "https://api.github.com/users/eyalalonn/events{/privacy}",
            "followers_url": "https://api.github.com/users/eyalalonn/followers",
            "following_url": "https://api.github.com/users/eyalalonn/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyalalonn/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/eyalalonn",
            "id": 3756641,
            "login": "eyalalonn",
            "node_id": "MDQ6VXNlcjM3NTY2NDE=",
            "organizations_url": "https://api.github.com/users/eyalalonn/orgs",
            "received_events_url": "https://api.github.com/users/eyalalonn/received_events",
            "repos_url": "https://api.github.com/users/eyalalonn/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/eyalalonn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyalalonn/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/eyalalonn"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@AlgorithmsAreCool With all due respect your comment makes zero sense here.",
        "created_at": "2020-01-28T21:22:31Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579462386",
        "id": 579462386,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2MjM4Ng==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579462386/reactions"
        },
        "updated_at": "2020-01-28T21:23:14Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579462386",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3756641?v=4",
            "events_url": "https://api.github.com/users/eyalalonn/events{/privacy}",
            "followers_url": "https://api.github.com/users/eyalalonn/followers",
            "following_url": "https://api.github.com/users/eyalalonn/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyalalonn/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/eyalalonn",
            "id": 3756641,
            "login": "eyalalonn",
            "node_id": "MDQ6VXNlcjM3NTY2NDE=",
            "organizations_url": "https://api.github.com/users/eyalalonn/orgs",
            "received_events_url": "https://api.github.com/users/eyalalonn/received_events",
            "repos_url": "https://api.github.com/users/eyalalonn/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/eyalalonn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyalalonn/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/eyalalonn"
        }
    },
    {
        "author_association": "NONE",
        "body": "@eyalsk In retrospect, I agree. I've removed it.",
        "created_at": "2020-01-29T00:25:38Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579537275",
        "id": 579537275,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTUzNzI3NQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579537275/reactions"
        },
        "updated_at": "2020-01-29T00:25:38Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579537275",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10837869?v=4",
            "events_url": "https://api.github.com/users/AlgorithmsAreCool/events{/privacy}",
            "followers_url": "https://api.github.com/users/AlgorithmsAreCool/followers",
            "following_url": "https://api.github.com/users/AlgorithmsAreCool/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlgorithmsAreCool/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/AlgorithmsAreCool",
            "id": 10837869,
            "login": "AlgorithmsAreCool",
            "node_id": "MDQ6VXNlcjEwODM3ODY5",
            "organizations_url": "https://api.github.com/users/AlgorithmsAreCool/orgs",
            "received_events_url": "https://api.github.com/users/AlgorithmsAreCool/received_events",
            "repos_url": "https://api.github.com/users/AlgorithmsAreCool/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/AlgorithmsAreCool/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlgorithmsAreCool/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/AlgorithmsAreCool"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@RUSshy \r\n\r\nDoes it really solve that problem, though?  Sure, you might get \"Hello World\" off the ground faster, but for anything even slightly less trivial you're going to have to jump that same hurdle.\r\n\r\nAnd does that hurdle really exist, even for beginners?  Odds are that a beginner is starting from a tool like Visual Studio or `dotnet new` which writes all of that boilerplate for you.  If they're trying to write this program from the command line they've already had to vault significantly higher hurdles.\r\n\r\nIf adoption and outreach are the goals I'd suggest that there are significantly better opportunities that don't result in creating dialects of the language.  And if the Tiobe index is to be trusted it doesn't appear that C# is having too many issues attracting developers.  Neither do most of the other languages towards the top of that list most of which require some kind of syntactic boilerplate.\r\n\r\nOh, and bring back temporary solutions in Visual Studio.  The removal of that feature has been infinitely more annoying to my ability to toss together a quick&dirty project than having Visual Studio automatically generate some code around the code I want to write.\r\n\r\n",
        "created_at": "2020-01-29T17:31:47Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579870471",
        "id": 579870471,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTg3MDQ3MQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 3,
            "confused": 2,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 6,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579870471/reactions"
        },
        "updated_at": "2020-01-29T17:31:47Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579870471",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10102290?v=4",
            "events_url": "https://api.github.com/users/HaloFour/events{/privacy}",
            "followers_url": "https://api.github.com/users/HaloFour/followers",
            "following_url": "https://api.github.com/users/HaloFour/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaloFour/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/HaloFour",
            "id": 10102290,
            "login": "HaloFour",
            "node_id": "MDQ6VXNlcjEwMTAyMjkw",
            "organizations_url": "https://api.github.com/users/HaloFour/orgs",
            "received_events_url": "https://api.github.com/users/HaloFour/received_events",
            "repos_url": "https://api.github.com/users/HaloFour/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/HaloFour/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaloFour/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/HaloFour"
        }
    },
    {
        "author_association": "NONE",
        "body": "@HaloFour \r\n\r\n> `dotnet new` which writes all of that boilerplate for you\r\n\r\nIn the eye of beginner programmer, even the word `namespace` and `class`  itself is already magic that require them to understand that they cannot put a logic code inside those block. They need to learn that they could only put code into the bracket of `void Main`\r\n\r\nStarting with `dotnet new` will present them a sudden 3 layers that require understanding. This proposal can reduce to only one (or zero, if we could write a top level statement)",
        "created_at": "2020-01-29T17:44:14Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579875917",
        "id": 579875917,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTg3NTkxNw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579875917/reactions"
        },
        "updated_at": "2020-01-29T17:45:02Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579875917",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1042507?v=4",
            "events_url": "https://api.github.com/users/Thaina/events{/privacy}",
            "followers_url": "https://api.github.com/users/Thaina/followers",
            "following_url": "https://api.github.com/users/Thaina/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thaina/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Thaina",
            "id": 1042507,
            "login": "Thaina",
            "node_id": "MDQ6VXNlcjEwNDI1MDc=",
            "organizations_url": "https://api.github.com/users/Thaina/orgs",
            "received_events_url": "https://api.github.com/users/Thaina/received_events",
            "repos_url": "https://api.github.com/users/Thaina/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Thaina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thaina/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Thaina"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@Thaina \r\n\r\n> In the eye of beginner programmer, even the word `namespace` and `class` itself is already magic that require them to understand that they cannot put a logic code inside those block. They need to learn that they could only put code into the bracket of `void Main`\r\n\r\nI disagree that such syntax poses a burden to beginners, either to C# or to programming in general.  They're going to have to learn so much about the syntax of C# in order to put _anything_ anywhere anyway, and many of those concepts (like variables, definite assignment, etc.) are so much more complicated to grasp than requiring a single container around a method (`namespace` has always been optional).  What's next?  Implicit variable declaration by assignment?  Auto-importing namespaces?  Automatically emitting the output of any expression to the console?\r\n\r\nIf C# is going to seriously consider the addition of top-level functions it should do so in consideration as to how they would impact and benefit developers of all skill levels and projects of all shapes.",
        "created_at": "2020-01-29T17:55:36Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579880550",
        "id": 579880550,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTg4MDU1MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 5,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 5,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579880550/reactions"
        },
        "updated_at": "2020-01-29T17:55:57Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579880550",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10102290?v=4",
            "events_url": "https://api.github.com/users/HaloFour/events{/privacy}",
            "followers_url": "https://api.github.com/users/HaloFour/followers",
            "following_url": "https://api.github.com/users/HaloFour/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaloFour/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/HaloFour",
            "id": 10102290,
            "login": "HaloFour",
            "node_id": "MDQ6VXNlcjEwMTAyMjkw",
            "organizations_url": "https://api.github.com/users/HaloFour/orgs",
            "received_events_url": "https://api.github.com/users/HaloFour/received_events",
            "repos_url": "https://api.github.com/users/HaloFour/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/HaloFour/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaloFour/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/HaloFour"
        }
    },
    {
        "author_association": "NONE",
        "body": "> @Thaina\r\n> \r\n> > In the eye of beginner programmer, even the word `namespace` and `class` itself is already magic that require them to understand that they cannot put a logic code inside those block. They need to learn that they could only put code into the bracket of `void Main`\r\n> \r\n> I disagree that such syntax poses a burden to beginners, \r\n\r\nThis might be only my opinion. But I still remember when I myself was a beginner. So this is my direct experience. I have learn only a little bit of C and start learning Java and C# at the same time. I remember I feel much burden on the `package`/`namespace` and `class` that was unknown to me. I don't know what it is and what effect it has on my code. What can I change in that file. What is the meaning of it. Where could I start typing. Looking back now I still felt that burden, partly because I always want this feature so it always reminded me on that first day\r\n\r\nIt very easy when you have learn C or older language as a starting point to programming. You already know what a code of program really is. It really another story when you don't really know it but just start learning C# or Java as your first ever language in your life. And I think most of us here cannot experience that kind of experience anymore\r\n\r\nI have watch one 3Blue1Brown chapter, he talk about \"This problem seems hard, then it doesn't, but it really is\". He make that video about question in math competition that the organizer think it is quite easy, but the participant cannot solve it\r\nThe conclusive word he give is, \"It extremely hard to imagine what it feel like to not understand\". And I kind of thinking the same with our understanding of programming language. What we feel like easy is easy from our perspective with some experience. We then sometimes fail to understand what it feel like to not understand, because we can't imagine it anymore",
        "created_at": "2020-01-29T18:35:19Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579897860",
        "id": 579897860,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTg5Nzg2MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 8,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 2,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 10,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579897860/reactions"
        },
        "updated_at": "2020-01-29T18:35:19Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579897860",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1042507?v=4",
            "events_url": "https://api.github.com/users/Thaina/events{/privacy}",
            "followers_url": "https://api.github.com/users/Thaina/followers",
            "following_url": "https://api.github.com/users/Thaina/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thaina/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Thaina",
            "id": 1042507,
            "login": "Thaina",
            "node_id": "MDQ6VXNlcjEwNDI1MDc=",
            "organizations_url": "https://api.github.com/users/Thaina/orgs",
            "received_events_url": "https://api.github.com/users/Thaina/received_events",
            "repos_url": "https://api.github.com/users/Thaina/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Thaina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thaina/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Thaina"
        }
    },
    {
        "author_association": "NONE",
        "body": "> If C# is going to seriously consider the addition of top-level functions it should do so in consideration as to how they would impact and benefit developers of all skill levels and projects of all shapes.\r\n\r\nAs for me I think this feature already benefit us if we could write only one `void Main` in the project. Made second and it will give a name collision error. It pin down that we would have only one entrypoint in the project ever. That was the main benefit for all singleton function\r\n\r\nMy point is, the benefit for beginner that some people talk about is also as real and also a great bonus for our language too",
        "created_at": "2020-01-29T18:39:55Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579899705",
        "id": 579899705,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTg5OTcwNQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579899705/reactions"
        },
        "updated_at": "2020-01-29T18:39:55Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579899705",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1042507?v=4",
            "events_url": "https://api.github.com/users/Thaina/events{/privacy}",
            "followers_url": "https://api.github.com/users/Thaina/followers",
            "following_url": "https://api.github.com/users/Thaina/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thaina/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Thaina",
            "id": 1042507,
            "login": "Thaina",
            "node_id": "MDQ6VXNlcjEwNDI1MDc=",
            "organizations_url": "https://api.github.com/users/Thaina/orgs",
            "received_events_url": "https://api.github.com/users/Thaina/received_events",
            "repos_url": "https://api.github.com/users/Thaina/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Thaina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thaina/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Thaina"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "> In the eye of beginner programmer, even the word namespace and class itself is already magic that require them to understand that they cannot put a logic code inside those block. They need to learn that they could only put code into the bracket of void Main\r\n\r\nI agree with this. There is a rather significant amount a syntax a beginner would have to read and understand to know what is happening. The less this is happening, the best.",
        "created_at": "2020-01-29T19:16:53Z",
        "html_url": "https://github.com/dotnet/csharplang/issues/3117#issuecomment-579914933",
        "id": 579914933,
        "issue_url": "https://api.github.com/repos/dotnet/csharplang/issues/3117",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTkxNDkzMw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579914933/reactions"
        },
        "updated_at": "2020-01-29T19:16:53Z",
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/comments/579914933",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/135246?v=4",
            "events_url": "https://api.github.com/users/ErikSchierboom/events{/privacy}",
            "followers_url": "https://api.github.com/users/ErikSchierboom/followers",
            "following_url": "https://api.github.com/users/ErikSchierboom/following{/other_user}",
            "gists_url": "https://api.github.com/users/ErikSchierboom/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ErikSchierboom",
            "id": 135246,
            "login": "ErikSchierboom",
            "node_id": "MDQ6VXNlcjEzNTI0Ng==",
            "organizations_url": "https://api.github.com/users/ErikSchierboom/orgs",
            "received_events_url": "https://api.github.com/users/ErikSchierboom/received_events",
            "repos_url": "https://api.github.com/users/ErikSchierboom/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ErikSchierboom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ErikSchierboom/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ErikSchierboom"
        }
    }
]