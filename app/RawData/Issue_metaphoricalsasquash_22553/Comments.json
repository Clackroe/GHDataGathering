[
    {
        "author_association": "NONE",
        "body": "Is this not a bug? I cannot believe this is how it was intended to work.",
        "created_at": "2018-09-30T15:20:32Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-425728415",
        "id": 425728415,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTcyODQxNQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425728415/reactions"
        },
        "updated_at": "2018-09-30T15:20:32Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425728415",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "It's probably not a bug, unless I'm missing something.  There is a lot mentioned in the topic, so I wasn't too sure exactly where the focus was for it.\r\n\r\nRegarding the steps to reproduce.\r\n\r\nAt least on my end HFrames to 3 corrects the animation.  **Edit** - Am I missing something?\r\n\r\n![ezgif com-video-to-gif 1](https://user-images.githubusercontent.com/13004169/46265374-92641480-c52e-11e8-9ae0-d97f56c1dc75.gif)\r\n\r\n\r\nThere is no way to know what's actually on the sprite sheet.  It just uses row and column math to slice it up into identical rectangles.  You'll always have to specify these numbers and conform a spritesheet to fit that alignment.\r\n\r\nAs far as the workflow things, if you want to keep your keyframes correct, as you were saying, additions will probably have to go on the end.  I'm not exactly sure what kind of algorithm you could use that will know where you want to offset the values of existing keyframes to match the insertions into the middle of an updated spritesheet.\r\n\r\nThere is still nothing that knows the content of your spritesheet or what you want at what location.\r\n\r\nIn my experience at least, when I mangle these things in a large project, its just best to write a toolscript to automate the adjustments and fixes of AnimationPlayer keyframes.  Otherwise if its small, doing it by hand may be fastest.",
        "created_at": "2018-10-01T00:56:40Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-425765627",
        "id": 425765627,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc2NTYyNw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425765627/reactions"
        },
        "updated_at": "2018-10-01T01:02:17Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425765627",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ghost",
            "id": 10137,
            "login": "ghost",
            "node_id": "MDQ6VXNlcjEwMTM3",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ghost"
        }
    },
    {
        "author_association": "NONE",
        "body": ">There is no way to know what's actually on the sprite sheet.\r\n\r\nGodot does not need to know what's on the sprite sheet. All it needs to know is that I when I add a column (increase of Hframes) it will change all already existing keyframes with the \"frame:\" value according to the algorithm proposed in the solution above.\r\n\r\nI do not see how this is **_not_** a bug, to be honest:\r\n**If you already have keyframes set for your frame-by-frame animation, why would you want the _displayed_ frames of already set keyframes change arbitrarily, only because you add a column or row to your spritesheet?**\r\n\r\nIt makes iteration impossible, because it forces you to either have a fixed number of animations or a fixed number of frames per animation when you start your project. \r\nThe only case when this would be less of a problem/bug is when you are creating an exact clone or mini game and you how exactly how many animations or how many frames you will need. But are these the the only kind of games we want for this engine?",
        "created_at": "2018-10-01T01:47:26Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-425770206",
        "id": 425770206,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc3MDIwNg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425770206/reactions"
        },
        "updated_at": "2018-10-02T04:06:17Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425770206",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": ">At least on my end HFrames to 3 corrects the animation. \r\n\r\nSadly it does not. What this does and what your gif shows is that it defines the correct cell size of the sprite sheet. What breaks the animation is that different cells are shown. Because \"frame:\" counts the cells from left to right until the end of the first row, then the second row from left to right and so on. Maybe make sure your animation plays slow, you can pause and see what frame it used to be, I've written it below the number of the current keyframe. The red frame for instance is 10, while it was and still should be 7.\r\n\r\nIf this would be a runcycle, the character would not run anymore because the frames would be all mixed up.\r\nI will add another example with a runcycle when I get home, maybe the issue is easier and quicker to grasp then. It will be a few hours though.",
        "created_at": "2018-10-01T02:05:06Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-425771894",
        "id": 425771894,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc3MTg5NA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425771894/reactions"
        },
        "updated_at": "2018-10-01T02:42:56Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425771894",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "I'm curious, are there any examples you have showing another game engine doing this kind of re-sequencing?\r\n\r\nPretty sure this is how the sprite sheets are designed, so it wouldn't be a \"bug\".\r\n\r\nThe idea behind it in the current form is that as long as you keep your frames in some kind of sequence going from left to right, top to bottom, it doesn't matter how you arrange the sheets.  The frames should still read in the correct frame order.\r\n\r\nLike doing this for example, wouldn't break your animation keyframes.\r\n\r\n## From 6 by 2\r\n![6x2](https://user-images.githubusercontent.com/13004169/46269799-0cef5d00-c54c-11e8-9fd2-95c5a12c27d8.png)\r\n\r\n## Into a 2 by 8\r\n![2x8](https://user-images.githubusercontent.com/13004169/46269801-0f51b700-c54c-11e8-9486-3ed919119ca4.png)\r\n\r\nSo you need to add some frames to this 2x8 sheet later, they would go in positions to the right of 11 and wrap into the new row.  And if you have a new row, increase it.\r\n\r\nYou would just have to organize and export your spritesheets to maintain this order, and nothing should break later.\r\n\r\nI think I understand that you have some particular workflow you want accommodated, where you use  completely symmetrical spritesheets, and need to extend or contract all cycles uniformly?  Again, not entirely sure.  It sounds at least like you want to toss in a new column, update the frame count, and have the engine modify all your keyframes in all animation players and animations that use that sprite sheet.\r\n\r\nIf that is roughly it, then what you're suggesting solves perhaps only just for that, but what about non-uniform spritesheets?\r\n\r\nIn my work at least, we stuff in animations of all differing lengths, and rarely do we have a set that even give us perfectly filled sheets.\r\n\r\nIn my case, having an update to a spritesheet property do widespread changes to the keyframes is undesirable.  I would think just the action of fiddling with the Hframe and Vframe properties will start mangling all our keyframes if it was making assumptions about how its organized.",
        "created_at": "2018-10-01T04:58:16Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-425789582",
        "id": 425789582,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc4OTU4Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425789582/reactions"
        },
        "updated_at": "2018-10-01T04:58:16Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425789582",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ghost",
            "id": 10137,
            "login": "ghost",
            "node_id": "MDQ6VXNlcjEwMTM3",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ghost"
        }
    },
    {
        "author_association": "NONE",
        "body": "hey avencherus, first of all, thank you sticking with me and trying to understand my arguments, I really appreciate it!\r\n\r\nI have no experience using large spritesheets and frame-by-frame animation in other engines, so sadly I cannot give you an example how this would be dealt with elsewhere.\r\n\r\n>The idea behind it in the current form is that as long as you keep your frames in some kind of sequence going from left to right, top to bottom, it doesn't matter how you arrange the sheets. The frames should still read in the correct frame order.\r\n\r\nYes I know. That's precisely the root of the problem.\r\nI do not think I have a particular workflow I want accommodated, the issue applies to the workflow you explained in your last comment just the same as soon as you want iteration and more than a few animations in a single sprite sheet for drawcall and performance reasons.\r\n\r\nPlease bear with me while I try to explain:\r\n![keyframes-example-explainedindetail](https://user-images.githubusercontent.com/43533832/46304171-78ade600-c59d-11e8-8ecb-161ce99c4b13.png)\r\nIf you know of any other way or option to organize, edit, manage and maintain larger amount of animations in a spritesheet, please do share.\r\n",
        "created_at": "2018-10-01T17:16:43Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-425989179",
        "id": 425989179,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTk4OTE3OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425989179/reactions"
        },
        "updated_at": "2018-10-01T17:18:21Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/425989179",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "Oh and thanks for proposing a solution (From 6 by 2 to 2 by 8)!\r\nWhile this is certainly feasibly for small projects and small Spritesheets, I do not see how it would be feasible for regular sized professional productions meaning anything more than 20 animations per sheet. Essentially, you would have to do the same tedious restructuring with the only difference being you would have to do it outside of Godot. Plus, if you do this for a while you get really \"unreadable\" spritesheets. So for me, that's actually even a bit worse than reassigning keyframe values inside Godot.",
        "created_at": "2018-10-01T18:29:30Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426013444",
        "id": 426013444,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjAxMzQ0NA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426013444/reactions"
        },
        "updated_at": "2018-10-01T18:29:30Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426013444",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "No problem, I'm just trying to at least understand what you have in mind.  This is a very nice graphic you've made.\r\n\r\nAnd apologies, what you've outlined is all new to me.  This is my first time seeing anyone organize spritesheets that way, so maybe I'm completely in the dark about something.\r\n\r\n> There are basically two ways to organize frame by frame animation.\r\n\r\nI did not see our way in there, so you may feel this is illegitimate.  X)\r\n\r\n![samsheet](https://user-images.githubusercontent.com/13004169/46311022-aa3ca680-c5c9-11e8-834e-c2e80821782b.jpg)\r\n\r\nThat's the order we go with and it fits well with how Godot functions presently.  Yes, if we have to expand the frame count, well we have to just bite the bullet and re-keyframe some things.  It has been done a couple times and it only takes a few minutes for a dozen or so animations.\r\n\r\nMy impression of what you have explained above is that there appears to be a lot of wasted space in there.  This examples is a 15x11 and has 47 empty frames.  (28% empty?)\r\n\r\n![sheet](https://user-images.githubusercontent.com/13004169/46311456-ec1a1c80-c5ca-11e8-870f-794ec541a878.png)\r\n\r\nWhen I think about a 400x300ish frame size it would amount to 400x300x47 = 5,640,000 dead pixels.  Spritesheets already tend to be somewhat wasteful in favor of convenience, but just speaking for myself I wouldn't want to voluntarily take on so much more for this method.\r\n\r\nIf I were to try to put what you have into my own words, it resembles to me something like sub-spritesheets inside of spritesheets, or possibly a hybrid between a spritesheet and an atlas.  An atlas with the requirements that a texture be in a uniform size and then be organized in some adjacent manner.\r\n\r\nUnfortunately, I really think I'd have to see this one implemented in the wild and in practice to understand and evaluate it.",
        "created_at": "2018-10-01T20:10:22Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426045671",
        "id": 426045671,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA0NTY3MQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426045671/reactions"
        },
        "updated_at": "2018-10-01T20:10:22Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426045671",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ghost",
            "id": 10137,
            "login": "ghost",
            "node_id": "MDQ6VXNlcjEwMTM3",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ghost"
        }
    },
    {
        "author_association": "NONE",
        "body": "The only downside I see with dead pixels is a larger download. The upside is a MUCH better overview, which is absolute indispensable, when you are doing pixelart, get more animations and frames and lower resolution sprites.\r\nCurrently I'm working on a 2D Pixelart project (something Godot praises itself for being a great fit) which means I have tons of frames that look almost indistinguishable next to each other. On top of that, naming each frame even each animation is impossible with frames just 32 pixel or 48 pixel wide which also have to accommodate the sprite.\r\nMy current (very incomplete) player base sprite has 67 rows and 8 columns, so 535 frames. The png is 112KB in size, so I honestly don't care a bit about unused pixels on my spritesheet. Even if it would be ten times as large, the ability to find animations and frames I'm looking for outweighs the 0.01 seconds additional download time a billion to one.\r\nI know you are not doing pixelart in your game (which looks absolutely awesome btw! I've been following for a while) but in pixelart animation you select move and copy previously created frames and past them into new animations all the time. That's the core of any pixelart animation. Every single pixelpush has a huge impact to your animation. So the ability to quicky jump through your spritesheet, find what you are looking for copy and paste it to someplace else in your spritesheet or compare single pixel locations from various places in your sheet, is absolutely necessary. You also have to do this because your newly created frame must match previously created ones by the pixel. Think a change from one idle into another.\r\n\r\n>Yes, if we have to expand the frame count, well we have to just bite the bullet and re-keyframe some things. It has been done a couple times and it only takes a few minutes for a dozen or so animations.\r\n\r\nThis is what this issue is about. For you it might be not that much of an issue. I suppose this is _because_ you are not making a pixel game and _because_ you are making a sidescoller with two directions of movement, not 8. Hence your spritesheets are a lot more clearly laid out by default and while the re-keyframing or rearranging of your spritesheets might be an inconvenience, it is not so much an issue. For me however, and I dare say anyone who wants to do a slightly more professional looking pixel art game with decently complex animation, I dare say it not just an inconvenient issue, it's clearly a Starship Trooper sized [brain bug](https://img.buzzfeed.com/buzzfeed-static/static/2014-12/30/16/imagebuzz/webdr04/anigif_optimized-24700-1419976712-3.gif) in Godots design. **I therefore would really appreciate if someone would review the \"enhancement\" tag and maybe consider replacing it with a \"bug\" tag.** ",
        "created_at": "2018-10-01T21:16:24Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426065800",
        "id": 426065800,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA2NTgwMA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426065800/reactions"
        },
        "updated_at": "2018-10-01T21:46:28Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426065800",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": ">I did not see our way in there, so you may feel this is illegitimate\r\n\r\nYou way or organizing the spritesheet is just as legitimate as any other. It is however affected by this issue just the same. Hence not a solution. When scaling up production, your way of organizing it would fail exactly like the other options I've layed out so far. And for the same reason: _because keyframes don't update their \"frame:value\" when HFrames changes._\r\nSo you either end up having to rework all the sprites in your spritesheet externally and make the spritesheet less readable in the process, or re-set all keyframe \"frame:\" values in Godot.",
        "created_at": "2018-10-01T21:32:44Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426070579",
        "id": 426070579,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA3MDU3OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426070579/reactions"
        },
        "updated_at": "2018-10-02T21:38:45Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426070579",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "I don't understand this issue. What you are asking is not something any framework/engine I've used before supports. How do you expect Godot to understand that the image that you told it had 67 rows and 8 columns now has 70 rows and 8 columns and it should magically (?) offset all the frames of the other animations? That image doesn't even know that it has animations linked to it. Making sense of where one animation starts and when it ends is your job or yours programmer job. Godot doesn't know that your first row is the \"walk\" animation and your second is the \"run\" animation that's something you tell it and you will need to update if you change anything that affects it. The only thing that Godot knows and cares is that an image has `x` rows and `y` columns and uses that information to calculate where in that image the frame 10 is anything else is up to you.\r\n\r\nAlso, transparent pixels are still uploaded to the GPU and taking space in the video memory. PNGs are compressed lossless image files but the data you upload to the GPU is uncompressed so that 112KB png file is ~2.2MB uncompressed if my math isn't wrong (which isn't much but you can see why it can add up to a lot and why there are tools like [TexturePacker](https://www.codeandweb.com/texturepacker) that can remove all the transparent pixels around the sprite and pack them tightly into a smaller image). It has nothing to do with download speeds.",
        "created_at": "2018-10-01T21:43:23Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426073371",
        "id": 426073371,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA3MzM3MQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426073371/reactions"
        },
        "updated_at": "2018-10-01T21:43:23Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426073371",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/483531?v=4",
            "events_url": "https://api.github.com/users/mrcdk/events{/privacy}",
            "followers_url": "https://api.github.com/users/mrcdk/followers",
            "following_url": "https://api.github.com/users/mrcdk/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrcdk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mrcdk",
            "id": 483531,
            "login": "mrcdk",
            "node_id": "MDQ6VXNlcjQ4MzUzMQ==",
            "organizations_url": "https://api.github.com/users/mrcdk/orgs",
            "received_events_url": "https://api.github.com/users/mrcdk/received_events",
            "repos_url": "https://api.github.com/users/mrcdk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mrcdk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrcdk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mrcdk"
        }
    },
    {
        "author_association": "NONE",
        "body": ">What you are asking is not something any framework/engine I've used before supports. How do you expect Godot to understand that the image that you told it had 67 rows and 8 columns now has 70 rows and 8 columns and it should magically (?) offset all the frames of the other animations? That image doesn't even know that it has animations linked to it. Making sense of where one animation starts and when it ends is your job or yours programmer job. Godot doesn't know that your first row is the \"walk\" animation and your second is the \"run\" animation that's something you tell it and you will need to update if you change anything that affects it.\r\n\r\nI'm not asking for any of that. Please have a look at my proposal again.\r\n\r\n>The only thing that Godot knows and cares is that an image has x rows and y columns and uses that information to calculate where in that image the frame 10 is anything else is up to you.\r\n\r\nYes I know. If it remembers what the previous setting for Hframes and Vframes was and what the current new setting is, that's also all it needs to know to fix the issue and adjust keyframes with \"frame:\" values.\r\n\r\n>Also, transparent pixels are still uploaded to the GPU and taking space in the video memory. PNGs are compressed lossless image files but the data you upload to the GPU is uncompressed so that 112KB png file is ~2.2MB uncompressed if my math isn't wrong\r\n\r\nThank you for pointing this out. I was not sure about how the GPU handles the png compression. Still, even 22 MB uncompressed are nothing compared to an inability to iterate on animation, add frames or add animations in the production process. Texture Packer makes a lot of sense for Tilemaps in 2D HD games, not so much for animation in low res 2D pixelart games in Godot. At least I would not know how you could marry those two when it comes to frame-by-frame pixel animation. If you know, or have a tool, please let us know.",
        "created_at": "2018-10-01T21:58:45Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426078097",
        "id": 426078097,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA3ODA5Nw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426078097/reactions"
        },
        "updated_at": "2018-10-01T22:04:38Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426078097",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "It does make sense in 2D pixelart games. For example, I had to package all the sprites of this game I worked on https://store.steampowered.com/app/462100/Starr_Mazer_DSP/ (this isn't a Godot game) into big spritesheets because we were having issues running out of vram on mobile (although we didn't end releasing it on mobile) Like this:\r\n\r\n![https://i.imgur.com/hNyc1t8.png](https://i.imgur.com/hNyc1t8.png)\r\n\r\n(the spritesheets are transparent but windows is being windows)\r\n\r\nThose are ~14200 sprites (most of them is the japanese font ~10k \ud83d\ude05 )\r\n\r\nThe position of your sprites in the spritesheet doesn't matter because it's you (or your programmer) the one that will give meaning to it.\r\n\r\n> Yes I know. If it remembers what the previous setting for Hframes and Vframes was and what the current new setting is, that's also all it needs to know to fix the issue and adjust keyframes with \"frame:\" values.\r\n\r\nThe Sprite doesn't know that it has animations linked to it and the AnimationPlayer just has a track that points to a property of a node (in this case to the `frame` property of a Sprite) and doesn't know anything else about it (it doesn't even know that it's pointing to a specific Sprite just a NodePath)",
        "created_at": "2018-10-01T23:18:16Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426095286",
        "id": 426095286,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA5NTI4Ng==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426095286/reactions"
        },
        "updated_at": "2018-10-01T23:18:16Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426095286",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/483531?v=4",
            "events_url": "https://api.github.com/users/mrcdk/events{/privacy}",
            "followers_url": "https://api.github.com/users/mrcdk/followers",
            "following_url": "https://api.github.com/users/mrcdk/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrcdk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mrcdk",
            "id": 483531,
            "login": "mrcdk",
            "node_id": "MDQ6VXNlcjQ4MzUzMQ==",
            "organizations_url": "https://api.github.com/users/mrcdk/orgs",
            "received_events_url": "https://api.github.com/users/mrcdk/received_events",
            "repos_url": "https://api.github.com/users/mrcdk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mrcdk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrcdk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mrcdk"
        }
    },
    {
        "author_association": "NONE",
        "body": "Wow, congrats on working on such a beautiful game! \r\n\r\nOf course .. TexturePacker _**can**_ make a lot of sense even for pixel games, depending on your target platform ect ... If you want to release on C64, you most likely will have to dig much deeper than TexturePacker to make things work.\r\n\r\n>The Sprite doesn't know that it has animations linked to it and the AnimationPlayer just has a track that points to a property of a node (in this case to the frame property of a Sprite) and doesn't know anything else about it (it doesn't even know that it's pointing to a specific Sprite just a NodePath)\r\n\r\nSo maybe the Animation Player _should_ be notified when there is a change made of a Hframes property down the Node Path? What's wrong with having the Sprite Node emitting a signal to do just that?\r\n\r\n>The position of your sprites in the spritesheet doesn't matter because it's you (or your programmer) the one that will give meaning to it.\r\n\r\nIt does matter a whole lot to whoever is in the process of creating the spritesheet and keyframes if they have an interest to stay mentally sane. Once they are all done you are totally right. You can scramble and optimize the sprite frames order and position to their most efficient arrangement. That is as long as your code is supporting the simultaneous and automatic re-setting of your \"frame:\" values in all your keyframes. But if we would have this functionality in Godot already, we would not need to have this discussion here in the first place.",
        "created_at": "2018-10-02T01:22:04Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426115522",
        "id": 426115522,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjExNTUyMg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426115522/reactions"
        },
        "updated_at": "2018-10-02T09:48:58Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426115522",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "Hey guys I made another graphic, in hopes it's easier to understand for people hearing about this the first time, let me know what you think:\r\n![keyframes-example-explained2](https://user-images.githubusercontent.com/43533832/46406314-a492ae00-c6fa-11e8-8fa1-d255415469bd.png)\r\n\r\n\r\n",
        "created_at": "2018-10-02T14:27:40Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-426294849",
        "id": 426294849,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjI5NDg0OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426294849/reactions"
        },
        "updated_at": "2018-10-03T10:54:22Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/426294849",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "@groud and others who have labeling rights:\r\n**I kindly request the \"enhancement\" label to be reviewed.**\r\nPlease have a look at the graphic I made. If you still don't think this is a bug, please be so kind and help me understand how this could be intended behavior. \r\nIt makes spritesheet work hard for no benefit and the trouble the issue causes increases exponentially with the size of the project. \r\nEveryone, no matter what their workflow is or how they structure their spritesheet or whether or not they use a spritesheet packer tool or not, everyone has to deal with this issue and the additional workload it creates. A workload, that becomes unfeasible to manage if the project becomes large.\r\n\r\nWe do not have an option yet to import timing for animation, so when designing our animation, we are depended on keyframes.  I'm just at the beginning of incorporating animation into my project. Luckily, I haven't set all my keyframes yet, just a tiny percentage. Still, I had to meticulously and painstakingly spend hours and hours selecting each frame, on every track on every animation, comparing the previous value with my desired current one and reset it, all the while praying I don't fuck up. There is no point in doing this. It's tedious and an invite for error. How was this ever intended behavior? And even if it was, it's buggy as hell.",
        "created_at": "2018-10-06T17:13:47Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-427590845",
        "id": 427590845,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU5MDg0NQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/427590845/reactions"
        },
        "updated_at": "2018-10-06T18:56:49Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/427590845",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/43533832?v=4",
            "events_url": "https://api.github.com/users/metaphoricalsasquash/events{/privacy}",
            "followers_url": "https://api.github.com/users/metaphoricalsasquash/followers",
            "following_url": "https://api.github.com/users/metaphoricalsasquash/following{/other_user}",
            "gists_url": "https://api.github.com/users/metaphoricalsasquash/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/metaphoricalsasquash",
            "id": 43533832,
            "login": "metaphoricalsasquash",
            "node_id": "MDQ6VXNlcjQzNTMzODMy",
            "organizations_url": "https://api.github.com/users/metaphoricalsasquash/orgs",
            "received_events_url": "https://api.github.com/users/metaphoricalsasquash/received_events",
            "repos_url": "https://api.github.com/users/metaphoricalsasquash/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/metaphoricalsasquash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/metaphoricalsasquash/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/metaphoricalsasquash"
        }
    },
    {
        "author_association": "NONE",
        "body": "I'm trying to use AnimatedSprites controlled by AnimationPlayer not even using spritesheets.. but individual, animated .png's. \"Only\" trying to get it somehow to work since about 40 hours. There is zero documentation for frame-animation. There's a few examples... but none of them go into different animations: Always a single kind of animation. When asking in help not enough people seem to be using this kind of animation as programmers probably just use some cutout sprites and stick to AnimationPlayer. I've set myself some workflow with other applications where I can decently animate something new and simple within 5 minutes or less. And I'm sure I'm not the only one who prefers NOT to directly animate in Godot if a different, more efficient pipeline is already setup. Please... do not enforce people to rigid workflows.. but enable them to use whatever they need. By: Enabling simple use of individual .pngs or Spritesheets in AnimatedSprites.. and letting those be controlled through AnimationPlayer. This is not about \"enhacement\". In the current state.. it seems impossible to actually use and get anything done. When I try to change the played Animation in AnimationPlayer... the only keyframed Animations played are actually the ones selected in \"Animation\" property of the AnimatedSprite. Having different animations in AnimatedSprites. Therefore completely has no effect. I am now forced to use a separate \"AnimatedSprite\" for each kind of animation. However that leads to all animations being shown on screen at once. This cumbersome workflow can't be intended by design: Especially since both AnimatedSprites and AnimationPlayer already have separate tracks for different animation-types... built... in.",
        "created_at": "2018-11-19T15:39:00Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-439935869",
        "id": 439935869,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTkzNTg2OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/439935869/reactions"
        },
        "updated_at": "2018-11-19T15:39:00Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/439935869",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/12021793?v=4",
            "events_url": "https://api.github.com/users/opleks/events{/privacy}",
            "followers_url": "https://api.github.com/users/opleks/followers",
            "following_url": "https://api.github.com/users/opleks/following{/other_user}",
            "gists_url": "https://api.github.com/users/opleks/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/opleks",
            "id": 12021793,
            "login": "opleks",
            "node_id": "MDQ6VXNlcjEyMDIxNzkz",
            "organizations_url": "https://api.github.com/users/opleks/orgs",
            "received_events_url": "https://api.github.com/users/opleks/received_events",
            "repos_url": "https://api.github.com/users/opleks/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/opleks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/opleks/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/opleks"
        }
    },
    {
        "author_association": "NONE",
        "body": "I also have this issue and think it is a bug!",
        "created_at": "2019-01-25T14:48:33Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-457595875",
        "id": 457595875,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzU5NTg3NQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457595875/reactions"
        },
        "updated_at": "2019-01-25T14:48:33Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457595875",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "Let makes things clear. A bug is when something happens in a way it was not designed for.\r\nNo one designed Godot to keep the indices if you change your texture size, it is written down nowhere in the documentation. So right now, everything works as expected (indeed from the developers point of view), even if the current design has limitations.\r\n\r\nI do not mean to minimize the problem, the enhancement would be a significant improvement. But no, it is not a bug.",
        "created_at": "2019-01-25T15:07:28Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-457602301",
        "id": 457602301,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzYwMjMwMQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457602301/reactions"
        },
        "updated_at": "2019-01-25T15:07:28Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457602301",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6093119?v=4",
            "events_url": "https://api.github.com/users/groud/events{/privacy}",
            "followers_url": "https://api.github.com/users/groud/followers",
            "following_url": "https://api.github.com/users/groud/following{/other_user}",
            "gists_url": "https://api.github.com/users/groud/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/groud",
            "id": 6093119,
            "login": "groud",
            "node_id": "MDQ6VXNlcjYwOTMxMTk=",
            "organizations_url": "https://api.github.com/users/groud/orgs",
            "received_events_url": "https://api.github.com/users/groud/received_events",
            "repos_url": "https://api.github.com/users/groud/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/groud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/groud/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/groud"
        }
    },
    {
        "author_association": "NONE",
        "body": "> A bug is when something happens in a way it was not designed for.\r\n\r\nThe design is to let the user assign a specific keyframe. Godot was not designed to change the displayed keyframe once it has been assigned unless the user resigns it. It works as specified in the design when expanding vertically. But not horizontally. Godot is also designed to allow changes in the spritesheet dimension. (HFrame and VFrame Inspector settings). \r\n\r\nTo me that's as clear cut a bug as the definition can be. The way I read and understand it, also according to your own definition.",
        "created_at": "2019-01-25T15:47:11Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-457616299",
        "id": 457616299,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzYxNjI5OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457616299/reactions"
        },
        "updated_at": "2019-01-25T15:47:21Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457616299",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "> Godot was not designed to change the displayed keyframe once it has been assigned unless the user resigns it.\r\n\r\nYou are wrong here, it was designed to work that way. The indices are, by design, naturally set from left to right then from top to bottom. So yeah, if you extend the texture horizontally, the indices get offset. \r\n\r\nIt is said nowhere the indices should be kept when you change the texture size, and event if we did, people might even complain because their indices could go unordered when changing from one texture to another. It might even be compatibility breaking. So for now, by design, Godot does not support changing the size of your texture while keeping the indices. That's all.\r\n\r\nTo be honest, it is more like \"we did not think about this problem when we designed it\", but that's the  definition of an enhancement : it works as expected, we know it has limitations, but everything happening here is completely expected.\r\n\r\nBut also, I don't want to be mean but I would prefer not to have this kind of discussions. We are the ones working on fixing those issues, so please, respect the way we organize the work to be done. Unless if other contributors agree the issue should be moved to bugs, the tags are not going to change.",
        "created_at": "2019-01-25T16:10:38Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-457624503",
        "id": 457624503,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzYyNDUwMw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457624503/reactions"
        },
        "updated_at": "2019-01-25T16:10:38Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457624503",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6093119?v=4",
            "events_url": "https://api.github.com/users/groud/events{/privacy}",
            "followers_url": "https://api.github.com/users/groud/followers",
            "following_url": "https://api.github.com/users/groud/following{/other_user}",
            "gists_url": "https://api.github.com/users/groud/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/groud",
            "id": 6093119,
            "login": "groud",
            "node_id": "MDQ6VXNlcjYwOTMxMTk=",
            "organizations_url": "https://api.github.com/users/groud/orgs",
            "received_events_url": "https://api.github.com/users/groud/received_events",
            "repos_url": "https://api.github.com/users/groud/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/groud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/groud/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/groud"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "Anyway, I might be able to solve the problem easily. I'll try something.",
        "created_at": "2019-01-25T16:24:31Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-457629377",
        "id": 457629377,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzYyOTM3Nw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457629377/reactions"
        },
        "updated_at": "2019-01-25T16:24:31Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457629377",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6093119?v=4",
            "events_url": "https://api.github.com/users/groud/events{/privacy}",
            "followers_url": "https://api.github.com/users/groud/followers",
            "following_url": "https://api.github.com/users/groud/following{/other_user}",
            "gists_url": "https://api.github.com/users/groud/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/groud",
            "id": 6093119,
            "login": "groud",
            "node_id": "MDQ6VXNlcjYwOTMxMTk=",
            "organizations_url": "https://api.github.com/users/groud/orgs",
            "received_events_url": "https://api.github.com/users/groud/received_events",
            "repos_url": "https://api.github.com/users/groud/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/groud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/groud/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/groud"
        }
    },
    {
        "author_association": "NONE",
        "body": ">please, respect the way we organize the work to be done\r\n\r\nI certainly do. So far noone has explained why this would be intended behavior and I am completely unfamiliar with the usecase you mention here.",
        "created_at": "2019-01-25T16:30:17Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-457631392",
        "id": 457631392,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzYzMTM5Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457631392/reactions"
        },
        "updated_at": "2019-01-25T16:30:17Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/457631392",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    },
    {
        "author_association": "NONE",
        "body": "Ummmm, why this is closed? Newb here. Is there a solution already? What is this \"frame_coords\" thing and how does it work? Thank you devs for your hard work btw xD",
        "created_at": "2019-09-23T13:43:25Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-534104844",
        "id": 534104844,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDEwNDg0NA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/534104844/reactions"
        },
        "updated_at": "2019-09-23T13:43:25Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/534104844",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/28635807?v=4",
            "events_url": "https://api.github.com/users/jaacko-torus/events{/privacy}",
            "followers_url": "https://api.github.com/users/jaacko-torus/followers",
            "following_url": "https://api.github.com/users/jaacko-torus/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaacko-torus/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jaacko-torus",
            "id": 28635807,
            "login": "jaacko-torus",
            "node_id": "MDQ6VXNlcjI4NjM1ODA3",
            "organizations_url": "https://api.github.com/users/jaacko-torus/orgs",
            "received_events_url": "https://api.github.com/users/jaacko-torus/received_events",
            "repos_url": "https://api.github.com/users/jaacko-torus/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jaacko-torus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaacko-torus/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jaacko-torus"
        }
    },
    {
        "author_association": "NONE",
        "body": "Groud made a pull request and already committed the fix: https://github.com/godotengine/godot/pull/25327\r\nAbove your comment you can see the purple graphic saying the pull request has been merged and added to Godot 3.2",
        "created_at": "2019-09-23T14:31:15Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-534125429",
        "id": 534125429,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDEyNTQyOQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/534125429/reactions"
        },
        "updated_at": "2019-09-23T14:32:40Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/534125429",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    },
    {
        "author_association": "NONE",
        "body": "@akien-mga Please reopen this issue (not sure if OP is still around)\r\nhttps://github.com/godotengine/godot/pull/25327 does not fix this issue at all, animating the Sprite Frame property is still incredibly broken in 3.2 Alpha2 as described in the original post of this issue.\r\nI have a lot of animations and would really need to have this fixed.\r\n\r\n**Minimal test project:**\r\n[expand_spritesheet.zip](https://github.com/godotengine/godot/files/3721176/expand_spritesheet.zip)\r\nRun the project, click on the color buttons to see a spritesheet animation playing. Each animation plays a separate row of the \"test_spritesheet.png\" spritesheet.\r\n\r\nTo test the issue,\r\n- drag the \"test_spritesheet_expanded.png\" into the Sprite texture,\r\n- set \"Hframes\" from 7 to 11\r\n- run the project again to see the wrong cells being displayed in lower rows of the spritesheet (any but green, since green is the first row, the cell attribution for green obviously is unchanged.)",
        "created_at": "2019-10-12T21:31:09Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-541363118",
        "id": 541363118,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTM2MzExOA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541363118/reactions"
        },
        "updated_at": "2019-10-12T21:51:03Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541363118",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "> #25327 does not fix this issue at all, animating the Sprite Frame property is still incredibly broken in 3.2 Alpha2 as described in the original post of this issue.\r\n\r\nThis is not broken, as I already explained this is the expected behavior. This is once again NOT a bug and it is up to you to now change the way you deal with your animations.\r\nThis should be doable via a script though, using the Animation API. ",
        "created_at": "2019-10-13T05:43:27Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-541388527",
        "id": 541388527,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTM4ODUyNw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541388527/reactions"
        },
        "updated_at": "2019-10-13T06:10:47Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541388527",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6093119?v=4",
            "events_url": "https://api.github.com/users/groud/events{/privacy}",
            "followers_url": "https://api.github.com/users/groud/followers",
            "following_url": "https://api.github.com/users/groud/following{/other_user}",
            "gists_url": "https://api.github.com/users/groud/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/groud",
            "id": 6093119,
            "login": "groud",
            "node_id": "MDQ6VXNlcjYwOTMxMTk=",
            "organizations_url": "https://api.github.com/users/groud/orgs",
            "received_events_url": "https://api.github.com/users/groud/received_events",
            "repos_url": "https://api.github.com/users/groud/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/groud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/groud/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/groud"
        }
    },
    {
        "author_association": "NONE",
        "body": "It is **not** expected _by users_ as you can see here in this thread.\r\n\r\nMaybe _you_ wrote it this way, or studied the source code intensively, then of course you expect to behave it like that, but _users_ of the Sprite Frame property obviously don't expect this behavior at all. \r\n\r\nHow should they expect this behaviour? What would be the underlying intention of a design that allows spritesheets to be extended only vertically, not horizontally? If that's a feature, it's the most stupid feature I've ever heard of. This \"feature\" effectively **breaks** animation as demonstrated in the minimal project and the thorough description of the original post.\r\n\r\nIf you don't want to call it a bug, it's very bad design at the very least. What ever you call it, it really needs fixing. \r\nI therefore once again ask like @jaacko-torus for this issue to be reopened.",
        "created_at": "2019-10-13T10:46:27Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-541407512",
        "id": 541407512,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTQwNzUxMg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541407512/reactions"
        },
        "updated_at": "2019-10-13T12:14:55Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541407512",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "I am **once again**, going to explain how the frame property works within the engine: you select a frame, which is numbered from left to right, then from top to bottom. So it **is expected** so that changing the number of column changes the ID of your frames. It's easy to understand, and without considering this texture resize problem, it does the job quite well. \r\n\r\n> It is not expected by users as you can see here in this thread.\r\n\r\nSorry, but this issue did not receive enough upvotes to be significantly representative about how the feature should work. \r\nBut anyway, what users think is not what matters to define what is a bug or not. A bug happens when a software does not behave as expected from the programmer point of view, not the user one. The user might just have, like here apparently, misunderstood how the feature was designed and the implied advantages/flaws. So the only bug here is maybe about adding a warning to the documentation, but I don't really call that a bug.\r\n\r\n> If you don't want to call it a bug, it's very bad design at the very least.\r\n\r\nYeah, in that case we can call it bad design. So for now this issue will not be opened again as this is not a bug, and you can now easily workaround it using the `frame_coords` feature. The update the \"frame\" animation to the \"frame_coord\" animation is another problem though, so if you face problem updating this should be another issue.\r\n\r\nIf you have a better design in mind, please open an issue on the [godot-proposal](https://github.com/godotengine/godot-proposals) repository. ",
        "created_at": "2019-10-13T11:32:39Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-541410601",
        "id": 541410601,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTQxMDYwMQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 1,
            "confused": 1,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 2,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541410601/reactions"
        },
        "updated_at": "2019-10-13T11:32:39Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541410601",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6093119?v=4",
            "events_url": "https://api.github.com/users/groud/events{/privacy}",
            "followers_url": "https://api.github.com/users/groud/followers",
            "following_url": "https://api.github.com/users/groud/following{/other_user}",
            "gists_url": "https://api.github.com/users/groud/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/groud",
            "id": 6093119,
            "login": "groud",
            "node_id": "MDQ6VXNlcjYwOTMxMTk=",
            "organizations_url": "https://api.github.com/users/groud/orgs",
            "received_events_url": "https://api.github.com/users/groud/received_events",
            "repos_url": "https://api.github.com/users/groud/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/groud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/groud/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/groud"
        }
    },
    {
        "author_association": "NONE",
        "body": "> A bug happens when a software does not behave as expected from the programmer point of view, not the user one\r\n\r\nHave you ever worked with a QA team? You don't see the problem with this philosophy at all? \r\n\r\n\r\n> Yeah, in that case we can call it bad design. So for now this issue will not be opened again as this is not a bug\r\n\r\nThis issue was not labeled as bug. To be reopend it does not need to be labeled as bug. You yourself labeled it as \" enhancement topic:editor usability\"\r\nI asked @akien-mga who closed it to reopen it, because nothing about it has been fixed. And it still needs fixing!\r\n\r\n> you can now easily workaround it using the frame_coords feature.\r\n\r\nNo you cannot. This would mean destroying and completely redoing each and every single Animation. In my case that's a year's worth of work.\r\n\r\nOnce again, this issue is about the [Frame](https://docs.godotengine.org/en/3.1/classes/class_sprite.html#class-sprite-property-frame) property. Not the newly added Coords. If the Frame property is still available in the engine, it still needs fixing.\r\n\r\n> explain how the frame property works within the engine: you select a frame, which is numbered from left to right, then from top to bottom.\r\n\r\nThis is not how the Frame property works for the user. **The frame property expects an integer**. The user therefore expects the same behavior if the spritesheet is expanded vertically or horizontally, again, see OPs graphic in the original post.\r\n\r\n> If you have a better design in mind, please open an issue on the godot-proposal repository.\r\n\r\nThe original post already has a fix proposed: \r\n**The cell IDs have to update if the Hframe property changed.**",
        "created_at": "2019-10-13T12:07:31Z",
        "html_url": "https://github.com/godotengine/godot/issues/22553#issuecomment-541412934",
        "id": 541412934,
        "issue_url": "https://api.github.com/repos/godotengine/godot/issues/22553",
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTQxMjkzNA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541412934/reactions"
        },
        "updated_at": "2019-10-13T12:10:52Z",
        "url": "https://api.github.com/repos/godotengine/godot/issues/comments/541412934",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/47016402?v=4",
            "events_url": "https://api.github.com/users/golddotasksquestions/events{/privacy}",
            "followers_url": "https://api.github.com/users/golddotasksquestions/followers",
            "following_url": "https://api.github.com/users/golddotasksquestions/following{/other_user}",
            "gists_url": "https://api.github.com/users/golddotasksquestions/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/golddotasksquestions",
            "id": 47016402,
            "login": "golddotasksquestions",
            "node_id": "MDQ6VXNlcjQ3MDE2NDAy",
            "organizations_url": "https://api.github.com/users/golddotasksquestions/orgs",
            "received_events_url": "https://api.github.com/users/golddotasksquestions/received_events",
            "repos_url": "https://api.github.com/users/golddotasksquestions/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/golddotasksquestions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/golddotasksquestions/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/golddotasksquestions"
        }
    }
]