{
    "active_lock_reason": "too heated",
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11460?v=4",
        "events_url": "https://api.github.com/users/pwnall/events{/privacy}",
        "followers_url": "https://api.github.com/users/pwnall/followers",
        "following_url": "https://api.github.com/users/pwnall/following{/other_user}",
        "gists_url": "https://api.github.com/users/pwnall/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pwnall",
        "id": 11460,
        "login": "pwnall",
        "node_id": "MDQ6VXNlcjExNDYw",
        "organizations_url": "https://api.github.com/users/pwnall/orgs",
        "received_events_url": "https://api.github.com/users/pwnall/received_events",
        "repos_url": "https://api.github.com/users/pwnall/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pwnall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pwnall/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pwnall"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/11460?v=4",
            "events_url": "https://api.github.com/users/pwnall/events{/privacy}",
            "followers_url": "https://api.github.com/users/pwnall/followers",
            "following_url": "https://api.github.com/users/pwnall/following{/other_user}",
            "gists_url": "https://api.github.com/users/pwnall/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/pwnall",
            "id": 11460,
            "login": "pwnall",
            "node_id": "MDQ6VXNlcjExNDYw",
            "organizations_url": "https://api.github.com/users/pwnall/orgs",
            "received_events_url": "https://api.github.com/users/pwnall/received_events",
            "repos_url": "https://api.github.com/users/pwnall/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/pwnall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pwnall/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/pwnall"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1641285?v=4",
            "events_url": "https://api.github.com/users/cmumford/events{/privacy}",
            "followers_url": "https://api.github.com/users/cmumford/followers",
            "following_url": "https://api.github.com/users/cmumford/following{/other_user}",
            "gists_url": "https://api.github.com/users/cmumford/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cmumford",
            "id": 1641285,
            "login": "cmumford",
            "node_id": "MDQ6VXNlcjE2NDEyODU=",
            "organizations_url": "https://api.github.com/users/cmumford/orgs",
            "received_events_url": "https://api.github.com/users/cmumford/received_events",
            "repos_url": "https://api.github.com/users/cmumford/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cmumford/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cmumford/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/cmumford"
        }
    ],
    "author_association": "NONE",
    "body": "Now, before you tell me this is a lot of work: I know, and am working on it (and almost done). Ideally, I would like to have my changes merged here, so I have a few questions and concerns for my current port.\r\n\r\n# Questions\r\n\r\n**Should I target a specific C++ standard?**\r\n\r\nCurrently, my code depends on a few C++11 features, which can be easily removed with a few macros. This makes the code less readable, however, if C++03 support is desired, I will gladly change my implementation to conform to an older standard.\r\n\r\n**How to handle Unicode filesystem support?**\r\n\r\nCurrently, LevelDB uses `char`-based (narrow) strings for for all filesystem operations, which does not translate well for Windows systems (since narrow strings use the ANSI, or OEM legacy codepages, and not UTF-8, for backwards compatibility). This means paths using international characters, or emojis, are therefore not supported with a simple port, something I consider to be an undesirable solution for a modern library. All the current forks of levelDB do not solve this fundamental issue, leading me to create my own implementation. Possible solutions include:\r\n\r\n1. A narrow (UTF-8) API on *Nix, and a wide (UTF-16) API on Windows, using a typedef to determine the proper path type.\r\n2. Converting all narrow strings from UTF-8 to UTF-16 before calling WinAPI functions.\r\n3. Providing both a narrow (ANSI) and wide (UTF-16) API on Windows.\r\n\r\nThe 2nd option, although the least amount of work, is the least amenable for me since the expected encoding for paths from levelDB would then conflict with the entirety of the WinAPI. The 3rd option, however, duplicates code to support both the narrow and wide WinAPI, which would increase the amount of work required to maintain levelDB. The first option is a happy median: it minimizes redundancy and is consistent with expectations about *Nix and Windows paths. I am, however, amenable to any suggestions the levelDB authors may have.\r\n\r\n**Intellectual Property**\r\n\r\nTo emulate the behavior of `mmap` on Windows, I used a very lightweight library (<250 lines of code) from Steven Lee, [mman-win32](https://github.com/witwall/mman-win32). However, looking over your contributor license agreement, it seems that my port would not satisfy Google's CLA until I remove this code from my implementation. If this is the case, I could easily use the raw WinAPI functions rather than the emulated `mmap` in my Windows port. Please notify me if I should remove this code prior to submitting a pull request.\r\n\r\n# Other Changes\r\n\r\n**CMake Build System**\r\n\r\nI introduced a CMake build system, which retains most of the same logic as the existing Makefile. The existing Makefile has not been deprecated.\r\n\r\n**AppVeyor Continual Integration**\r\n\r\nTo ensure builds do not break the Windows builds, I am planning to add an AppVeyor configuration, which allows continual integration on Windows using MSVC.\r\n\r\n# Summary\r\n\r\nIf there is still interest for native Windows support, and the proposed changes are amenable to the levelDB authors, I would gladly submit a pull request.",
    "closed_at": "2019-03-02T08:06:22Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11460?v=4",
        "events_url": "https://api.github.com/users/pwnall/events{/privacy}",
        "followers_url": "https://api.github.com/users/pwnall/followers",
        "following_url": "https://api.github.com/users/pwnall/following{/other_user}",
        "gists_url": "https://api.github.com/users/pwnall/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pwnall",
        "id": 11460,
        "login": "pwnall",
        "node_id": "MDQ6VXNlcjExNDYw",
        "organizations_url": "https://api.github.com/users/pwnall/orgs",
        "received_events_url": "https://api.github.com/users/pwnall/received_events",
        "repos_url": "https://api.github.com/users/pwnall/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pwnall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pwnall/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pwnall"
    },
    "comments": 27,
    "comments_url": "https://api.github.com/repos/google/leveldb/issues/519/comments",
    "created_at": "2017-10-17T20:09:30Z",
    "events_url": "https://api.github.com/repos/google/leveldb/issues/519/events",
    "html_url": "https://github.com/google/leveldb/issues/519",
    "id": 266261333,
    "labels": [
        {
            "color": "84b6eb",
            "default": true,
            "description": null,
            "id": 125039833,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWwxMjUwMzk4MzM=",
            "url": "https://api.github.com/repos/google/leveldb/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/google/leveldb/issues/519/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyNjYyNjEzMzM=",
    "number": 519,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 4,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/google/leveldb/issues/519/reactions"
    },
    "repository_url": "https://api.github.com/repos/google/leveldb",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/google/leveldb/issues/519/timeline",
    "title": "Comprehensive, Native Windows Support",
    "updated_at": "2019-03-02T08:06:22Z",
    "url": "https://api.github.com/repos/google/leveldb/issues/519",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9440903?v=4",
        "events_url": "https://api.github.com/users/Alexhuszagh/events{/privacy}",
        "followers_url": "https://api.github.com/users/Alexhuszagh/followers",
        "following_url": "https://api.github.com/users/Alexhuszagh/following{/other_user}",
        "gists_url": "https://api.github.com/users/Alexhuszagh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Alexhuszagh",
        "id": 9440903,
        "login": "Alexhuszagh",
        "node_id": "MDQ6VXNlcjk0NDA5MDM=",
        "organizations_url": "https://api.github.com/users/Alexhuszagh/orgs",
        "received_events_url": "https://api.github.com/users/Alexhuszagh/received_events",
        "repos_url": "https://api.github.com/users/Alexhuszagh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Alexhuszagh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Alexhuszagh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Alexhuszagh"
    }
}