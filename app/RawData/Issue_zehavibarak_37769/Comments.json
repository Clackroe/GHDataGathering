[
    {
        "author_association": "MEMBER",
        "body": "This pattern [has been deprecated in v9](https://v9.angular.io/guide/deprecations#undecorated-base-classes-using-angular-features) and is no longer supported in v10.\r\n\r\nThere is a migration that typically migrates these cases automatically (see [documentation here](https://angular.io/guide/migration-undecorated-classes) and [also here](https://angular.io/guide/migration-injectable) for datails), however it may be that the inherited `@Injectable()` case is not handled.\r\n\r\nAnyway, the resolution here is to add `@Injectable()` to the abstract base class.",
        "created_at": "2020-06-26T09:42:48Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650090205",
        "id": 650090205,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA5MDIwNQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650090205/reactions"
        },
        "updated_at": "2020-06-26T09:42:48Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650090205",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/123679?v=4",
            "events_url": "https://api.github.com/users/JoostK/events{/privacy}",
            "followers_url": "https://api.github.com/users/JoostK/followers",
            "following_url": "https://api.github.com/users/JoostK/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoostK/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JoostK",
            "id": 123679,
            "login": "JoostK",
            "node_id": "MDQ6VXNlcjEyMzY3OQ==",
            "organizations_url": "https://api.github.com/users/JoostK/orgs",
            "received_events_url": "https://api.github.com/users/JoostK/received_events",
            "repos_url": "https://api.github.com/users/JoostK/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JoostK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoostK/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JoostK"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@JoostK: are you sure it is needed? Note that the docs do _not_ say that `@Injectable` is needed in this case:\r\n\r\n```As of version 9, it's deprecated to have an undecorated base class that:\r\n\r\nuses Angular features\r\nis extended by a directive or component\r\nAngular lifecycle hooks or any of the following Angular field decorators are considered Angular features:\r\n\r\n@Input()\r\n@Output()\r\n@HostBinding()\r\n@HostListener()\r\n@ViewChild() / @ViewChildren()\r\n@ContentChild() / @ContentChildren()\r\n```\r\n\r\nFor people who use abstract base classes for injectable services, none of these apply (not extended by a directive or component, not using any of those Angular decorators/features etc.) \r\n\r\nEDIT: in fact, as far as I can tell, the docs say the pattern in the OP should be fine:\r\n\r\nhttps://angular.io/guide/migration-injectable\r\n\r\n```Note that MyThirdClass, MyFourthClass and MyFifthClass do not need to be decorated with @Injectable() because they are never instantiated, but just used as a DI token.```\r\n\r\n```Any class that is provided must have an @Injectable() decorator. The decorator is necessary for the framework to properly create an instance of that class through DI.```\r\n\r\nThe framework does not create instances of these classes because (a) they are abstract, and (b) they are just used as tokens, anyway.",
        "created_at": "2020-06-26T10:45:25Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650114543",
        "id": 650114543,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDExNDU0Mw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650114543/reactions"
        },
        "updated_at": "2020-06-26T10:48:58Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650114543",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/489010?v=4",
            "events_url": "https://api.github.com/users/matthewjh/events{/privacy}",
            "followers_url": "https://api.github.com/users/matthewjh/followers",
            "following_url": "https://api.github.com/users/matthewjh/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewjh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/matthewjh",
            "id": 489010,
            "login": "matthewjh",
            "node_id": "MDQ6VXNlcjQ4OTAxMA==",
            "organizations_url": "https://api.github.com/users/matthewjh/orgs",
            "received_events_url": "https://api.github.com/users/matthewjh/received_events",
            "repos_url": "https://api.github.com/users/matthewjh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/matthewjh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewjh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/matthewjh"
        }
    },
    {
        "author_association": "NONE",
        "body": "It did work in v9. In our project base classes are marked as **abstract**, and does not reference one of the annotations above. However, they do implement OnDestroy.\r\n\r\nI see no reason for this to be non legit syntax.  ",
        "created_at": "2020-06-26T10:51:43Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650116709",
        "id": 650116709,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDExNjcwOQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650116709/reactions"
        },
        "updated_at": "2020-06-26T10:51:43Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650116709",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2478096?v=4",
            "events_url": "https://api.github.com/users/zehavibarak/events{/privacy}",
            "followers_url": "https://api.github.com/users/zehavibarak/followers",
            "following_url": "https://api.github.com/users/zehavibarak/following{/other_user}",
            "gists_url": "https://api.github.com/users/zehavibarak/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zehavibarak",
            "id": 2478096,
            "login": "zehavibarak",
            "node_id": "MDQ6VXNlcjI0NzgwOTY=",
            "organizations_url": "https://api.github.com/users/zehavibarak/orgs",
            "received_events_url": "https://api.github.com/users/zehavibarak/received_events",
            "repos_url": "https://api.github.com/users/zehavibarak/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zehavibarak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zehavibarak/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zehavibarak"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "@matthewjh That sounds correct to me, yes. The trigger for the error in this case is the `ngOnDestroy` method, which is an Angular lifeycle hook which means that the class has Angular behavior; therefore requiring the `@Injectable()`. It could be that the documentation is not complete wrt this case.\r\n\r\n@zehavibarak For the Angular runtime to execute the `ngOnDestroy` hook, it needs to be aware that it exists.",
        "created_at": "2020-06-26T11:26:57Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650129562",
        "id": 650129562,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDEyOTU2Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650129562/reactions"
        },
        "updated_at": "2020-06-26T11:26:57Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650129562",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/123679?v=4",
            "events_url": "https://api.github.com/users/JoostK/events{/privacy}",
            "followers_url": "https://api.github.com/users/JoostK/followers",
            "following_url": "https://api.github.com/users/JoostK/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoostK/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JoostK",
            "id": 123679,
            "login": "JoostK",
            "node_id": "MDQ6VXNlcjEyMzY3OQ==",
            "organizations_url": "https://api.github.com/users/JoostK/orgs",
            "received_events_url": "https://api.github.com/users/JoostK/received_events",
            "repos_url": "https://api.github.com/users/JoostK/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JoostK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoostK/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JoostK"
        }
    },
    {
        "author_association": "NONE",
        "body": "Again, it did work in 9 and it is a good programming practice. Whatever change made in 10 will need to be meaningful for me to fold.  ",
        "created_at": "2020-06-26T11:41:15Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650134607",
        "id": 650134607,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDEzNDYwNw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650134607/reactions"
        },
        "updated_at": "2020-06-26T11:41:15Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650134607",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2478096?v=4",
            "events_url": "https://api.github.com/users/zehavibarak/events{/privacy}",
            "followers_url": "https://api.github.com/users/zehavibarak/followers",
            "following_url": "https://api.github.com/users/zehavibarak/following{/other_user}",
            "gists_url": "https://api.github.com/users/zehavibarak/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zehavibarak",
            "id": 2478096,
            "login": "zehavibarak",
            "node_id": "MDQ6VXNlcjI0NzgwOTY=",
            "organizations_url": "https://api.github.com/users/zehavibarak/orgs",
            "received_events_url": "https://api.github.com/users/zehavibarak/received_events",
            "repos_url": "https://api.github.com/users/zehavibarak/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zehavibarak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zehavibarak/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zehavibarak"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "@zehavibarak What practice are you referring to as \"good programming practice\"?",
        "created_at": "2020-06-26T19:32:48Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650359289",
        "id": 650359289,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDM1OTI4OQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650359289/reactions"
        },
        "updated_at": "2020-06-26T19:32:48Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650359289",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/123679?v=4",
            "events_url": "https://api.github.com/users/JoostK/events{/privacy}",
            "followers_url": "https://api.github.com/users/JoostK/followers",
            "following_url": "https://api.github.com/users/JoostK/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoostK/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JoostK",
            "id": 123679,
            "login": "JoostK",
            "node_id": "MDQ6VXNlcjEyMzY3OQ==",
            "organizations_url": "https://api.github.com/users/JoostK/orgs",
            "received_events_url": "https://api.github.com/users/JoostK/received_events",
            "repos_url": "https://api.github.com/users/JoostK/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JoostK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoostK/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JoostK"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@JoostK Using `abstract` classes which are meant to be extended only. The following example worked in Angular 9\r\n\r\n```typescript\r\nexport abstract class Destroyable implements OnDestroy {\r\n  protected $destroyed = new Subject();\r\n\r\n  ngOnDestroy() {\r\n    this.$destroyed.next();\r\n    this.$destroyed.complete();\r\n  }\r\n}\r\n\r\n// SomeComponent\r\n@Component({...})\r\nexport class SomeComponent extends Destroyable implements OnInit {\r\n   ngOnInit() {\r\n      someObservable.pipe(takeUntil(this.$destroyed)).subscribe(...)\r\n   }\r\n}\r\n```\r\nI think abstract classes should be excluded from the list of required annotations since it's never meant (or be able to) to be instantiated anyway. ",
        "created_at": "2020-06-27T12:58:10Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650558077",
        "id": 650558077,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU1ODA3Nw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 16,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 16,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650558077/reactions"
        },
        "updated_at": "2020-06-27T12:58:10Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650558077",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/25516557?v=4",
            "events_url": "https://api.github.com/users/nartc/events{/privacy}",
            "followers_url": "https://api.github.com/users/nartc/followers",
            "following_url": "https://api.github.com/users/nartc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nartc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/nartc",
            "id": 25516557,
            "login": "nartc",
            "node_id": "MDQ6VXNlcjI1NTE2NTU3",
            "organizations_url": "https://api.github.com/users/nartc/orgs",
            "received_events_url": "https://api.github.com/users/nartc/received_events",
            "repos_url": "https://api.github.com/users/nartc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/nartc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nartc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/nartc"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@nartc I think what @JoostK is saying is that Angular _needs_ (or will in future need) the base class in your case to be annotated, so that the compiler knows to statically analyse it for Angular features like `ngOnDestroy`. Then, when the compiler sees your sub class extending `Destroyable`, it, having analysed the base class, knows that the subclass will have an `ngOnDestroy` hook via `Destroyable`. This makes sense. Under this logic - if accurate - it doesn't make a difference whether the class can be directly instantiated, as in a way, it can be \"instantiated\" through a subclass.\r\n\r\n@JoostK just one thing I want to clarify, if we use \"abstract class\" like interfaces, and have a lot of classes that _implement_ (not extend) them, we won't need to add `@Injectable()` to the abstract classes, right?",
        "created_at": "2020-06-27T13:25:05Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650560974",
        "id": 650560974,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU2MDk3NA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650560974/reactions"
        },
        "updated_at": "2020-06-27T13:26:24Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650560974",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/489010?v=4",
            "events_url": "https://api.github.com/users/matthewjh/events{/privacy}",
            "followers_url": "https://api.github.com/users/matthewjh/followers",
            "following_url": "https://api.github.com/users/matthewjh/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewjh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/matthewjh",
            "id": 489010,
            "login": "matthewjh",
            "node_id": "MDQ6VXNlcjQ4OTAxMA==",
            "organizations_url": "https://api.github.com/users/matthewjh/orgs",
            "received_events_url": "https://api.github.com/users/matthewjh/received_events",
            "repos_url": "https://api.github.com/users/matthewjh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/matthewjh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewjh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/matthewjh"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@matthewjh isn't that what Ivy does? And also, I'm not against adding a selector-less decorator like `Directive` but the above snippet did work in Angular 9. So either this is a regression issue or Ivy contains a \"bug as a feature\". As @zehavibarak said, some explanation on why the above worked in 9 but stopped working in 10 would be nice. Or like you said, this *might be needed* in the future and adding annotation to abstract class is a mean to add more metadata for Angular Compiler.\r\n\r\n\"worked in 9\" as in sub class has `ngOnDestroy` hook ran just fine.",
        "created_at": "2020-06-27T13:39:11Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650562528",
        "id": 650562528,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU2MjUyOA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650562528/reactions"
        },
        "updated_at": "2020-06-27T13:44:56Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650562528",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/25516557?v=4",
            "events_url": "https://api.github.com/users/nartc/events{/privacy}",
            "followers_url": "https://api.github.com/users/nartc/followers",
            "following_url": "https://api.github.com/users/nartc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nartc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/nartc",
            "id": 25516557,
            "login": "nartc",
            "node_id": "MDQ6VXNlcjI1NTE2NTU3",
            "organizations_url": "https://api.github.com/users/nartc/orgs",
            "received_events_url": "https://api.github.com/users/nartc/received_events",
            "repos_url": "https://api.github.com/users/nartc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/nartc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nartc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/nartc"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "@matthewjh Correct, your analysis is spot on.\r\n\r\n> just one thing I want to clarify, if we use \"abstract class\" like interfaces, and have a lot of classes that implement (not extend) them, we won't need to add @Injectable() to the abstract classes, right?\r\n\r\nCorrect. It is fine to omit the decorator if the base class does not implement any Angular behavior, which an abstract base class used as interface + token won't have. Even abstract classes that are actually extended from other classes will only need a decorator if they use Angular features. There's two gotchas to this statement:\r\n\r\n1. When a base class class has a constructor that has to be called by Angular, it needs either `@Injectable()` or `@Directive()` to capture those parameters as tokens for the runtime to use. This is a gotcha, as having a constructor won't require a decorator _iff_ all subclasses have their own constructor.\r\n2. A class `B` that is part of an inheritance chain where its superclass `A` has Angular behavior and a subclass `C` has Angular behavior requires that class `B` also has a decorator, regardless of whether it has Angular behavior in itself. So \"extending a class with Angular behavior\" should also be considered as having Angular behavior. This case is probably not documented, I reckon.\r\n\r\n@nartc These changes fall under the \"[Undecorated base classes using Angular features](https://v9.angular.io/guide/deprecations#undecorated-base-classes-using-angular-features)\" deprecations in v9. Support was removed in #36921. Note that it's absolutely fine to keep the `abstract` keyword.\r\n\r\n> Or like you said, this might be needed in the future and adding annotation to abstract class is a mean to add more metadata for Angular Compiler.\r\n\r\nThe future is now! This is exactly what happened in v10.",
        "created_at": "2020-06-27T15:04:39Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-650572372",
        "id": 650572372,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU3MjM3Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 6,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 6,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/650572372/reactions"
        },
        "updated_at": "2020-06-27T15:04:39Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/650572372",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/123679?v=4",
            "events_url": "https://api.github.com/users/JoostK/events{/privacy}",
            "followers_url": "https://api.github.com/users/JoostK/followers",
            "following_url": "https://api.github.com/users/JoostK/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoostK/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JoostK",
            "id": 123679,
            "login": "JoostK",
            "node_id": "MDQ6VXNlcjEyMzY3OQ==",
            "organizations_url": "https://api.github.com/users/JoostK/orgs",
            "received_events_url": "https://api.github.com/users/JoostK/received_events",
            "repos_url": "https://api.github.com/users/JoostK/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JoostK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoostK/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JoostK"
        }
    },
    {
        "author_association": "NONE",
        "body": "I read through the whole thread as well as [the docs page](https://v9.angular.io/guide/migration-undecorated-classes) and I'm still not clear on when to use `@Injectable()` vs `@Directive()`.  Is the end result behavior any different?\r\n\r\nI had an `abstract` base class that several Components inherited from.  The child classes were decorated `@Component(...)` and the base had no decorator.  As previous commenters pointed out, this seemed fine in v9 but broke in v10.  The docs I linked above don't give this specific example -- there's one where the base and child classes both have `@Component` but there's no such thing as a zero-argument `@Component()` decorator and it doesn't make sense to attach a `selector` to an abstract class (right?).  Given what I found, I decided to mark the base with an empty `@Directive()` decorator, which seems to work, but that feels wrong too -- it's a Component, not a Directive!\r\n\r\nIs the real issue here that we \"should\" have an empty `@Component()` decorator?  Or am I over-thinking it?",
        "created_at": "2020-09-21T11:34:52Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-696058872",
        "id": 696058872,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjA1ODg3Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 3,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 3,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/696058872/reactions"
        },
        "updated_at": "2020-09-21T11:34:52Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/696058872",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/943160?v=4",
            "events_url": "https://api.github.com/users/thw0rted/events{/privacy}",
            "followers_url": "https://api.github.com/users/thw0rted/followers",
            "following_url": "https://api.github.com/users/thw0rted/following{/other_user}",
            "gists_url": "https://api.github.com/users/thw0rted/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/thw0rted",
            "id": 943160,
            "login": "thw0rted",
            "node_id": "MDQ6VXNlcjk0MzE2MA==",
            "organizations_url": "https://api.github.com/users/thw0rted/orgs",
            "received_events_url": "https://api.github.com/users/thw0rted/received_events",
            "repos_url": "https://api.github.com/users/thw0rted/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/thw0rted/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thw0rted/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/thw0rted"
        }
    },
    {
        "author_association": "NONE",
        "body": "You are overthinking it. Works with empty @Directive()\n",
        "created_at": "2020-09-21T11:37:40Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-696059834",
        "id": 696059834,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjA1OTgzNA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/696059834/reactions"
        },
        "updated_at": "2020-09-21T11:37:40Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/696059834",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2478096?v=4",
            "events_url": "https://api.github.com/users/zehavibarak/events{/privacy}",
            "followers_url": "https://api.github.com/users/zehavibarak/followers",
            "following_url": "https://api.github.com/users/zehavibarak/following{/other_user}",
            "gists_url": "https://api.github.com/users/zehavibarak/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zehavibarak",
            "id": 2478096,
            "login": "zehavibarak",
            "node_id": "MDQ6VXNlcjI0NzgwOTY=",
            "organizations_url": "https://api.github.com/users/zehavibarak/orgs",
            "received_events_url": "https://api.github.com/users/zehavibarak/received_events",
            "repos_url": "https://api.github.com/users/zehavibarak/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zehavibarak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zehavibarak/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zehavibarak"
        }
    },
    {
        "author_association": "CONTRIBUTOR",
        "body": "@thw0rted `Component` is a `Directive` with `template`. Does your base have `template`? No? Then it is a `Directive`",
        "created_at": "2020-09-21T13:10:55Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-696103927",
        "id": 696103927,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjEwMzkyNw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 1,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/696103927/reactions"
        },
        "updated_at": "2020-09-21T13:10:55Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/696103927",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/25516557?v=4",
            "events_url": "https://api.github.com/users/nartc/events{/privacy}",
            "followers_url": "https://api.github.com/users/nartc/followers",
            "following_url": "https://api.github.com/users/nartc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nartc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/nartc",
            "id": 25516557,
            "login": "nartc",
            "node_id": "MDQ6VXNlcjI1NTE2NTU3",
            "organizations_url": "https://api.github.com/users/nartc/orgs",
            "received_events_url": "https://api.github.com/users/nartc/received_events",
            "repos_url": "https://api.github.com/users/nartc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/nartc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nartc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/nartc"
        }
    },
    {
        "author_association": "NONE",
        "body": "Yeah, you're right, Directive makes more sense than Component because as a base class it's all functionality and no style or content / template.  But really it's not even a Directive, because isn't a Directive just functionality (???) that can attach to a host Element?  And of course an abstract \"component base\" can't attach to anything.  I think I'm talking myself into thinking that `Injectable` is more correct, or at least less wrong.  Maybe I just don't have a deep enough understanding of internals to grok this.",
        "created_at": "2020-09-21T13:31:30Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-696116382",
        "id": 696116382,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjExNjM4Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/696116382/reactions"
        },
        "updated_at": "2020-09-21T13:31:30Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/696116382",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/943160?v=4",
            "events_url": "https://api.github.com/users/thw0rted/events{/privacy}",
            "followers_url": "https://api.github.com/users/thw0rted/followers",
            "following_url": "https://api.github.com/users/thw0rted/following{/other_user}",
            "gists_url": "https://api.github.com/users/thw0rted/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/thw0rted",
            "id": 943160,
            "login": "thw0rted",
            "node_id": "MDQ6VXNlcjk0MzE2MA==",
            "organizations_url": "https://api.github.com/users/thw0rted/orgs",
            "received_events_url": "https://api.github.com/users/thw0rted/received_events",
            "repos_url": "https://api.github.com/users/thw0rted/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/thw0rted/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thw0rted/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/thw0rted"
        }
    },
    {
        "author_association": "NONE",
        "body": "In my opinion `Component`, `Directive` and `Injectable` does not make any sense on an `abstract class`. Clearly this error is a false positive and adding `Directive` may be a workaround.",
        "created_at": "2020-09-28T15:30:14Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-700088493",
        "id": 700088493,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDA4ODQ5Mw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 24,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 24,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/700088493/reactions"
        },
        "updated_at": "2020-09-28T15:31:06Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/700088493",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/44408?v=4",
            "events_url": "https://api.github.com/users/Christopherjl/events{/privacy}",
            "followers_url": "https://api.github.com/users/Christopherjl/followers",
            "following_url": "https://api.github.com/users/Christopherjl/following{/other_user}",
            "gists_url": "https://api.github.com/users/Christopherjl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Christopherjl",
            "id": 44408,
            "login": "Christopherjl",
            "node_id": "MDQ6VXNlcjQ0NDA4",
            "organizations_url": "https://api.github.com/users/Christopherjl/orgs",
            "received_events_url": "https://api.github.com/users/Christopherjl/received_events",
            "repos_url": "https://api.github.com/users/Christopherjl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Christopherjl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Christopherjl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Christopherjl"
        }
    },
    {
        "author_association": "NONE",
        "body": "I agree with @Christopherjl,  it makes no sense to write down an abstract class with \"Component, Directive and Injectable\"",
        "created_at": "2020-10-01T01:49:57Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-701740308",
        "id": 701740308,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTc0MDMwOA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/701740308/reactions"
        },
        "updated_at": "2020-10-01T01:49:57Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/701740308",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10438644?v=4",
            "events_url": "https://api.github.com/users/john182/events{/privacy}",
            "followers_url": "https://api.github.com/users/john182/followers",
            "following_url": "https://api.github.com/users/john182/following{/other_user}",
            "gists_url": "https://api.github.com/users/john182/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/john182",
            "id": 10438644,
            "login": "john182",
            "node_id": "MDQ6VXNlcjEwNDM4NjQ0",
            "organizations_url": "https://api.github.com/users/john182/orgs",
            "received_events_url": "https://api.github.com/users/john182/received_events",
            "repos_url": "https://api.github.com/users/john182/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/john182/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john182/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/john182"
        }
    },
    {
        "author_association": "NONE",
        "body": "Any update on this?",
        "created_at": "2020-11-09T10:26:10Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-723920909",
        "id": 723920909,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzkyMDkwOQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 4,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 4,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/723920909/reactions"
        },
        "updated_at": "2020-11-09T10:26:10Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/723920909",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/32739120?v=4",
            "events_url": "https://api.github.com/users/Lampent/events{/privacy}",
            "followers_url": "https://api.github.com/users/Lampent/followers",
            "following_url": "https://api.github.com/users/Lampent/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lampent/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Lampent",
            "id": 32739120,
            "login": "Lampent",
            "node_id": "MDQ6VXNlcjMyNzM5MTIw",
            "organizations_url": "https://api.github.com/users/Lampent/orgs",
            "received_events_url": "https://api.github.com/users/Lampent/received_events",
            "repos_url": "https://api.github.com/users/Lampent/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Lampent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lampent/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Lampent"
        }
    },
    {
        "author_association": "NONE",
        "body": "If the base class is anstract and Generic, then ng build --prod with \"enableIvy\": false, to make a library, doesn't compile\r\nthen I have to remove the directive to make it compile, but if it's not production, still makes the NG2007 error.\r\n\r\n\r\n",
        "created_at": "2020-11-16T22:04:24Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-728356448",
        "id": 728356448,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyODM1NjQ0OA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/728356448/reactions"
        },
        "updated_at": "2020-11-16T22:04:24Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/728356448",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16882855?v=4",
            "events_url": "https://api.github.com/users/luizfbicalho/events{/privacy}",
            "followers_url": "https://api.github.com/users/luizfbicalho/followers",
            "following_url": "https://api.github.com/users/luizfbicalho/following{/other_user}",
            "gists_url": "https://api.github.com/users/luizfbicalho/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luizfbicalho",
            "id": 16882855,
            "login": "luizfbicalho",
            "node_id": "MDQ6VXNlcjE2ODgyODU1",
            "organizations_url": "https://api.github.com/users/luizfbicalho/orgs",
            "received_events_url": "https://api.github.com/users/luizfbicalho/received_events",
            "repos_url": "https://api.github.com/users/luizfbicalho/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luizfbicalho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luizfbicalho/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luizfbicalho"
        }
    },
    {
        "author_association": "NONE",
        "body": "What does `enableIvy: false` do now?  I thought Ivy was the only template engine available in v10+.",
        "created_at": "2020-11-17T10:29:32Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-728837968",
        "id": 728837968,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyODgzNzk2OA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/728837968/reactions"
        },
        "updated_at": "2020-11-17T10:29:32Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/728837968",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/943160?v=4",
            "events_url": "https://api.github.com/users/thw0rted/events{/privacy}",
            "followers_url": "https://api.github.com/users/thw0rted/followers",
            "following_url": "https://api.github.com/users/thw0rted/following{/other_user}",
            "gists_url": "https://api.github.com/users/thw0rted/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/thw0rted",
            "id": 943160,
            "login": "thw0rted",
            "node_id": "MDQ6VXNlcjk0MzE2MA==",
            "organizations_url": "https://api.github.com/users/thw0rted/orgs",
            "received_events_url": "https://api.github.com/users/thw0rted/received_events",
            "repos_url": "https://api.github.com/users/thw0rted/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/thw0rted/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thw0rted/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/thw0rted"
        }
    },
    {
        "author_association": "NONE",
        "body": "@thw0rted when I compile a library as a NPM package it can't be compiled with Ivy.",
        "created_at": "2020-11-17T12:06:56Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-728884171",
        "id": 728884171,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyODg4NDE3MQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/728884171/reactions"
        },
        "updated_at": "2020-11-17T12:06:56Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/728884171",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16882855?v=4",
            "events_url": "https://api.github.com/users/luizfbicalho/events{/privacy}",
            "followers_url": "https://api.github.com/users/luizfbicalho/followers",
            "following_url": "https://api.github.com/users/luizfbicalho/following{/other_user}",
            "gists_url": "https://api.github.com/users/luizfbicalho/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luizfbicalho",
            "id": 16882855,
            "login": "luizfbicalho",
            "node_id": "MDQ6VXNlcjE2ODgyODU1",
            "organizations_url": "https://api.github.com/users/luizfbicalho/orgs",
            "received_events_url": "https://api.github.com/users/luizfbicalho/received_events",
            "repos_url": "https://api.github.com/users/luizfbicalho/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luizfbicalho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luizfbicalho/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luizfbicalho"
        }
    },
    {
        "author_association": "NONE",
        "body": "FWIW, I am running into issues related to this. I have no problem adding a `@Directive()` to my base class if it makes Angular happy. It is an ok compromise for me.\r\n\r\nHowever, my use case has 2 specific conditions that may not be supported (or I need clarification on how to). A long time ago, we followed a pattern to implement custom control via `ControlValueAccessor`. I cannot find the original article we followed, but it has been working fine for a several Angular versions (6+) where we implement a _base class_ `ValueAccessorBase<T>` similar to:\r\n\r\n```typescript\r\nexport abstract class ValueAccessorBase<T> implements ControlValueAccessor {\r\n  @Input disabled: boolean;\r\n\r\n  constructor(private writeValueCallback?: (value: T) => void) {};\r\n  // the rest of the implementation of CVA\r\n}\r\n```\r\nWhen we compile with Angular 10, we get the following error:\r\n```\r\nERROR: /path/to/project/my-library-project/src/lib/value-accessor-base.ts:8:1: Error encountered in metadata generated for exported symbol 'ValueAccessorBase': \r\n /path/to/project/my-library-project/src/lib/value-accessor-base.ts:17:46: Metadata collected contains an error that will be reported at runtime: Expression form not supported.\r\n  {\"__symbolic\":\"error\",\"message\":\"Expression form not supported\",\"line\":16,\"character\":45}\r\nAn unhandled exception occurred: /path/to/project/my-library-project/src/lib/value-accessor-base.ts:8:1: Error encountered in metadata generated for exported symbol 'ValueAccessorBase': \r\n /path/to/project/my-library-project/src/lib/value-accessor-base.ts:17:46: Metadata collected contains an error that will be reported at runtime: Expression form not supported.\r\n  {\"__symbolic\":\"error\",\"message\":\"Expression form not supported\",\"line\":16,\"character\":45}\r\nSee \"/private/var/folders/q9/9pm0lc5x3s5bw0nywxv0r9_c0000gr/T/ng-im3YyK/angular-errors.log\" for further details.\r\n\r\n```\r\n\r\nThe issue here seems to be the constructor parameter (a generic callback). I think I understand why, but I don't know how to solve this. One option could be to remove the `@Input()` on our `disabled` flag. We could still provide a protected variable or something to manage the `setDisabled()` CVA implementation. \r\n\r\nAny reason why that constructor callback is causing metadata errors? is it because of the generic part? I did try replacing it with `any` and it works, but obviously, that's not correct. Is there a decorator I can add to ignore the token injection?",
        "created_at": "2021-02-03T19:13:18Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-772751103",
        "id": 772751103,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mjc1MTEwMw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/772751103/reactions"
        },
        "updated_at": "2021-02-03T19:13:18Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/772751103",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16297214?v=4",
            "events_url": "https://api.github.com/users/ericsnap/events{/privacy}",
            "followers_url": "https://api.github.com/users/ericsnap/followers",
            "following_url": "https://api.github.com/users/ericsnap/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericsnap/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ericsnap",
            "id": 16297214,
            "login": "ericsnap",
            "node_id": "MDQ6VXNlcjE2Mjk3MjE0",
            "organizations_url": "https://api.github.com/users/ericsnap/orgs",
            "received_events_url": "https://api.github.com/users/ericsnap/received_events",
            "repos_url": "https://api.github.com/users/ericsnap/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ericsnap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericsnap/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ericsnap"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "@ericsnap That error is reported by the View Engine compiler when compiling your library. It prepares a `metadata.json` file for an application build to use, but it notices that there is an error in this file that would prevent apps from compiling so it reports an error immediately during the library build. You should be able to set Angular compiler option `strictMetadataEmit: false` to disable this check: it will still result in a metadata file that would introduce a compilation error when consumed in an application, but that is only a problem if the app is still on View Engine. For apps using Ivy the metadata isn't used and I hope that you'd still be able to use this pattern.",
        "created_at": "2021-02-03T20:01:02Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-772783558",
        "id": 772783558,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mjc4MzU1OA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/772783558/reactions"
        },
        "updated_at": "2021-02-03T20:01:02Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/772783558",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/123679?v=4",
            "events_url": "https://api.github.com/users/JoostK/events{/privacy}",
            "followers_url": "https://api.github.com/users/JoostK/followers",
            "following_url": "https://api.github.com/users/JoostK/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoostK/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JoostK",
            "id": 123679,
            "login": "JoostK",
            "node_id": "MDQ6VXNlcjEyMzY3OQ==",
            "organizations_url": "https://api.github.com/users/JoostK/orgs",
            "received_events_url": "https://api.github.com/users/JoostK/received_events",
            "repos_url": "https://api.github.com/users/JoostK/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JoostK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoostK/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JoostK"
        }
    },
    {
        "author_association": "NONE",
        "body": "@JoostK thanks for the super quick response. So, you are saying that we're not doing anything completely crazy, right? \r\nSince this is an internal library and we have some relative tight control over our consumers, _if_ we compile this library as-is using the Ivy engine _and_ make sure our projects use Ivy too, we should be good?",
        "created_at": "2021-02-03T21:30:21Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-772837460",
        "id": 772837460,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjgzNzQ2MA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/772837460/reactions"
        },
        "updated_at": "2021-02-03T21:30:21Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/772837460",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16297214?v=4",
            "events_url": "https://api.github.com/users/ericsnap/events{/privacy}",
            "followers_url": "https://api.github.com/users/ericsnap/followers",
            "following_url": "https://api.github.com/users/ericsnap/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericsnap/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ericsnap",
            "id": 16297214,
            "login": "ericsnap",
            "node_id": "MDQ6VXNlcjE2Mjk3MjE0",
            "organizations_url": "https://api.github.com/users/ericsnap/orgs",
            "received_events_url": "https://api.github.com/users/ericsnap/received_events",
            "repos_url": "https://api.github.com/users/ericsnap/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ericsnap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericsnap/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ericsnap"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "> @JoostK thanks for the super quick response. So, you are saying that we're not doing anything completely crazy, right?\r\n\r\nNope, there is nothing crazy about that. But I do anticipate that you'll hit #37914, which would then require a workaround of setting `strictInjectionParameters: false`.\r\n\r\n> Since this is an internal library and we have some relative tight control over our consumers, _if_ we compile this library as-is using the Ivy engine _and_ make sure our projects use Ivy too, we should be good?\r\n\r\nSort of, yes. However, it is not recommended to be publishing libraries directly using the Ivy compiler, as the generated code is not stable and can change between patch versions. I think you should be able to continue to compile libraries using View Engine as you do today, if you set `strictMetadataEmit: false`.",
        "created_at": "2021-02-03T21:39:00Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-772842008",
        "id": 772842008,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mjg0MjAwOA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/772842008/reactions"
        },
        "updated_at": "2021-02-03T21:39:00Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/772842008",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/123679?v=4",
            "events_url": "https://api.github.com/users/JoostK/events{/privacy}",
            "followers_url": "https://api.github.com/users/JoostK/followers",
            "following_url": "https://api.github.com/users/JoostK/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoostK/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JoostK",
            "id": 123679,
            "login": "JoostK",
            "node_id": "MDQ6VXNlcjEyMzY3OQ==",
            "organizations_url": "https://api.github.com/users/JoostK/orgs",
            "received_events_url": "https://api.github.com/users/JoostK/received_events",
            "repos_url": "https://api.github.com/users/JoostK/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JoostK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoostK/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JoostK"
        }
    },
    {
        "author_association": "NONE",
        "body": "Can't you just use a `protected abstract writeValueCallback: (val: T) => void` as a member, instead of passing it as a constructor argument?  If the problem is that you need to use it in common setup code, you could move that logic into an Angular lifecycle event instead.",
        "created_at": "2021-02-04T09:30:37Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-773165639",
        "id": 773165639,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzE2NTYzOQ==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 1,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 1,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/773165639/reactions"
        },
        "updated_at": "2021-02-04T09:30:37Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/773165639",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/943160?v=4",
            "events_url": "https://api.github.com/users/thw0rted/events{/privacy}",
            "followers_url": "https://api.github.com/users/thw0rted/followers",
            "following_url": "https://api.github.com/users/thw0rted/following{/other_user}",
            "gists_url": "https://api.github.com/users/thw0rted/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/thw0rted",
            "id": 943160,
            "login": "thw0rted",
            "node_id": "MDQ6VXNlcjk0MzE2MA==",
            "organizations_url": "https://api.github.com/users/thw0rted/orgs",
            "received_events_url": "https://api.github.com/users/thw0rted/received_events",
            "repos_url": "https://api.github.com/users/thw0rted/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/thw0rted/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thw0rted/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/thw0rted"
        }
    },
    {
        "author_association": "NONE",
        "body": "@thw0rted you are absolutely correct. That's what I wanted to do first. But it would require us/me to go through all our custom controls and manually update the constructor call to use a protected implementation instead. Considering what @JoostK mentioned above and #37914 I may put that in the backlog sooner rather than later.\r\nThe good news is that I don't see a lot of our controls with actual meaningful logic in that callback. Very few of our controls actually change the data in and out.",
        "created_at": "2021-02-04T15:47:34Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-773406910",
        "id": 773406910,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQwNjkxMA==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/773406910/reactions"
        },
        "updated_at": "2021-02-04T15:47:34Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/773406910",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16297214?v=4",
            "events_url": "https://api.github.com/users/ericsnap/events{/privacy}",
            "followers_url": "https://api.github.com/users/ericsnap/followers",
            "following_url": "https://api.github.com/users/ericsnap/following{/other_user}",
            "gists_url": "https://api.github.com/users/ericsnap/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ericsnap",
            "id": 16297214,
            "login": "ericsnap",
            "node_id": "MDQ6VXNlcjE2Mjk3MjE0",
            "organizations_url": "https://api.github.com/users/ericsnap/orgs",
            "received_events_url": "https://api.github.com/users/ericsnap/received_events",
            "repos_url": "https://api.github.com/users/ericsnap/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ericsnap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ericsnap/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ericsnap"
        }
    },
    {
        "author_association": "NONE",
        "body": "> I read through the whole thread as well as [the docs page](https://v9.angular.io/guide/migration-undecorated-classes) and I'm still not clear on when to use `@Injectable()` vs `@Directive()`. Is the end result behavior any different?\r\n> \r\n> I had an `abstract` base class that several Components inherited from. The child classes were decorated `@Component(...)` and the base had no decorator. As previous commenters pointed out, this seemed fine in v9 but broke in v10. The docs I linked above don't give this specific example -- there's one where the base and child classes both have `@Component` but there's no such thing as a zero-argument `@Component()` decorator and it doesn't make sense to attach a `selector` to an abstract class (right?). Given what I found, I decided to mark the base with an empty `@Directive()` decorator, which seems to work, but that feels wrong too -- it's a Component, not a Directive!\r\n> \r\n> Is the real issue here that we \"should\" have an empty `@Component()` decorator? Or am I over-thinking it?\r\n\r\nI have a similar doubt to this but regarding Services.\r\n\r\nI have an `abstract` class that is used to create component level provided services. [The current migration guide](https://angular.io/guide/migration-undecorated-classes) does not have this use case.\r\n\r\n```typescript\r\nabstract class BaseService implements OnDestroy {\r\n    protected readonly subscriptions = new Subscription();\r\n\r\n   ngOnDestroy() {\r\n      this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n\r\n\r\n@Injectable()\r\nclass MyServiceImplementationA extends BaseService {\r\n   // ...\r\n} \r\n\r\n````\r\n\r\nShould I decorate `BaseService`  with `Directive` ? It does not sound right.",
        "created_at": "2021-02-19T12:55:13Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-782056983",
        "id": 782056983,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA1Njk4Mw==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/782056983/reactions"
        },
        "updated_at": "2021-02-19T12:55:24Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/782056983",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/5490201?v=4",
            "events_url": "https://api.github.com/users/distante/events{/privacy}",
            "followers_url": "https://api.github.com/users/distante/followers",
            "following_url": "https://api.github.com/users/distante/following{/other_user}",
            "gists_url": "https://api.github.com/users/distante/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/distante",
            "id": 5490201,
            "login": "distante",
            "node_id": "MDQ6VXNlcjU0OTAyMDE=",
            "organizations_url": "https://api.github.com/users/distante/orgs",
            "received_events_url": "https://api.github.com/users/distante/received_events",
            "repos_url": "https://api.github.com/users/distante/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/distante/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/distante/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/distante"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "You can apply \"any\" Angular decorator to ensure that the Angular compiler is aware of this class and so wires up the life-cycle hook correctly. In the case of services the recommendation would be to use `@Injectable()`.\r\n\r\nError: https://stackblitz.com/edit/angular-ivy-8rstse?file=src%2Fapp%2Fapp.module.ts\r\nFixes: https://stackblitz.com/edit/angular-ivy-yqqdce?file=src%2Fapp%2Fapp.module.ts\r\n\r\n\r\nPerhaps someone could create an issue to document this case better?\r\n",
        "created_at": "2021-02-19T13:08:39Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-782063672",
        "id": 782063672,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA2MzY3Mg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/782063672/reactions"
        },
        "updated_at": "2021-02-19T13:08:39Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/782063672",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/15655?v=4",
            "events_url": "https://api.github.com/users/petebacondarwin/events{/privacy}",
            "followers_url": "https://api.github.com/users/petebacondarwin/followers",
            "following_url": "https://api.github.com/users/petebacondarwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/petebacondarwin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/petebacondarwin",
            "id": 15655,
            "login": "petebacondarwin",
            "node_id": "MDQ6VXNlcjE1NjU1",
            "organizations_url": "https://api.github.com/users/petebacondarwin/orgs",
            "received_events_url": "https://api.github.com/users/petebacondarwin/received_events",
            "repos_url": "https://api.github.com/users/petebacondarwin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/petebacondarwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petebacondarwin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/petebacondarwin"
        }
    },
    {
        "author_association": "NONE",
        "body": "> You can apply \"any\" Angular decorator to ensure that the Angular compiler is aware of this class and so wires up the life-cycle hook correctly. In the case of services the recommendation would be to use `@Injectable()`.\r\n> \r\n> Error: https://stackblitz.com/edit/angular-ivy-8rstse?file=src%2Fapp%2Fapp.module.ts\r\n> Fixes: https://stackblitz.com/edit/angular-ivy-yqqdce?file=src%2Fapp%2Fapp.module.ts\r\n> \r\n> Perhaps someone could create an issue to document this case better?\r\n\r\n`@Injectable()` tells me that \"this is injected\" instead of \"extended\" though. But I suppose this is the best option right now. Maybe a `@AngularAware()` decorator for abstract classes would be clearer (Instead of using decorators that meant *just* one particular thing before).",
        "created_at": "2021-02-19T13:15:25Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-782067012",
        "id": 782067012,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA2NzAxMg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 5,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 5,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/782067012/reactions"
        },
        "updated_at": "2021-02-19T13:15:25Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/782067012",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/5490201?v=4",
            "events_url": "https://api.github.com/users/distante/events{/privacy}",
            "followers_url": "https://api.github.com/users/distante/followers",
            "following_url": "https://api.github.com/users/distante/following{/other_user}",
            "gists_url": "https://api.github.com/users/distante/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/distante",
            "id": 5490201,
            "login": "distante",
            "node_id": "MDQ6VXNlcjU0OTAyMDE=",
            "organizations_url": "https://api.github.com/users/distante/orgs",
            "received_events_url": "https://api.github.com/users/distante/received_events",
            "repos_url": "https://api.github.com/users/distante/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/distante/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/distante/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/distante"
        }
    },
    {
        "author_association": "MEMBER",
        "body": "I guess you could read `Injectable` as \"can take part in the dependency injection system\".",
        "created_at": "2021-02-19T13:55:12Z",
        "html_url": "https://github.com/angular/angular/issues/37769#issuecomment-782089906",
        "id": 782089906,
        "issue_url": "https://api.github.com/repos/angular/angular/issues/37769",
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjA4OTkwNg==",
        "performed_via_github_app": null,
        "reactions": {
            "+1": 0,
            "-1": 0,
            "confused": 0,
            "eyes": 0,
            "heart": 0,
            "hooray": 0,
            "laugh": 0,
            "rocket": 0,
            "total_count": 0,
            "url": "https://api.github.com/repos/angular/angular/issues/comments/782089906/reactions"
        },
        "updated_at": "2021-02-19T13:55:12Z",
        "url": "https://api.github.com/repos/angular/angular/issues/comments/782089906",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/15655?v=4",
            "events_url": "https://api.github.com/users/petebacondarwin/events{/privacy}",
            "followers_url": "https://api.github.com/users/petebacondarwin/followers",
            "following_url": "https://api.github.com/users/petebacondarwin/following{/other_user}",
            "gists_url": "https://api.github.com/users/petebacondarwin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/petebacondarwin",
            "id": 15655,
            "login": "petebacondarwin",
            "node_id": "MDQ6VXNlcjE1NjU1",
            "organizations_url": "https://api.github.com/users/petebacondarwin/orgs",
            "received_events_url": "https://api.github.com/users/petebacondarwin/received_events",
            "repos_url": "https://api.github.com/users/petebacondarwin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/petebacondarwin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petebacondarwin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/petebacondarwin"
        }
    }
]