{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Always writing a body can be a frequent minor annoyance and I'm personally just irked by the aesthetic of empty blocks.\r\n\r\nConstructors, before:\r\n\r\n```c#\r\npublic StringProcessor() : this(default(Encoding))\r\n{\r\n}\r\n\r\npublic StringProcessor(CountType countType) : this(default(Encoding), countType)\r\n{\r\n}\r\n\r\npublic StringProcessor(string? encodingName, CountType countType = default)\r\n    : this(GetEncoding(encodingName), countType)\r\n{\r\n}\r\n\r\npublic StringProcessor(Encoding? encoding, CountType byteCountType = default)\r\n    : base(byteCountType.FixedCount)\r\n{\r\n    Encoding = encoding ?? .....\r\n   // rest of constructor\r\n}\r\n```\r\n\r\nConstructors, after:\r\n\r\n```c#\r\npublic StringProcessor() : this(default(Encoding));\r\n\r\npublic StringProcessor(CountType countType) : this(default(Encoding), countType);\r\n\r\npublic StringProcessor(string? encodingName, CountType countType = default)\r\n    : this(GetEncoding(encodingName), countType);\r\n\r\npublic StringProcessor(Encoding? encoding, CountType byteCountType = default)\r\n    : base(byteCountType.FixedCount)\r\n{\r\n    Encoding = encoding ?? .....\r\n   // rest of constructor\r\n}\r\n```\r\n\r\nEmpty virtual methods, before:\r\n\r\n```c#\r\npublic abstract class ClientConnection\r\n{\r\n    // Required:\r\n\r\n    public abstract void Authenticate(string username, string password);\r\n\r\n    public abstract void DispatchMessage(string message);\r\n\r\n    // Optional:\r\n\r\n    protected virtual void ProcessElevationRequest(ElevationRequest request)\r\n    {\r\n    }\r\n\r\n    protected virtual void OnHeartbeatReceived()\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nEmpty virtual methods, after:\r\n```c#\r\npublic abstract class ClientConnection\r\n{\r\n    // Required:\r\n\r\n    public abstract void Authenticate(string username, string password);\r\n\r\n    public abstract void DispatchMessage(string message);\r\n\r\n    // Optional:\r\n\r\n    protected virtual void ProcessElevationRequest(ElevationRequest request);\r\n\r\n    protected virtual void OnHeartbeatReceived();\r\n}\r\n```",
    "closed_at": "2020-01-22T09:29:18Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1700111?v=4",
        "events_url": "https://api.github.com/users/mikernet/events{/privacy}",
        "followers_url": "https://api.github.com/users/mikernet/followers",
        "following_url": "https://api.github.com/users/mikernet/following{/other_user}",
        "gists_url": "https://api.github.com/users/mikernet/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mikernet",
        "id": 1700111,
        "login": "mikernet",
        "node_id": "MDQ6VXNlcjE3MDAxMTE=",
        "organizations_url": "https://api.github.com/users/mikernet/orgs",
        "received_events_url": "https://api.github.com/users/mikernet/received_events",
        "repos_url": "https://api.github.com/users/mikernet/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mikernet/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mikernet/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mikernet"
    },
    "comments": 7,
    "comments_url": "https://api.github.com/repos/dotnet/csharplang/issues/3119/comments",
    "created_at": "2020-01-22T08:08:18Z",
    "events_url": "https://api.github.com/repos/dotnet/csharplang/issues/3119/events",
    "html_url": "https://github.com/dotnet/csharplang/issues/3119",
    "id": 553374722,
    "labels": [],
    "labels_url": "https://api.github.com/repos/dotnet/csharplang/issues/3119/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1NTMzNzQ3MjI=",
    "number": 3119,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 4,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/dotnet/csharplang/issues/3119/reactions"
    },
    "repository_url": "https://api.github.com/repos/dotnet/csharplang",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/dotnet/csharplang/issues/3119/timeline",
    "title": "Bodyless Constructors and Methods",
    "updated_at": "2020-01-22T09:29:19Z",
    "url": "https://api.github.com/repos/dotnet/csharplang/issues/3119",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1700111?v=4",
        "events_url": "https://api.github.com/users/mikernet/events{/privacy}",
        "followers_url": "https://api.github.com/users/mikernet/followers",
        "following_url": "https://api.github.com/users/mikernet/following{/other_user}",
        "gists_url": "https://api.github.com/users/mikernet/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mikernet",
        "id": 1700111,
        "login": "mikernet",
        "node_id": "MDQ6VXNlcjE3MDAxMTE=",
        "organizations_url": "https://api.github.com/users/mikernet/orgs",
        "received_events_url": "https://api.github.com/users/mikernet/received_events",
        "repos_url": "https://api.github.com/users/mikernet/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mikernet/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mikernet/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mikernet"
    }
}