{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Paste the following code in VB type.\r\n```\r\n        /// <summary>\r\n        /// Generate a list containing the given field and all dependencies\r\n        /// of that field that require evaluation. The list is ordered by\r\n        /// dependencies, with fields with no dependencies first. Cycles are\r\n        /// broken at the first field lexically in the cycle. If multiple threads\r\n        /// call this method with the same field, the order of the fields\r\n        /// returned should be the same, although some fields may be missing\r\n        /// from the lists in some threads as other threads evaluate fields.\r\n        /// </summary>\r\n        internal static void OrderAllDependencies(\r\n            this SourceFieldSymbolWithSyntaxReference field,\r\n            ArrayBuilder<FieldInfo> order,\r\n            bool earlyDecodingWellKnownAttributes)\r\n        {\r\n            Debug.Assert(order.Count == 0);\r\n\r\n            var graph = PooledDictionary<SourceFieldSymbolWithSyntaxReference, Node<SourceFieldSymbolWithSyntaxReference>>.GetInstance();\r\n\r\n            CreateGraph(graph, field, earlyDecodingWellKnownAttributes);\r\n\r\n            Debug.Assert(graph.Count >= 1);\r\n            CheckGraph(graph);\r\n\r\n#if DEBUG\r\n            var fields = ArrayBuilder<SourceFieldSymbolWithSyntaxReference>.GetInstance();\r\n            fields.AddRange(graph.Keys);\r\n#endif\r\n\r\n            OrderGraph(graph, order);\r\n\r\n#if DEBUG\r\n            // Verify all entries in the graph are in the ordered list.\r\n            var map = new HashSet<SourceFieldSymbolWithSyntaxReference>(order.Select(o => o.Field).Distinct());\r\n            Debug.Assert(fields.All(f => map.Contains(f)));\r\n            fields.Free();\r\n#endif\r\n\r\n            graph.Free();\r\n        }\r\n```\r\n\r\nObserved:\r\n```\r\n        /// <summary>\r\n        /// Generate a list containing the given field And all dependencies\r\n        /// of that field that require evaluation. The list Is ordered by\r\n        /// dependencies, with fields with no dependencies first. Cycles are\r\n        /// broken at the first field lexically in the cycle. If multiple threads\r\n        /// call this method with the same field, the order of the fields\r\n        /// returned should be the same, although some fields may be missing\r\n        /// from the lists in some threads as other threads evaluate fields.\r\n        /// </summary>\r\n        internal Static void OrderAllDependencies(\r\n            this SourceFieldSymbolWithSyntaxReference field,\r\n            ArrayBuilder<FieldInfo> order,\r\n            bool earlyDecodingWellKnownAttributes)\r\n        {\r\n            Debug.Assert(order.Count == 0);\r\n\r\n            var graph = PooledDictionary < SourceFieldSymbolWithSyntaxReference, Node<SourceFieldSymbolWithSyntaxReference>>.GetInstance();\r\n\r\n            CreateGraph(graph, field, earlyDecodingWellKnownAttributes);\r\n\r\n            Debug.Assert(graph.Count >= 1);\r\n            CheckGraph(graph);\r\n\r\n#If DEBUGThen\r\n            var fields = ArrayBuilder < SourceFieldSymbolWithSyntaxReference > .GetInstance();\r\n            fields.AddRange(graph.Keys);\r\n#End If\r\n\r\n            OrderGraph(graph, order);\r\n\r\n#if DEBUGThen\r\n            // Verify all entries in the graph are in the ordered list.\r\n            var map = New HashSet < SourceFieldSymbolWithSyntaxReference > (order.Select(o >= o.Field).Distinct());\r\n            Debug.Assert(fields.All(f => map.Contains(f)));\r\n            fields.Free();\r\n#End If\r\n\r\n            graph.Free();\r\n        }\r\n```\r\n\r\nNote, conditional compilation directive is changed to ```#if DEBUGThen```. Expected ```#if DEBUG Then```.\r\n\r\nAlso, if I position the cursor at the end of ```#if DEBUGThen``` and press enter, the result is the following:\r\n```\r\n#If DEBUGThenThen\r\n\r\n#End If\r\n```\r\n\r\nThe space is missing and ```#End If``` is added. This is unexpected, ```#End If``` is already present and shouldn't be added.",
    "closed_at": null,
    "closed_by": null,
    "comments": 3,
    "comments_url": "https://api.github.com/repos/dotnet/roslyn/issues/50117/comments",
    "created_at": "2020-12-23T17:17:07Z",
    "events_url": "https://api.github.com/repos/dotnet/roslyn/issues/50117/events",
    "html_url": "https://github.com/dotnet/roslyn/issues/50117",
    "id": 773942591,
    "labels": [
        {
            "color": "0e8a16",
            "default": true,
            "description": "The issue is \"up for grabs\" - add a comment if you are interested in working on it",
            "id": 165001072,
            "name": "help wanted",
            "node_id": "MDU6TGFiZWwxNjUwMDEwNzI=",
            "url": "https://api.github.com/repos/dotnet/roslyn/labels/help%20wanted"
        },
        {
            "color": "5319e7",
            "default": false,
            "description": null,
            "id": 166377917,
            "name": "Area-IDE",
            "node_id": "MDU6TGFiZWwxNjYzNzc5MTc=",
            "url": "https://api.github.com/repos/dotnet/roslyn/labels/Area-IDE"
        },
        {
            "color": "1d76db",
            "default": false,
            "description": "",
            "id": 166377961,
            "name": "Language-VB",
            "node_id": "MDU6TGFiZWwxNjYzNzc5NjE=",
            "url": "https://api.github.com/repos/dotnet/roslyn/labels/Language-VB"
        },
        {
            "color": "fef2c0",
            "default": false,
            "description": null,
            "id": 320110822,
            "name": "Concept-Continuous Improvement",
            "node_id": "MDU6TGFiZWwzMjAxMTA4MjI=",
            "url": "https://api.github.com/repos/dotnet/roslyn/labels/Concept-Continuous%20Improvement"
        },
        {
            "color": "1d76db",
            "default": false,
            "description": "Code formatter and/or smart indent",
            "id": 1207033431,
            "name": "IDE-Formatter",
            "node_id": "MDU6TGFiZWwxMjA3MDMzNDMx",
            "url": "https://api.github.com/repos/dotnet/roslyn/labels/IDE-Formatter"
        }
    ],
    "labels_url": "https://api.github.com/repos/dotnet/roslyn/issues/50117/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 3626,
        "created_at": "2015-01-15T20:46:02Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/146967?v=4",
            "events_url": "https://api.github.com/users/jaredpar/events{/privacy}",
            "followers_url": "https://api.github.com/users/jaredpar/followers",
            "following_url": "https://api.github.com/users/jaredpar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaredpar/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jaredpar",
            "id": 146967,
            "login": "jaredpar",
            "node_id": "MDQ6VXNlcjE0Njk2Nw==",
            "organizations_url": "https://api.github.com/users/jaredpar/orgs",
            "received_events_url": "https://api.github.com/users/jaredpar/received_events",
            "repos_url": "https://api.github.com/users/jaredpar/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jaredpar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaredpar/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jaredpar"
        },
        "description": "This represents work which is not planned for a specific release.\r\n\r\n<!---\r\n@huboard:{\"order\":0.25}\r\n-->\r\n",
        "due_on": null,
        "html_url": "https://github.com/dotnet/roslyn/milestone/2",
        "id": 937398,
        "labels_url": "https://api.github.com/repos/dotnet/roslyn/milestones/2/labels",
        "node_id": "MDk6TWlsZXN0b25lOTM3Mzk4",
        "number": 2,
        "open_issues": 5357,
        "state": "open",
        "title": "Backlog",
        "updated_at": "2023-06-07T17:42:17Z",
        "url": "https://api.github.com/repos/dotnet/roslyn/milestones/2"
    },
    "node_id": "MDU6SXNzdWU3NzM5NDI1OTE=",
    "number": 50117,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/dotnet/roslyn/issues/50117/reactions"
    },
    "repository_url": "https://api.github.com/repos/dotnet/roslyn",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/dotnet/roslyn/issues/50117/timeline",
    "title": "Invalid formatting of `#If` directive in VB",
    "updated_at": "2021-01-05T20:58:09Z",
    "url": "https://api.github.com/repos/dotnet/roslyn/issues/50117",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10522107?v=4",
        "events_url": "https://api.github.com/users/AlekseyTs/events{/privacy}",
        "followers_url": "https://api.github.com/users/AlekseyTs/followers",
        "following_url": "https://api.github.com/users/AlekseyTs/following{/other_user}",
        "gists_url": "https://api.github.com/users/AlekseyTs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/AlekseyTs",
        "id": 10522107,
        "login": "AlekseyTs",
        "node_id": "MDQ6VXNlcjEwNTIyMTA3",
        "organizations_url": "https://api.github.com/users/AlekseyTs/orgs",
        "received_events_url": "https://api.github.com/users/AlekseyTs/received_events",
        "repos_url": "https://api.github.com/users/AlekseyTs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/AlekseyTs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AlekseyTs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/AlekseyTs"
    }
}